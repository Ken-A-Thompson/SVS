(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    349009,       6944]
NotebookOptionsPosition[    344937,       6819]
NotebookOutlinePosition[    345295,       6835]
CellTagsIndexPosition[    345252,       6832]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Supporting ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " notebook for \[OpenCurlyDoubleQuote]",
 "Patterns of speciation and parallel genetic evolution under adaptation from \
standing variation\[CloseCurlyDoubleQuote]"
}], "Title",
 CellChangeTimes->{{3.739793910714315*^9, 3.739793947802144*^9}}],

Cell["\<\
Ken Thompson, Matthew Osmond, Dolph Schluter\
\>", "Subtitle",
 CellChangeTimes->{{3.739793957843244*^9, 3.739793967026618*^9}}],

Cell["\<\
Biodiversity Research Centre and Department of Zoology, University of British \
Columbia\
\>", "Subsubtitle",
 CellChangeTimes->{{3.739793976083177*^9, 3.739793999466462*^9}}],

Cell[CellGroupData[{

Cell["Fraction of (non)overlap", "Section",
 CellChangeTimes->{{3.739794055708232*^9, 3.739794062018721*^9}, {
  3.739796062834219*^9, 3.7397960703545837`*^9}}],

Cell[TextData[{
 "Here we are interested in the volume of the intersection between two \
m-dimensional spheres, with centres at distance ",
 StyleBox["D",
  FontSlant->"Italic"],
 " from one another, with radii ",
 StyleBox["R1",
  FontSlant->"Italic"],
 " and ",
 StyleBox["R2.",
  FontSlant->"Italic"],
 " We follow Matt\[CloseCurlyQuote]s answer at ",
 ButtonBox["https://math.stackexchange.com/questions/162250/how-to-compute-\
the-volume-of-intersection-between-two-hyperspheres",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://math.stackexchange.com/questions/162250/how-to-compute-the-\
volume-of-intersection-between-two-hyperspheres"], None},
  ButtonNote->
   "https://math.stackexchange.com/questions/162250/how-to-compute-the-volume-\
of-intersection-between-two-hyperspheres"],
 "."
}], "Text",
 CellChangeTimes->{{3.726934256850663*^9, 3.726934322090904*^9}, {
  3.739794088685286*^9, 3.739794135267116*^9}, {3.739794407932859*^9, 
  3.7397944079366493`*^9}}],

Cell["\<\
The volume of the intersection is the volume of two hyperspherical caps, \
glued at a hyperplane.\
\>", "Text",
 CellChangeTimes->{{3.7269343428766747`*^9, 3.726934367499281*^9}, {
  3.739795324411892*^9, 3.739795324988036*^9}}],

Cell["The heights of the cap bases are ", "Text",
 CellChangeTimes->{{3.726934144479258*^9, 3.726934182902323*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c1", "[", 
   RowBox[{"D_", ",", "R1_", ",", "R2_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["D", "2"], "+", 
    SuperscriptBox["R1", "2"], "-", 
    SuperscriptBox["R2", "2"]}], 
   RowBox[{"2", "D"}]]}], "\n", 
 RowBox[{
  RowBox[{"c2", "[", 
   RowBox[{"D_", ",", "R1_", ",", "R2_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["D", "2"], "-", 
    SuperscriptBox["R1", "2"], "+", 
    SuperscriptBox["R2", "2"]}], 
   RowBox[{"2", "D"}]]}]}], "Input",
 CellChangeTimes->{{3.726934191227734*^9, 3.726934216722145*^9}, {
  3.739794153746372*^9, 3.739794188836597*^9}}],

Cell[TextData[{
 "Computing the volume of these caps requires some fancy integration (",
 ButtonBox["Li 2001. Concise Formulas for the Area and Volume of a \
Hyperspherical Cap. Asian Journal of Mathematics and Statistics 4:66-70",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://docsdrive.com/pdfs/ansinet/ajms/2011/66-70.pdf"], None},
  ButtonNote->"http://docsdrive.com/pdfs/ansinet/ajms/2011/66-70.pdf"],
 "). It turns out the volume of a cap can be written"
}], "Text",
 CellChangeTimes->{{3.726934414679351*^9, 3.726934458630702*^9}, {
  3.7269345283204517`*^9, 3.7269345345930634`*^9}, {3.7397942043329277`*^9, 
  3.7397942536914597`*^9}, {3.739794532372765*^9, 3.739794532375782*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "[", 
   RowBox[{"m_", ",", "R_", ",", "c_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[GreaterEqual]", "0"}], ",", 
    RowBox[{
     FractionBox["1", "2"], 
     FractionBox[
      SuperscriptBox["\[Pi]", 
       RowBox[{"m", "/", "2"}]], 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["m", "2"], "+", "1"}], "]"}]], 
     SuperscriptBox["R", "m"], 
     RowBox[{"BetaRegularized", "[", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{
         SuperscriptBox["c", "2"], "/", 
         SuperscriptBox["R", "2"]}]}], ",", 
       FractionBox[
        RowBox[{"m", "+", "1"}], "2"], ",", 
       FractionBox["1", "2"]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox[
       SuperscriptBox["\[Pi]", 
        RowBox[{"m", "/", "2"}]], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["m", "2"], "+", "1"}], "]"}]], 
      SuperscriptBox["R", "m"]}], "-", 
     RowBox[{
      FractionBox["1", "2"], 
      FractionBox[
       SuperscriptBox["\[Pi]", 
        RowBox[{"m", "/", "2"}]], 
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["m", "2"], "+", "1"}], "]"}]], 
      SuperscriptBox["R", "m"], 
      RowBox[{"BetaRegularized", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox["c", "2"], "/", 
          SuperscriptBox["R", "2"]}]}], ",", 
        FractionBox[
         RowBox[{"m", "+", "1"}], "2"], ",", 
        FractionBox["1", "2"]}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.72693383714892*^9, 3.7269340008209753`*^9}, {
  3.726934044503016*^9, 3.726934045158896*^9}, {3.726934495396943*^9, 
  3.726934567619012*^9}, {3.739794271475958*^9, 3.739794288699346*^9}, {
  3.7397943398445797`*^9, 3.739794348148819*^9}, {3.739794837825508*^9, 
  3.739794839519923*^9}}],

Cell[TextData[{
 "where ",
 StyleBox["m ",
  FontSlant->"Italic"],
 "is the dimension, ",
 StyleBox["R",
  FontSlant->"Italic"],
 " is the radius of the hypersphere, and ",
 StyleBox["c",
  FontSlant->"Italic"],
 " is the height of the cap base."
}], "Text",
 CellChangeTimes->{{3.7269345735319443`*^9, 3.726934581634309*^9}, {
  3.7397942958437443`*^9, 3.739794307635591*^9}, {3.739794368579204*^9, 
  3.73979437817999*^9}}],

Cell["\<\
The volume of the intersection is then the sum of the volume of each cap\
\>", "Text",
 CellChangeTimes->{{3.726934467710885*^9, 3.72693447495124*^9}, {
   3.72693458646661*^9, 3.726934593818706*^9}, {3.73979459350069*^9, 
   3.739794610540721*^9}, 3.739795299918751*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vint", "=", 
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"m", ",", "R1", ",", 
      RowBox[{"c1", "[", 
       RowBox[{"D", ",", "R1", ",", "R2"}], "]"}]}], "]"}], "+", 
    RowBox[{"V", "[", 
     RowBox[{"m", ",", "R2", ",", 
      RowBox[{"c2", "[", 
       RowBox[{"D", ",", "R1", ",", "R2"}], "]"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.726934480640053*^9, 3.726934483401046*^9}, {
   3.726934597156065*^9, 3.7269346833027*^9}, 3.7269350779594584`*^9, {
   3.739794615856851*^9, 3.739794627968871*^9}}],

Cell[TextData[{
 "In our case both hyperspheres initially have the same radii, ",
 StyleBox["R1=R2=d",
  FontSlant->"Italic"],
 ", as both optima are distance ",
 StyleBox["d",
  FontSlant->"Italic"],
 " from the mean ancestral phenotype.  The distance between the centres of \
the hyperspheres depends on that radius and the angle between the optima \
(which we can restrict between 0 and 180 degress because 180 to 360 degrees \
is just the same thing reflected)"
}], "Text",
 CellChangeTimes->{{3.726935283793537*^9, 3.72693531720929*^9}, {
  3.726935711825852*^9, 3.72693573848249*^9}, {3.7397946334711237`*^9, 
  3.739794769836793*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VintUs", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Vint", "/.", 
       RowBox[{"R1", "\[Rule]", "d"}]}], "/.", 
      RowBox[{"R2", "\[Rule]", "d"}]}], "/.", 
     RowBox[{"D", "\[Rule]", 
      RowBox[{"d", 
       SqrtBox[
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]]}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"m", ">", "0"}], ",", 
      RowBox[{"0", "\[LessEqual]", "\[Theta]", "\[LessEqual]", "\[Pi]"}]}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.726935274039616*^9, 3.726935274406526*^9}, {
   3.7269353218187923`*^9, 3.7269353356619*^9}, {3.726935405520204*^9, 
   3.7269354393935547`*^9}, {3.726935694805949*^9, 3.7269357089420767`*^9}, 
   3.72693574653657*^9, {3.739794773249771*^9, 3.739794783241951*^9}, 
   3.739794822962708*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["d", "m"], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{"m", "/", "2"}]], " ", 
   RowBox[{"BetaRegularized", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]", "2"], "]"}], "2"], ",", 
     FractionBox[
      RowBox[{"1", "+", "m"}], "2"], ",", 
     FractionBox["1", "2"]}], "]"}]}], 
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "+", 
    FractionBox["m", "2"]}], "]"}]]], "Output",
 CellChangeTimes->{
  3.726935746851061*^9, 3.7278101517136917`*^9, 3.7286734427305803`*^9, {
   3.732990834383102*^9, 3.732990867860344*^9}, 3.733511132839056*^9, {
   3.7397948263404922`*^9, 3.7397948426915073`*^9}}]
}, Open  ]],

Cell["\<\
It looks like things are working (check areas/volumes of circle/sphere)\
\>", "Text",
 CellChangeTimes->{{3.7269350849226313`*^9, 3.726935104946698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"VintUs", "/.", 
   RowBox[{"\[Theta]", "\[Rule]", "0"}]}], "/.", 
  RowBox[{"m", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.72693503249265*^9, 3.726935068917179*^9}, {
  3.726935106679359*^9, 3.726935108878891*^9}, {3.726935339292719*^9, 
  3.726935339455789*^9}, {3.726935398821889*^9, 3.726935400352387*^9}, {
  3.7269356738184443`*^9, 3.726935674013741*^9}, {3.726935761030375*^9, 
  3.7269357614053087`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["d", "2"], " ", "\[Pi]"}], ",", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox["d", "3"], " ", "\[Pi]"}], "3"]}], "}"}]], "Output",
 CellChangeTimes->{{3.7269350199984426`*^9, 3.726935069137694*^9}, 
   3.726935109141416*^9, 3.726935340258143*^9, {3.726935400870172*^9, 
   3.726935408209566*^9}, 3.7269354414083*^9, 3.726935674474936*^9, 
   3.726935761925003*^9, 3.727810151757272*^9, 3.72867344494552*^9, {
   3.7329908344337797`*^9, 3.732990867970935*^9}, 3.733511132907158*^9, 
   3.739794850760009*^9}]
}, Open  ]],

Cell[TextData[{
 "(note that here ",
 StyleBox["d ",
  FontSlant->"Italic"],
 "is the distance to the optima, which is the radius of a hypersphere, not \
the diameter)."
}], "Text",
 CellChangeTimes->{{3.739794879384314*^9, 3.73979491048067*^9}}],

Cell["\<\
Another check: no overlap if angle is 180 degrees (for any radius or \
dimension)\
\>", "Text",
 CellChangeTimes->{{3.726935251696825*^9, 3.726935263015491*^9}, {
  3.726935352411889*^9, 3.726935352706101*^9}, {3.739794919544784*^9, 
  3.739794950145796*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"VintUs", "/.", 
    RowBox[{"\[Theta]", "\[Rule]", "\[Pi]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", ">", "0"}], ",", 
     RowBox[{"m", ">", "0"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.726935124863653*^9, 3.726935247039892*^9}, {
   3.726935343446248*^9, 3.7269353435844917`*^9}, {3.7269356764525957`*^9, 
   3.726935676647972*^9}, {3.726935763501696*^9, 3.726935763885611*^9}, 
   3.739794931484264*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.726935126101323*^9, 3.726935172340225*^9}, {
   3.726935203471883*^9, 3.726935247894785*^9}, 3.7269353439934483`*^9, {
   3.726935412610427*^9, 3.726935442475878*^9}, 3.726935676966209*^9, 
   3.726935764208787*^9, 3.727810151808775*^9, 3.728673446245871*^9, {
   3.732990834483439*^9, 3.732990868071455*^9}, 3.733511132953518*^9, 
   3.7397949329022837`*^9}]
}, Open  ]],

Cell["Then the fraction overlap is", "Text",
 CellChangeTimes->{{3.726935669273848*^9, 3.72693567070405*^9}, {
  3.7269357549974213`*^9, 3.726935757139179*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vfraction", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    FractionBox["VintUs", 
     RowBox[{"VintUs", "/.", 
      RowBox[{"\[Theta]", "\[Rule]", "0"}]}]], ",", 
    RowBox[{"m", "\[GreaterEqual]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.726935758388949*^9, 3.7269357944220543`*^9}, {
  3.733511180509317*^9, 3.7335111859818*^9}}],

Cell[BoxData[
 RowBox[{"BetaRegularized", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     FractionBox["\[Theta]", "2"], "]"}], "2"], ",", 
   FractionBox[
    RowBox[{"1", "+", "m"}], "2"], ",", 
   FractionBox["1", "2"]}], "]"}]], "Output",
 CellChangeTimes->{{3.726935770096477*^9, 3.726935795809393*^9}, 
   3.727810151878778*^9, 3.7286734472955*^9, {3.732990834532537*^9, 
   3.732990868171929*^9}, 3.733511132987509*^9, 3.733511186429644*^9, 
   3.739794968433855*^9}]
}, Open  ]],

Cell[TextData[{
 "which is independent of ",
 StyleBox["d.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.726935782924067*^9, 3.726935786723925*^9}, {
  3.739794980499914*^9, 3.7397949831787653`*^9}}],

Cell["\<\
Plot the fraction overlap as a function of the angle of divergence, for many \
dimensions\
\>", "Text",
 CellChangeTimes->{{3.7269362110410624`*^9, 3.726936219857037*^9}, {
  3.7397949996938257`*^9, 3.739795016971465*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nms", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vfraction", "/.", 
       RowBox[{"\[Theta]", "\[Rule]", 
        RowBox[{"\[Theta]", " ", 
         RowBox[{"\[Pi]", "/", "180"}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "nms"}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "180"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"m", ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "nms"}], "}"}]}], "]"}], ",", 
        RowBox[{
        "LegendLabel", "\[Rule]", 
         "\"\<\!\(\*SuperscriptBox[\(Dimension\), \(\\\ \)]\)(m)\>\""}]}], 
       "]"}], ",", 
      RowBox[{"Scaled", "@", 
       RowBox[{"{", 
        RowBox[{"0.85", ",", "0.6"}], "}"}]}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "45", ",", "90", ",", "135", ",", "180"}], "}"}], 
      ",", "Automatic"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<Angle (\[Theta], degrees)\>\"", "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Fraction overlap\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.726936151330553*^9, 3.726936206279665*^9}, {
  3.7269362557745323`*^9, 3.726936258263256*^9}, {3.7269363285046673`*^9, 
  3.726936379073349*^9}, {3.72693641043766*^9, 3.7269365674089212`*^9}, {
  3.726936658525569*^9, 3.7269367458647127`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
fg==
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
wuk=
       "]]}, 
     {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwVk3c41+8XxmWUyJasREhGhZD5PCdEZCUVWZ/1fheVPSMkGrKpVAqF7Egy
SomGSkI2lU2I9JVk/vz+Otdznes817lf932kaO7WBDMTE5P+Oiam/1fPxt1y
5U2N6GaDwvDq6jRGU5nqNMMCvHqY4iq4MI370jSSZQyfY0ZW+9TO2WlcEhBa
x2bYgEmHh/8Oj01j0WFp+zmDXmx92kUis2kaW4jNZU8ZTOKfl2b6DmZM41Ma
3xvGDZbw9BnO3Tf0p/Gfui/fxww2Qd6dXjbLyCmcObzgp+2zFbw/CpxgnZzE
Nic5d5n2y8IRp/RMVY8JLLY9LvTakBKoZqqxbl39gZWyfDYtYlVQ6hZtvO09
hjO8ZKzKGtSBVq3hLsk+ipv88L6ILC0YCDFIuRQ5jKWc2iwcz+hByp6u2vP8
Q5hYfVq0NRAg85N2zEzNAN4yUbFhC00f6izoC2qO/dhnr25vooIhbB9SSb0u
1odpP5fqBcYPQKynyPG7bV9xob73hrTPxkBpSWNRs+vBmbOurwqSTUC59tjr
P9u68Px+4U+vQw+BYE2kYUdLO/7KxDLTTzUH0+nm5sLCVuwm7h5/QdoSYn80
OOnVt+Ail/qa65FWYBh01YToaMLn/hP5q+hyGJT7C6fuGjfiP6ZGx945W0M0
7t9yqO0D1rJP2D98+Ag0VrErWJa8wy0id11f77UBCZeXLL4Lr7Fo9sXnOTuP
gt8nipG7YS2u6FMws+A6Bpy3+HYpjbzEEq2/Tvr9PAYdif+13X3xDO+9nlDw
oO84aPVX60vkluO7rP/tTqyzhV6tMVOqzhP8dP+e7shKO2AtOK4kMl6MU/ZF
8S3lnYBQWUuULViAP/dkXdobbQ/13lwS2xwf4jLzVBmPMAcw1lZs5B+7j2fO
HmFyYzhCfvZk7vKDe/iPkfypKQMnYLe9EXHodgqO33gmpMLYCQ52Xt0pHZ6C
FRqKksMPOcFgZkstp2sKphxWeyV0xAmU/LNf8min4AZ7LIppThDRLbZtoPsm
vu9xtCEuzAmuvnxzO2/bTWxx+4KySrUTHNFeyblTdh3n/Oya99ZwBsXTM5OX
+JLw0mMBwWUtZ/g5VMVcs5KIrQLM91zSc4YTSh9Prp9MxPPMr4gUQ2eQtlna
+OxtIjYRzml5bu0MhmWmQnXBiXhc36+Azd0ZtJ7uiTaZSMBKKfyUmw+dgenw
3e8bW+KxbUYW3XETBcbbJzysomLwPa3kRWNuCqRevFrqeyoGDzaHJ6nyUqDl
4g2ucqMY7MZMqdsgSAGm70zNMSwxOIIuKv1YjALs0kcFo0Ki8SPZuIH1ihTw
Unx8tSTwGl6fF0AtNqFA9N8Lhg4RV3Hp40POLJcpQBNnYZMdi8THGsoCP12h
wFR51IuSxkg8P7wt+WYUBSYvMq0eKYvEuiKz9YqxFDCV6hrrDI/Er0NTVW2u
UyBk6cyuQYlI3Gr2ky3rAQVu5aHR6RMReG4ktsCohgLCM951dwfCsZZYy7+r
/yjwZjGOPrkrDJt52YgcWqSAZGmu54RIGKa8b9fctEyBnSu3bi6xheEr/j3+
sUxUUFZ9y5b3PBS3fxn6k7iBCkb8VuertoVin+i/M3c2U4HH11U4cvI8LloW
Hy9UoYLGu9gC9fQgXGuTttF9LxUytg2JJgUH4bZ8KXlldSowiTTo8tsF4SW7
Hacea1Khqe+umS9/ED70dM/IU0wFNh5mv4ZL5/CYm/7AS3Mq/ErVqy/0DcTS
fSe7m12o4LURektP++OWSR3WytNUOCI5UONn4o/D//HsTj9LBZ8CibNOcv64
j7/igpsnFVaEJKruDPrh1APs8pyBVIgqNvP/6OiHBfNz/A2vUGEnS9KWcVtf
zOr3Q7A8mwpx2jxvA128cWl4NbqXQ4X959xp2Ye8MS0u4VRkHhXy+gerZ3d5
45ocredHiqigHWNvPffbCwf3XKX/KqOCVeSiTVSIF54Fhcfyb6hgGzky1XfH
Ew9xnrZMHaSC+CVhcaOv7vjXrapF2jAVRtQme6QK3fGSHEeO/CgVGmckjfae
d8cChrlM5eNU2CX3JnxuqzvWDx4taZ5Z0yd9L2SB6obTJumCG5hoYEDZUNDx
3xl84pNDl6c4DVoazGQH9FwxaV8QqSlBg6dTRL2CoCv2+rGosrqNBhZn/Twy
x13wVbY7UdHSNPgzdkRPIcUFV+h16TxUoIHZ4vpPQX9O4c1FR+/1atJgg4js
slDlSdwUa0E3PkqDC+h6gAqdwP4t0yJqx2nw2HQp6ZgugSWEEpok7Wgguvjv
z6PNBD5z94veggMNDAnUvVLPwOwFtsKFDBpUXKtB7KoMvP897RO/Dw0+6MeG
3Oei48cs/vu+JdJA5b6bRM0PCrYzFp76kEyDnR3P1YTfUzDTtcrM8hs00KQp
8qflULAF/xJfwm0a+Mb5+WmeouBxyQuTBvdpIN0g6KLwxRlLo2sZuSU0uF2V
6XH/hyNODkjj9G2igYaplb2t7Qlc8M/2nW0LDf5rdAjmlz6B35zjv6jbSgPB
cwl54lN2eC44coGlkwZBJbvnt0XaYbsLp38kfqdBt7bAYNdTWywRte9d8dQa
L8v20o6dx3HOnc/hk5vocO9wVfSooQ2uEb+KmrjpwOHJe5RHxAZ33dVfKOWl
gwHXfOn5n0cwR3qZZ5AgHd6pLXLvunkEn828Q+EQpwP7LGNv409rrFp4Eu1U
pEPCU5Oz3Q8P4+cvVv/RTejArc0GRrctsMorNU25Q3Tg5L9zaOS4Bc6uc/Eb
N6PDss6JjJnNFjih/stvDys66EaxnTqYZI7JlocT54/TwfTyTqHxRDPMN2L5
9SZBh0HXCZyaZYpJrvSajxfoELD89n3FZmPcw9O2EnuRDpaBljYT342wFT+H
nnUkHc5qvPUMyjPCOlt8Kjuv0OH3U+L5YzDCvFIHHw/H0UGg0HfJ0/MArlL7
9WD1Lh1Oq/todgwaYB4HuLy3ig6haXro1Mb9WFLw3Wfx53QopCWp/egGrNxg
Lrz+BR0k5VmY3hcAtta1z+18tdZnlhZ7cBhwsrjfx/Pv6eDYm6J4EmMs+jWf
p75zjQ/d06X4li5WuK5qW9JNh9joSsqWg7pYx7wy/XYvHZqU7rkr/dXBDtVv
Vc720UHxw3tWx+M6OO1u/xH+MTroT5SEV2/TxjJOW1Ic/tJhVoYMzf28D6sJ
3es78I8OlamGw2FX9uEDjTLyexbpUBzKfubv/n2YRKpV61bpoBcuo/biqQbO
lTDvzV7PgBqNfM1bD9Xx7u/hkjObGZDR9Ovss6y9WIsylROpxgAbC12jCC5l
nH3rl7eFBgNiA3h6uCr2YMEvv9EWTQYkr3eu/nt0D5468Lc1R4cBCpJkg3fy
bpypyLSuQZ8Bfh+11UfFdmHuv3x2/IcZIBJo6BZ3RAEHKwvK9FgzYLvH1re6
K/L4h4vQ9AMbBvDXNTtX5srj172ikeq2a/NyGTvEWORxYK10ia0zA5TKu7oc
XsrhoRj1jWlnGcAk6dda5SCLD7/b13rSnQEfrJV9agVk8Qsm7TRlTwbU2rxY
jfgog295I/VaHwZU28WPquvJYAs7Y+pwEAM+vouIlZGXxpUydpWKUQwQNwiU
ld0uhXc42UfMXmPABTdWKZMhSZx809GyOoYBwuoOJYIPJbEbB23YIoEBp/U7
vt7dLYllfrnyeaUwIOVdQsCjKAkc+yzYpSKbAapJl3Z8lhTDZ1VvagXkMCDv
YnrbYpUoNsst2aiZx4C+CCEP42OimOPmSG554drbeGX93ngRHOllNf70CQN8
OtIipfiEcbC8zOmy2jVeqe04/sBmbJ+OdHxfM+DXI7rpk1+CWHuLHaf6Wwac
kxW9054qiOdZY/OfvGdA5gW+ndzzAti77+9EadOaX+cUOfir+LHrzY9nHn9j
gKA5dd1zV15swj2i69XHgJKTJVY9Mrx4ZyQTl+oAAxR9zlk+ecmDR7zUC0uG
13g2tzN9K+bGVIu0n8WTDBB9PHnv4sNN2JbN2+3RAgM8eqbTJgbY8b7gGOS+
tMbThLWS8GTHQv895N6zwgALbXcdYh07bu3rLSpaR4DZjZlbI7IbsNVzo+lC
dgKsQp3IxDA2bOwt6lEgREB7qhmkBDLj2rRLponCBOy4Utoov4UZ6zb8lgkQ
JaA47aqE0dN1WFn2Y5eBBAEalxWvcP9jwiIdQQY9sgT4ZeMnnZKrKJllbOsr
OQLO+a4zrfNeQdzKNvPZ8gS4mrImhb9fRsxXlQq9dhHQuGVXlvP5JTSh/VWI
Q52A8RMP/lawLSDypMnMtAYB7yxYNrq5/UN9SWUf2zQJaE0xKavsmketkzFh
GboEFJ10yJgr/4uq76FxTUMCutLKQtQT/6A45vTqk0cIoITmjFDKZxDHnk0p
5kcJUHCOEOM0mkER9gFee48TYHdRZqKj/RcKeGIlt3qCgP5jxU+ClqcRlVyX
cINGwHxU0bN/nyZRb+LZ08EMAubEwpkXOSfRsZddB2gkAbd/hFW2mU8gU+HH
C7tc1/RxNO0b7P2B9n6gMd54EmCf/fvynx2jqGiuEeV7E/B1QKzeNnwE7ZTW
EUnwJSC1Y0F9T/8wEg8WaHQIJIB/2X8ra+4QYtv9et9sGAFeFSqR884DKOyE
Mn93OAFIgYM5ra0fLVxKnXwZQUDt+Sszxy360dR3n4xrVwh4Gcfj0XKwD3Uk
yHJKxxMw832rv+WrXlSEuU6NJRCw6LSdzXe8B0X8nH1dmETA/g3l6ceEe5Cq
yesQzZsEvO5xv7w+vAvFMtF/m98jgKPQWFbpWjsiikwtBdIJaBCbPGDY2YZ0
HVQLOjMIMF7/dDpavg2Nl68j6VkEhKlE3zvT+QUZuad3BRSs7VeQzX2DaEZb
t17RQEUEJH/XUaG1NKHZD+5JLMUEWIjHNfToN6H7O7B5bCkBJ4/HNCs7NqLl
r19rHlQRILAum4XT+QNqvfZmq8tzAmbnNsRt9niP8rQKz+1+QUAnkv4aebke
2V4PVqt8RcCnUB617e/foidmYjmN9QTY2oU3SCXXoWsLzGzJHwionuZOVG6r
RbSccapdw9p+I8sjNWK1iJe1SmzoMwHknxGVfxU1aLQkIyC3eS0vadcOneap
QS+cr7a5fVn7T7DPf6TtBTrzzDbuXzsBIfZ6+eXU58jABSZfdBIQ8ET7Mp/G
MyS6ZadJRDcBB/fckq4XqEL1Xn+Zeb4REBVsFh0+Xo6kFW74yQwT0DK6PeTD
aila6Dj/5ccIAR+FDViyREpRUySh/GhszQ/XJmZbnccopF9tXGuSgC+jLz3i
rhejo3Hixqs/1/J9RcjF684jpKTHmvl6moCeVWOdTaJFqDvli6PlfwQMTeS3
lkI+KjF6ViX4h4C+dYYtgmO56Mrs/S3dc2v6Ihwu01JzkIaVVzNjYe2evzwy
8lPIRlwrdrsVlgg4oRwlmMKShYby91+bXl7zT0NPymnsAUrcwHfg3DoSKiTd
9W9/yUDPf3+192EhIbNP7y1ndToa/Zrn5cZGQvL46f19ZBrSfWKYTttIgoeG
VM5g1B1EpvGVO3CScN8rQeZyzS2UEPXt0zEuEsxk5wf7N6WgEUrAoikfCbqj
QbalI8mI1+wA/wEBEgaEqnwLvZKQzj5+ebyZhN9hgdkEfyKK5yo4tleEhPnP
PFR/wTj0bD7g7C4xEmrwpNz0q2g0MnggQm4rCZFrd2ifEIV0qr6XiEmR0Nzp
2dAcfwmRWQX1m6VJiA7sfmD+IgLFxwd+55ElwXdVKCad/SJ6FmQ0t1GOBDnJ
owNJbhfQCCnAxSpPwuxrjsPTX0MRr3Wf9IoCCZaz8tsO8J1HOnqF2vNKJEwO
mA0P+pxD8QLGpyaVSeA47zgs/9oXVa0IhI6okpB9pRZfzfdGwz/6rvepkXCj
ZfxLRpUn4m0rLOjWIKG1/Y/4wDd3pF1zrq5Vk4SczDEXlvgziJFv3N2ovabv
m3xDR4QLirshOFOvSwLJekotr5JEVRf6N9QhEmSFtYz7FBho6EyRRDWs8TP5
4LjQSkXctkHq5fokROzczCXn4oy0DA6alRiS0BKezlkXbY8YuzfT841IsKn7
XeDCbYtiRQYCsw6SsFeX++jMqA2qYH0Un2ZKwuHZkx2EgDUanA56eMuMBHYW
wV+8QpaIu+fgiyQLEvjtj3elJZoizbeb22KsSFgeDnnWlGCEaCUDE5etSVi5
+LOR3GiAYlIfMYfbkMB6YcpV8jtGFZeDRYKPkfDWMmz+o682GvAyUfazJaHz
DpdO52t1xOUkZOxxggTz4ies0s9UkKbJoKOrAwmnDGZ4a+KVEE2t2IfhRIL/
RHmVStUOFLPt/DUnyppf9lnMJ9qkUAWH6X1bGgnpKrs9jGPE0MAfoUprBgnq
VvrrD40JIq7+wc9m5Foe7eeyLgvxIM2G4hGjUyTMyeWZbU1cj2jl55fBlYSg
rjLfsO+rejH3TQV1zpBQvWEol//NH72KmC2K6m4kxLCU9bEmTOoNBAzt3+NB
wvaQxW0X2vr1NjFKbOW91vJrrdPsO9aqt88yxF3ahwSdpRRh08S3ejTtQ5e2
+q35L7w8h96U6UXLCt/dEkCCqM8Oy9y2DL2nvMOlfOdI0FyZuH0l8ZJe/2LJ
B85gEiR5xRR/tVH1No2G9LOFkJDfez8iqF1KT6Pl0Pxq6JoeiQ5qCm+61v8A
dJEuOg==
       "]]}, 
     {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlnc8198Xx2WWvSmjQYP6ysqIz70nMxlZyfZZ73dWCCEkREkREZoIJSGU
TamUSsnOSEZ2QlpE9fP76/5x7z2v5zmv8zj3bqb7WhOsLCwsl9awsPx/Pdai
tL2ytQUV38ke/vdvDqPZ3D10g0LMLEkrN1uaw0OZGqnyBnU4z/tt3JWFOVwa
cuoZh8Eb/N5FTFVtbA5vGJNz+qn/AWvJnrhGvp7DFlI/b8/qz+DOGwPyLalz
2F1j8M20/goW3uE2c0thDv941jE4qc8LdbUuUqE2szh37HfQ3kAZiE6fcnoT
M4Ntj/D8d2B4K+SK9jtZ9UxjqS0XT50f3QVLX1QqdmlP4V15gbzLWBVk93bf
lomYwNn+8pblb/bAI9YaL46pMdwahDVj8rShM1OTrVt3FG927bJw8aZA2vvF
upXcEUz8qyiWOQGg/MQPuPYMY4nPVVwSdD1gfpxRa/UYxIFquh8uKRpAlhp7
cmbNB0z/svJSZNoQXncO7X+s0YeL9AK4Mt8ZQ0sEzVsg8z3O/e75pDDVBGpU
ojfUHOrCi/sk3zaeMgXZhX8z2ms68AAL29dhmjn8zrWfKf3Yin2kfZOi5A5C
alKwjP7aFlzs8bLhcqwlhEyGhHkefI1Dv63/tdPDCmLun3plIdOEfxwwsmty
swbu8R/SO749w9pOyfvGrGxA6AlHoYDcE9y+/oZno5ot/Oq+Zl4bV4833D5d
l7/jECRIZike+1KFq4YUzSz47MD46FqSuaEcy3bOHwn6YgdqcrS4phelWO1y
cmHO0GHIOLRUvl+7CN9g/6Z06Zk9/Eq6WSQrmY8r9u3ui612AJiLm063zMEZ
mvFCKwWOoPUkk1J0/yZWuO06F1nsCHIF51ySUm/iGlG1txxljnB22wla7Imb
+MPX/jiBakfoaAlfzNW/iTcW/sci1+QIQhwlGdU9N/DtTW2zJp8cYXvvkYOq
nDfww3WSb9KlnEC4M0x4t881/K4/74zaBSewMA/499QvA6eVy5xgT3KCw59x
/+LhDOx68bJXV4oT1BtfydmHM/CsXqxl8DUn+E5L7eLhz8C8BcwNtQVOoAP7
G6IK0/H+ELlivVdOcLwVGj7PpOGnotldVpzOMO9pLXYi7DIuN78u7xfpDHpn
e65Evb2ENRR5pFlinKGe09M2tuYSruAMFUk66wyBUmEZ6Xcu4arHh1lLEp3h
v82uWRNRl3CdisjQ3HVnMLyya1xd8xJuFIu/5lvtDLwm5hwRucm4YyBY2HfB
GRS3TGVnnEvCX4/asPgwXcBzj2v1i8UL2O75wpqZIy7Qui/gHe67gGukL7F5
erlA19qb/m21F3B0cysn6e8C2j3bdqFTF7CwggWfa6QL2IhtZ9HluoBVR/dv
sLjuAofZH3TWS53HAY5IXanTBd5etvlxyu4c/mGk4D6r7wrZyovh6oJncNI6
74gqY1foncj8afkjFiu+KU6NNnWFnTYFV870xWKqlfoTcRtXiCbKpCl5sfiN
E96A6a7w0WnRuUsnFt/yO/TmYqQr/OxI4cw7GoMtrkYpq9S7Aufg7nabT9F4
yrnRaLnBFbZFlm0Nbo7GMRu5XJ43usKkYEpJ6YNoXJ174ZzDG1fQ/gC7vWOi
sfz99JGofldw/P5P/se2aLz8rCi1fckVorQS8kz8onD+l97FAA03qCBST6SI
ROKVMhHRP9puUPyUidv/ncKWIea7z1DcICFL/cGtnlN4kfUJkWHgBvN8VaVl
8aewiWR+e521G5xZGPW+MB+Bp/WCCjl83aB5cBuX8LOTeFeGMDX9jhvAxr+X
GqLDcKSLWdime25gtrZzYsQtDHduOZN2t9gN7jx45L+dEobDi5be1Ja7wenj
4S3ii6H47dMh7aFnbsBzpFPygm8o9vlSLKIw5AZansnTdcwT2D47j+HCS4X6
4feJGUeC8U3t1GVjfirEINM5MArGn9qiU1QFqcBRv12Jf2sw9mGlPuMSpcLH
fOVu8U9BOIaxQa5MigpT7fa1A9QgfH/rxRHOnVRo/sTqpMA4jjkLQmglJlS4
0zu16WdUADbTO7J01ZQKkZ+r6OxEAE7uO5Qca06FMK67Aur7A7A0j9oTRysq
LDpa4F/8AVjF+8smDgcqPAmv5uS+6Y+dlehDDu5U+OcuNmLy9Bh+UGbqxnaW
ClbkZ/fQLX7Y7k35ibdxVOh3fLxegccPL45tTE2Pp0LxrOC20QlfrLv++8ud
iVToDsuSyDvvixtPXVe1vUwF1nU9OWldPrjT7AtHXg4VzAVGbUQDjuKf44mF
Rg1UKPPfo+TS4YkzWJZeCD6lwve9465/Cjzx3g2M4b5nVKjsDOV/G+2JI8w1
xX2bqPBSNtnst6on5no4eCq9hQpNFO7Fs5c9sGSUss3kByqc/ckzYs5wx9pS
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
6Wq0my7+O0VCvX3H15wDAlr/A8VFkJY=
       "]]}, 
     {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
ZbqwGrnWb2b98IOlCNX/AWZIb2w=
       "]]}}, InsetBox[
     TemplateBox[{"1","2","3","4","5"},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox[
                "\"\\!\\(\\*SuperscriptBox[\\(Dimension\\), \\(\\\\ \
\\)]\\)(m)\"", TraditionalForm], TraditionalForm, Editable -> True], {
               FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
               False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.37820393249936934`, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.37820393249936934`, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.6142719099991583, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.6142719099991583, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                   "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                   "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.37820393249936934`", ",", "0.6`", ",", "0.6`"}],
                    "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.6142719099991583`", ",", "0.6`", ",", "0.6`"}], 
                   "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{
            "LegendLabel", "\[Rule]", 
             "\"\\!\\(\\*SuperscriptBox[\\(Dimension\\), \\(\\\\ \
\\)]\\)(m)\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.6}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesLabel->{
     FormBox["\"Angle (\[Theta], degrees)\"", TraditionalForm], None},
   AxesOrigin->{0, 0},
   Method->{},
   PlotLabel->FormBox["\"Fraction overlap\"", TraditionalForm],
   PlotRange->{{0, 180}, {0., 0.9999999666799906}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]},
   Ticks->{{{0, 
       FormBox["0", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {90, 
       FormBox["90", TraditionalForm]}, {135, 
       FormBox["135", TraditionalForm]}, {180, 
       FormBox["180", TraditionalForm]}}, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Line[CompressedData["
1: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
fg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Line[CompressedData["
1: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
wuk=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Line[CompressedData["
1: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
dJEuOg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Line[CompressedData["
1:eJwVlnc8198Xx2WWvSmjQYP6ysqIz70nMxlZyfZZ73dWCCEkREkREZoIJSGU
TamUSsnOSEZ2QlpE9fP76/5x7z2v5zmv8zj3bqb7WhOsLCwsl9awsPx/Pdai
tL2ytQUV38ke/vdvDqPZ3D10g0LMLEkrN1uaw0OZGqnyBnU4z/tt3JWFOVwa
cuoZh8Eb/N5FTFVtbA5vGJNz+qn/AWvJnrhGvp7DFlI/b8/qz+DOGwPyLalz
2F1j8M20/goW3uE2c0thDv941jE4qc8LdbUuUqE2szh37HfQ3kAZiE6fcnoT
M4Ntj/D8d2B4K+SK9jtZ9UxjqS0XT50f3QVLX1QqdmlP4V15gbzLWBVk93bf
lomYwNn+8pblb/bAI9YaL46pMdwahDVj8rShM1OTrVt3FG927bJw8aZA2vvF
upXcEUz8qyiWOQGg/MQPuPYMY4nPVVwSdD1gfpxRa/UYxIFquh8uKRpAlhp7
cmbNB0z/svJSZNoQXncO7X+s0YeL9AK4Mt8ZQ0sEzVsg8z3O/e75pDDVBGpU
ojfUHOrCi/sk3zaeMgXZhX8z2ms68AAL29dhmjn8zrWfKf3Yin2kfZOi5A5C
alKwjP7aFlzs8bLhcqwlhEyGhHkefI1Dv63/tdPDCmLun3plIdOEfxwwsmty
swbu8R/SO749w9pOyfvGrGxA6AlHoYDcE9y+/oZno5ot/Oq+Zl4bV4833D5d
l7/jECRIZike+1KFq4YUzSz47MD46FqSuaEcy3bOHwn6YgdqcrS4phelWO1y
cmHO0GHIOLRUvl+7CN9g/6Z06Zk9/Eq6WSQrmY8r9u3ui612AJiLm063zMEZ
mvFCKwWOoPUkk1J0/yZWuO06F1nsCHIF51ySUm/iGlG1txxljnB22wla7Imb
+MPX/jiBakfoaAlfzNW/iTcW/sci1+QIQhwlGdU9N/DtTW2zJp8cYXvvkYOq
nDfww3WSb9KlnEC4M0x4t881/K4/74zaBSewMA/499QvA6eVy5xgT3KCw59x
/+LhDOx68bJXV4oT1BtfydmHM/CsXqxl8DUn+E5L7eLhz8C8BcwNtQVOoAP7
G6IK0/H+ELlivVdOcLwVGj7PpOGnotldVpzOMO9pLXYi7DIuN78u7xfpDHpn
e65Evb2ENRR5pFlinKGe09M2tuYSruAMFUk66wyBUmEZ6Xcu4arHh1lLEp3h
v82uWRNRl3CdisjQ3HVnMLyya1xd8xJuFIu/5lvtDLwm5hwRucm4YyBY2HfB
GRS3TGVnnEvCX4/asPgwXcBzj2v1i8UL2O75wpqZIy7Qui/gHe67gGukL7F5
erlA19qb/m21F3B0cysn6e8C2j3bdqFTF7CwggWfa6QL2IhtZ9HluoBVR/dv
sLjuAofZH3TWS53HAY5IXanTBd5etvlxyu4c/mGk4D6r7wrZyovh6oJncNI6
74gqY1foncj8afkjFiu+KU6NNnWFnTYFV870xWKqlfoTcRtXiCbKpCl5sfiN
E96A6a7w0WnRuUsnFt/yO/TmYqQr/OxI4cw7GoMtrkYpq9S7Aufg7nabT9F4
yrnRaLnBFbZFlm0Nbo7GMRu5XJ43usKkYEpJ6YNoXJ174ZzDG1fQ/gC7vWOi
sfz99JGofldw/P5P/se2aLz8rCi1fckVorQS8kz8onD+l97FAA03qCBST6SI
ROKVMhHRP9puUPyUidv/ncKWIea7z1DcICFL/cGtnlN4kfUJkWHgBvN8VaVl
8aewiWR+e521G5xZGPW+MB+Bp/WCCjl83aB5cBuX8LOTeFeGMDX9jhvAxr+X
GqLDcKSLWdime25gtrZzYsQtDHduOZN2t9gN7jx45L+dEobDi5be1Ja7wenj
4S3ii6H47dMh7aFnbsBzpFPygm8o9vlSLKIw5AZansnTdcwT2D47j+HCS4X6
4feJGUeC8U3t1GVjfirEINM5MArGn9qiU1QFqcBRv12Jf2sw9mGlPuMSpcLH
fOVu8U9BOIaxQa5MigpT7fa1A9QgfH/rxRHOnVRo/sTqpMA4jjkLQmglJlS4
0zu16WdUADbTO7J01ZQKkZ+r6OxEAE7uO5Qca06FMK67Aur7A7A0j9oTRysq
LDpa4F/8AVjF+8smDgcqPAmv5uS+6Y+dlehDDu5U+OcuNmLy9Bh+UGbqxnaW
ClbkZ/fQLX7Y7k35ibdxVOh3fLxegccPL45tTE2Pp0LxrOC20QlfrLv++8ud
iVToDsuSyDvvixtPXVe1vUwF1nU9OWldPrjT7AtHXg4VzAVGbUQDjuKf44mF
Rg1UKPPfo+TS4YkzWJZeCD6lwve9465/Cjzx3g2M4b5nVKjsDOV/G+2JI8w1
xX2bqPBSNtnst6on5no4eCq9hQpNFO7Fs5c9sGSUss3kByqc/ckzYs5wx9pS
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
6Wq0my7+O0VCvX3H15wDAlr/A8VFkJY=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Line[CompressedData["
1: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
ZbqwGrnWb2b98IOlCNX/AWZIb2w=
         "]]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, 
      AxesLabel -> {"Angle (\[Theta], degrees)", None}, AxesOrigin -> {0, 0}, 
      Method -> {}, PlotLabel -> "Fraction overlap", 
      PlotRange -> {{0, 180}, {0., 0.9999999666799906}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}, Ticks -> {{0, 45, 90, 135, 180}, Automatic}}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          Hue[0.67, 0.6, 0.6]], 
         Directive[
          Hue[0.9060679774997897, 0.6, 0.6]], 
         Directive[
          Hue[0.1421359549995791, 0.6, 0.6]], 
         Directive[
          Hue[0.37820393249936934`, 0.6, 0.6]], 
         Directive[
          Hue[0.6142719099991583, 0.6, 0.6]]}, {1, 2, 3, 4, 5}, LegendLabel -> 
        "\!\(\*SuperscriptBox[\(Dimension\), \(\\ \)]\)(m)", LegendLayout -> 
        "Column", LegendLabel -> 
        "\!\(\*SuperscriptBox[\(Dimension\), \(\\ \)]\)(m)"]], 
      Scaled[{0.85, 0.6}], Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.726936176476117*^9, 3.726936206799041*^9}, 
   3.726936259226598*^9, {3.726936370529108*^9, 3.726936379322275*^9}, {
   3.7269364112630787`*^9, 3.726936429280684*^9}, {3.726936460549745*^9, 
   3.726936483507147*^9}, {3.726936525008109*^9, 3.726936532635751*^9}, 
   3.726936567899431*^9, {3.726936681619536*^9, 3.726936746688528*^9}, 
   3.727810152327188*^9, 3.728673463767089*^9, {3.732990834818996*^9, 
   3.7329908686433353`*^9}, 3.733511133292777*^9, 3.739795019919237*^9}]
}, Open  ]],

Cell["\<\
Note that the fraction overlap decays faster than linearly, and fastest at \
highest dimension.\
\>", "Text",
 CellChangeTimes->{{3.739795099110001*^9, 3.739795122222661*^9}}],

Cell["\<\
Plot again for even higher dimensions\
\>", "Text",
 CellChangeTimes->{{3.739795238531225*^9, 3.739795243801978*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vfraction", "/.", 
       RowBox[{"\[Theta]", "\[Rule]", 
        RowBox[{"\[Theta]", " ", 
         RowBox[{"\[Pi]", "/", "180"}]}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "10", ",", "25"}], "}"}]}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "180"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"m", ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "10", ",", "25"}], "}"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{
        "LegendLabel", "\[Rule]", 
         "\"\<\!\(\*SuperscriptBox[\(Dimension\), \(\\\ \)]\)(m)\>\""}]}], 
       "]"}], ",", 
      RowBox[{"Scaled", "@", 
       RowBox[{"{", 
        RowBox[{"0.85", ",", "0.6"}], "}"}]}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "45", ",", "90", ",", "135", ",", "180"}], "}"}], 
      ",", "Automatic"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<Angle (\[Theta], degrees)\>\"", "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Fraction overlap\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.739795219422943*^9, 3.7397952298471403`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
fg==
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}, 
     {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
VTP+/wG6r/gm
       "]]}}, InsetBox[
     TemplateBox[{"1","10","25"},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox[
                "\"\\!\\(\\*SuperscriptBox[\\(Dimension\\), \\(\\\\ \
\\)]\\)(m)\"", TraditionalForm], TraditionalForm, Editable -> True], {
               FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
               False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                   "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                   "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"\\!\\(\\*SuperscriptBox[\\(Dimension\\), \\(\\\\ \
\\)]\\)(m)\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.6}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesLabel->{
     FormBox["\"Angle (\[Theta], degrees)\"", TraditionalForm], None},
   AxesOrigin->{0, 0},
   Method->{},
   PlotLabel->FormBox["\"Fraction overlap\"", TraditionalForm],
   PlotRange->{{0, 180}, {0., 0.9999999666799906}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]},
   Ticks->{{{0, 
       FormBox["0", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {90, 
       FormBox["90", TraditionalForm]}, {135, 
       FormBox["135", TraditionalForm]}, {180, 
       FormBox["180", TraditionalForm]}}, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Line[CompressedData["
1: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
fg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Line[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Line[CompressedData["
1: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
VTP+/wG6r/gm
         "]]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, 
      AxesLabel -> {"Angle (\[Theta], degrees)", None}, AxesOrigin -> {0, 0}, 
      Method -> {}, PlotLabel -> "Fraction overlap", 
      PlotRange -> {{0, 180}, {0., 0.9999999666799906}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}, Ticks -> {{0, 45, 90, 135, 180}, Automatic}}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          Hue[0.67, 0.6, 0.6]], 
         Directive[
          Hue[0.9060679774997897, 0.6, 0.6]], 
         Directive[
          Hue[0.1421359549995791, 0.6, 0.6]]}, {1, 10, 25}, LegendLabel -> 
        "\!\(\*SuperscriptBox[\(Dimension\), \(\\ \)]\)(m)", LegendLayout -> 
        "Column", LegendLabel -> 
        "\!\(\*SuperscriptBox[\(Dimension\), \(\\ \)]\)(m)"]], 
      Scaled[{0.85, 0.6}], Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.739795233925514*^9}]
}, Open  ]],

Cell["\<\
Solve for angle as a function of distance between hypersphere centres (optima)\
\>", "Text",
 CellChangeTimes->{{3.728673470462529*^9, 3.728673490517684*^9}, {
  3.739795088701542*^9, 3.7397950906696043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"x", "\[Equal]", 
     RowBox[{"d", 
      SqrtBox[
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}]]}]}], ",", 
    "\[Theta]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7278106306450243`*^9, 3.727810649770666*^9}, {
  3.739795057096744*^9, 3.739795057991335*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \
\[NoBreak]\\!\\(Solve\\)\[NoBreak], so some solutions may not be found; use \
Reduce for complete solution information. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", ButtonNote -> \
\\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.727810650728179*^9, {3.7329908349009123`*^9, 3.732990868741356*^9}, 
   3.7335111334156713`*^9, {3.7397950515836573`*^9, 3.73979505854543*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"ArcCos", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["d", "2"]}], "-", 
         SuperscriptBox["x", "2"]}], 
        RowBox[{"2", " ", 
         SuperscriptBox["d", "2"]}]], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     RowBox[{"ArcCos", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["d", "2"]}], "-", 
        SuperscriptBox["x", "2"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["d", "2"]}]], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727810650731188*^9, {3.732990834902364*^9, 3.73299086874292*^9}, 
   3.733511133417369*^9, {3.7397950515856037`*^9, 3.739795058547701*^9}}]
}, Open  ]],

Cell["\<\
and plot the fraction overlap as function of the distance between optima\
\>", "Text",
 CellChangeTimes->{{3.728673492725779*^9, 3.728673507694314*^9}, {
  3.7397950781815157`*^9, 3.739795082949348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nms", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Vfraction", "/.", 
        RowBox[{"sol", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
       RowBox[{"d", "\[Rule]", "1"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "1", ",", "nms"}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"m", ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "nms"}], "}"}]}], "]"}], ",", 
        RowBox[{
        "LegendLabel", "\[Rule]", 
         "\"\<\!\(\*SuperscriptBox[\(Dimension\), \(\\\ \)]\)(m)\>\""}]}], 
       "]"}], ",", 
      RowBox[{"Scaled", "@", 
       RowBox[{"{", 
        RowBox[{"0.85", ",", "0.6"}], "}"}]}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", "Automatic"}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<distance\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Fraction overlap\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.726936151330553*^9, 3.726936206279665*^9}, {
  3.7269362557745323`*^9, 3.726936258263256*^9}, {3.7269363285046673`*^9, 
  3.726936379073349*^9}, {3.72693641043766*^9, 3.7269365674089212`*^9}, {
  3.726936658525569*^9, 3.7269367458647127`*^9}, {3.7278102075021276`*^9, 
  3.727810209788625*^9}, {3.7278177383840437`*^9, 3.72781774694097*^9}, {
  3.7278177790198507`*^9, 3.7278178059488564`*^9}, {3.739795065013537*^9, 
  3.739795068408278*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVzX0w1AkYB/DFNjk6oaKt5HSKpBJFUX1Rl0KJdOpOkYi2EoV04zacRS+i
CymUvJQydnVeRlH22NHZ2SIvKaffatvWYu2PshZh73d/PPPMZ77Pdx6zoLM+
IZo0Gm0vNf9v9xDZG95AyPZXFdwxtZoEfceSCBFjJ3gTBvy4GRJ293LyKhm+
SO9ZfHNyioTHq+6/8hnB0M5ateGrkoRfsOr5n4wo3NJ2PSMdIvFhfcqONEYS
QkZjPwu7SRQs8kq+wsjEwyZp120uiQTtSovLjGIIQxtr7AJIHDp8nzsyWoWL
g3OUfRUK6KoT/N2WN0C3z+HKUj0FVnorZE1X+ejdJE5MCR/GhddbkDPWAtvm
xROn/5bDuMqA0NBoRVzLNr7IVI4a8Q5h69Z2+M4l5wkjhtDIzF96WN4Jr5LF
Twf4g1Cu2ja//Ew3XGps6jPNB6E5Waa/dGUPGjS6nJ7GDMBeHVhzgNMLW16o
4alOGYRJG183W4nQRpzz3LdJBtOMoclHij4oHHS0ylL7MaQSEV02YujQM/Sz
+qUoHqwT6F3/hHKdwjsTm6XQM3lISiQSxEZap6alfca1k9UnCsylcPQoEXKH
JRh3LpOEXeoHO+BxmoezBFG2/CqjJhmapfklUXc/QcThX31jNoiMUhNHY1KM
b8zO3NW/DSFRsMh2yFWMNS5zZ0/UycEMmI73LPwIt0Kz0CfGCvSuO+tpMdaH
CyYBKz76k9gZ2Rae7t0Ha/lB3e69Iyi18B3wDhZhwfwRbf7UCHo+miou6BCg
N+Ryf8wbxUTCPwW1L3txamPd++88vsDq1mVP+cl/UbYnqODF+BeUnnZqSDTs
gXJoib40+ysWWgpEdu3vUH3ATStz5xhyDkVOdsd049Ju9r0q6Rg0zyp52bZv
YfbB/V0RW4kXPzG9asc64eiQlMmwHce1G6q3wtwO+C9vndToGMfupmPzpg+3
QylIE0ckqGDElDgun2lDDv1olI/5BAqGU9bVhLdiAVFdqMmfQG2KZbSSFGLO
7wm+WyInIdedKl/iJADt0VGu2HAKNH+2a3TVS5y7w00zbJzC5myXlmoVH8/X
pGobhH/DPG/Rhzq3Rhi4n7NO1JtGLPdMnuJqA3rXtnVcrJ+G5Q3WsQ3LnqHi
LswlR2eQqqNFENrVOMK1NzCZnYE+2z3GeH4F4tn3E3ofz4JW2v/ZwacE5TKT
XD1PNQIHXfOsWdlIzWcHEvvUoHl5knbm2Qj2GV7J8VYjvvKgq5MgC8vq6yv2
+lGOC5PtMcrClfRfm68FqcHTu74xlHMTYfa3R3UuUn2798L7RAZWJC3cPfcB
da8iptaykjG7Oe777lLKvNGCrQI23g9/an9QRvUv0908jNjI8Ks8susJ1V9m
dTOM8wfUVj7n2fVqODtHryki4tH7Jv2uVgeVGxrX2rBiUJusOt7RRbl4K32f
UTQynQJWF72jbB+0/xTnPDxK1lW5EtS/X8plJUQEnsW+akkYoPJdKbb2rBPI
Xrsp3VtOmdkuiOAcR6Q4z9eMpJxucryMCISl52kRb4xyRaiFC+tn0DU6izNU
lCdm/GqI/eirdmIGTlGOtzTwY+1CPbNovc0M5R8eSxJZ9rhlqqtUqynTaO28
gYPb/wPALHM2
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
EIIR
       "]]}, 
     {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
/g+rfNu0
       "]]}, 
     {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
lqK4/v4SFmfex7Pzf1X8RsM=
       "]]}, 
     {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
2DNvt8b/AI5vV20=
       "]]}}, InsetBox[
     TemplateBox[{"1","2","3","4","5"},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox[
                "\"\\!\\(\\*SuperscriptBox[\\(Dimension\\), \\(\\\\ \
\\)]\\)(m)\"", TraditionalForm], TraditionalForm, Editable -> True], {
               FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
               False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.37820393249936934`, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.37820393249936934`, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.6142719099991583, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.6142719099991583, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                   "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                   "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.37820393249936934`", ",", "0.6`", ",", "0.6`"}],
                    "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.6142719099991583`", ",", "0.6`", ",", "0.6`"}], 
                   "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"\\!\\(\\*SuperscriptBox[\\(Dimension\\), \\(\\\\ \
\\)]\\)(m)\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.6}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesLabel->{
     FormBox["\"distance\"", TraditionalForm], None},
   AxesOrigin->{0, 0},
   Method->{},
   PlotLabel->FormBox["\"Fraction overlap\"", TraditionalForm],
   PlotRange->{{0, 2}, {0., 0.9999999789265758}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]},
   Ticks->{{{0, 
       FormBox["0", TraditionalForm]}, {1, 
       FormBox["1", TraditionalForm]}, {2, 
       FormBox["2", TraditionalForm]}}, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Line[CompressedData["
1:eJwVzX0w1AkYB/DFNjk6oaKt5HSKpBJFUX1Rl0KJdOpOkYi2EoV04zacRS+i
CymUvJQydnVeRlH22NHZ2SIvKaffatvWYu2PshZh73d/PPPMZ77Pdx6zoLM+
IZo0Gm0vNf9v9xDZG95AyPZXFdwxtZoEfceSCBFjJ3gTBvy4GRJ293LyKhm+
SO9ZfHNyioTHq+6/8hnB0M5ateGrkoRfsOr5n4wo3NJ2PSMdIvFhfcqONEYS
QkZjPwu7SRQs8kq+wsjEwyZp120uiQTtSovLjGIIQxtr7AJIHDp8nzsyWoWL
g3OUfRUK6KoT/N2WN0C3z+HKUj0FVnorZE1X+ejdJE5MCR/GhddbkDPWAtvm
xROn/5bDuMqA0NBoRVzLNr7IVI4a8Q5h69Z2+M4l5wkjhtDIzF96WN4Jr5LF
Twf4g1Cu2ja//Ew3XGps6jPNB6E5Waa/dGUPGjS6nJ7GDMBeHVhzgNMLW16o
4alOGYRJG183W4nQRpzz3LdJBtOMoclHij4oHHS0ylL7MaQSEV02YujQM/Sz
+qUoHqwT6F3/hHKdwjsTm6XQM3lISiQSxEZap6alfca1k9UnCsylcPQoEXKH
JRh3LpOEXeoHO+BxmoezBFG2/CqjJhmapfklUXc/QcThX31jNoiMUhNHY1KM
b8zO3NW/DSFRsMh2yFWMNS5zZ0/UycEMmI73LPwIt0Kz0CfGCvSuO+tpMdaH
CyYBKz76k9gZ2Rae7t0Ha/lB3e69Iyi18B3wDhZhwfwRbf7UCHo+miou6BCg
N+Ryf8wbxUTCPwW1L3txamPd++88vsDq1mVP+cl/UbYnqODF+BeUnnZqSDTs
gXJoib40+ysWWgpEdu3vUH3ATStz5xhyDkVOdsd049Ju9r0q6Rg0zyp52bZv
YfbB/V0RW4kXPzG9asc64eiQlMmwHce1G6q3wtwO+C9vndToGMfupmPzpg+3
QylIE0ckqGDElDgun2lDDv1olI/5BAqGU9bVhLdiAVFdqMmfQG2KZbSSFGLO
7wm+WyInIdedKl/iJADt0VGu2HAKNH+2a3TVS5y7w00zbJzC5myXlmoVH8/X
pGobhH/DPG/Rhzq3Rhi4n7NO1JtGLPdMnuJqA3rXtnVcrJ+G5Q3WsQ3LnqHi
LswlR2eQqqNFENrVOMK1NzCZnYE+2z3GeH4F4tn3E3ofz4JW2v/ZwacE5TKT
XD1PNQIHXfOsWdlIzWcHEvvUoHl5knbm2Qj2GV7J8VYjvvKgq5MgC8vq6yv2
+lGOC5PtMcrClfRfm68FqcHTu74xlHMTYfa3R3UuUn2798L7RAZWJC3cPfcB
da8iptaykjG7Oe777lLKvNGCrQI23g9/an9QRvUv0908jNjI8Ks8susJ1V9m
dTOM8wfUVj7n2fVqODtHryki4tH7Jv2uVgeVGxrX2rBiUJusOt7RRbl4K32f
UTQynQJWF72jbB+0/xTnPDxK1lW5EtS/X8plJUQEnsW+akkYoPJdKbb2rBPI
Xrsp3VtOmdkuiOAcR6Q4z9eMpJxucryMCISl52kRb4xyRaiFC+tn0DU6izNU
lCdm/GqI/eirdmIGTlGOtzTwY+1CPbNovc0M5R8eSxJZ9rhlqqtUqynTaO28
gYPb/wPALHM2
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Line[CompressedData["
1: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
EIIR
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Line[CompressedData["
1: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
/g+rfNu0
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Line[CompressedData["
1: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
lqK4/v4SFmfex7Pzf1X8RsM=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Line[CompressedData["
1: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
2DNvt8b/AI5vV20=
         "]]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, 
      AxesLabel -> {"distance", None}, AxesOrigin -> {0, 0}, Method -> {}, 
      PlotLabel -> "Fraction overlap", 
      PlotRange -> {{0, 2}, {0., 0.9999999789265758}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}, Ticks -> {{0, 1, 2}, Automatic}}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          Hue[0.67, 0.6, 0.6]], 
         Directive[
          Hue[0.9060679774997897, 0.6, 0.6]], 
         Directive[
          Hue[0.1421359549995791, 0.6, 0.6]], 
         Directive[
          Hue[0.37820393249936934`, 0.6, 0.6]], 
         Directive[
          Hue[0.6142719099991583, 0.6, 0.6]]}, {1, 2, 3, 4, 5}, LegendLabel -> 
        "\!\(\*SuperscriptBox[\(Dimension\), \(\\ \)]\)(m)", LegendLayout -> 
        "Column", LegendLabel -> 
        "\!\(\*SuperscriptBox[\(Dimension\), \(\\ \)]\)(m)"]], 
      Scaled[{0.85, 0.6}], Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.727817797495541*^9, 3.727817806420433*^9}, {
   3.732990835033804*^9, 3.732990868811602*^9}, 3.733511133504787*^9, 
   3.739795070924568*^9}]
}, Open  ]],

Cell["\<\
Again the fraction overlap decays faster than linearly, with m>1, and fastest \
at highest dimension.\
\>", "Text",
 CellChangeTimes->{{3.739795127822846*^9, 3.73979515986366*^9}}],

Cell["\<\
Plot this again with even higher dimensions\
\>", "Text",
 CellChangeTimes->{{3.7397951711357393`*^9, 3.7397951819539547`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Vfraction", "/.", 
        RowBox[{"\[Theta]", "\[Rule]", 
         RowBox[{"ArcCos", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["d", "2"]}], "-", 
            SuperscriptBox["x", "2"]}], 
           RowBox[{"2", " ", 
            SuperscriptBox["d", "2"]}]], "]"}]}]}], "/.", 
       RowBox[{"d", "\[Rule]", "1"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "10", ",", "25"}], "}"}]}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{"m", ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "10", ",", "25"}], "}"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{
        "LegendLabel", "\[Rule]", 
         "\"\<\!\(\*SuperscriptBox[\(Dimension\), \(\\\ \)]\)(m)\>\""}]}], 
       "]"}], ",", 
      RowBox[{"Scaled", "@", 
       RowBox[{"{", 
        RowBox[{"0.85", ",", "0.6"}], "}"}]}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "2"}], "}"}], ",", "Automatic"}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<distance\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Fraction overlap\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.732990885150345*^9, 3.732990908565426*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVzX0w1AkYB/DFNjk6oaKt5HSKpBJFUX1Rl0KJdOpOkYi2EoV04zacRS+i
CymUvJQydnVeRlH22NHZ2SIvKaffatvWYu2PshZh73d/PPPMZ77Pdx6zoLM+
IZo0Gm0vNf9v9xDZG95AyPZXFdwxtZoEfceSCBFjJ3gTBvy4GRJ293LyKhm+
SO9ZfHNyioTHq+6/8hnB0M5ateGrkoRfsOr5n4wo3NJ2PSMdIvFhfcqONEYS
QkZjPwu7SRQs8kq+wsjEwyZp120uiQTtSovLjGIIQxtr7AJIHDp8nzsyWoWL
g3OUfRUK6KoT/N2WN0C3z+HKUj0FVnorZE1X+ejdJE5MCR/GhddbkDPWAtvm
xROn/5bDuMqA0NBoRVzLNr7IVI4a8Q5h69Z2+M4l5wkjhtDIzF96WN4Jr5LF
Twf4g1Cu2ja//Ew3XGps6jPNB6E5Waa/dGUPGjS6nJ7GDMBeHVhzgNMLW16o
4alOGYRJG183W4nQRpzz3LdJBtOMoclHij4oHHS0ylL7MaQSEV02YujQM/Sz
+qUoHqwT6F3/hHKdwjsTm6XQM3lISiQSxEZap6alfca1k9UnCsylcPQoEXKH
JRh3LpOEXeoHO+BxmoezBFG2/CqjJhmapfklUXc/QcThX31jNoiMUhNHY1KM
b8zO3NW/DSFRsMh2yFWMNS5zZ0/UycEMmI73LPwIt0Kz0CfGCvSuO+tpMdaH
CyYBKz76k9gZ2Rae7t0Ha/lB3e69Iyi18B3wDhZhwfwRbf7UCHo+miou6BCg
N+Ryf8wbxUTCPwW1L3txamPd++88vsDq1mVP+cl/UbYnqODF+BeUnnZqSDTs
gXJoib40+ysWWgpEdu3vUH3ATStz5xhyDkVOdsd049Ju9r0q6Rg0zyp52bZv
YfbB/V0RW4kXPzG9asc64eiQlMmwHce1G6q3wtwO+C9vndToGMfupmPzpg+3
QylIE0ckqGDElDgun2lDDv1olI/5BAqGU9bVhLdiAVFdqMmfQG2KZbSSFGLO
7wm+WyInIdedKl/iJADt0VGu2HAKNH+2a3TVS5y7w00zbJzC5myXlmoVH8/X
pGobhH/DPG/Rhzq3Rhi4n7NO1JtGLPdMnuJqA3rXtnVcrJ+G5Q3WsQ3LnqHi
LswlR2eQqqNFENrVOMK1NzCZnYE+2z3GeH4F4tn3E3ofz4JW2v/ZwacE5TKT
XD1PNQIHXfOsWdlIzWcHEvvUoHl5knbm2Qj2GV7J8VYjvvKgq5MgC8vq6yv2
+lGOC5PtMcrClfRfm68FqcHTu74xlHMTYfa3R3UuUn2798L7RAZWJC3cPfcB
da8iptaykjG7Oe777lLKvNGCrQI23g9/an9QRvUv0908jNjI8Ks8susJ1V9m
dTOM8wfUVj7n2fVqODtHryki4tH7Jv2uVgeVGxrX2rBiUJusOt7RRbl4K32f
UTQynQJWF72jbB+0/xTnPDxK1lW5EtS/X8plJUQEnsW+akkYoPJdKbb2rBPI
Xrsp3VtOmdkuiOAcR6Q4z9eMpJxucryMCISl52kRb4xyRaiFC+tn0DU6izNU
lCdm/GqI/eirdmIGTlGOtzTwY+1CPbNovc0M5R8eSxJZ9rhlqqtUqynTaO28
gYPb/wPALHM2
       "]]}, 
     {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
rGyBzg==
       "]]}, 
     {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwVVnc8le8bNkvytSpllC0yUkbGeZ+7IhFCpLJDWiKyVwoZWZGRbCHZWaXM
jApZkTKSrOyD4zjO8PP7530/9+e+n/u67uu5nud9hW2dL91goKOje7/z+P/7
wo3Z3sZ/N1CA/u2+7e1lYNLgu/+bVxN05z4dGCcsg0JGcmoFrwk8r5S91ji/
DLpdP96m8dpDvJH/XOCPZbhiT6yL43WDKHmqDUPpMoweD9WI4g0G76nVhd1W
y5B5wOBJBO9zqC/4tHX04xI8Yqk4Gs77Cpzs/kRyeC/C1WtZpSv4SuAu6f2S
1jwHe7cfWZw/0gDWjvmuu87PgrjR0uynpy2AyzLQifw3BZ7fVCF5/Qsc89pU
P+P6Fw5Wco3R03fDtx6/2a4zf6B6QqOzG9cHry75r0SyjUHznTT+awvfQXnp
1THZrZ9AkMA4iu/9gB4UZ7rkPQgMpEJOfvFfcElOXkmbqR+Ut22qjUtGQOXs
hdjX/D3QGaz4re3Yb1jRaOApFegAwdh5UsHSOHxcEFouV2uDeeLvsQH5CRBz
qeUO0GiGV3MfvrJH/4WVbz7EQrE6cEoyEL0TvxNb1fhys9bBKc2/vq3Jf+GW
SxX90+WP8DWNVdYv5y98HvxDKq/9CHjDazH/3v2F+wbdc4NGHwHVbBi3/P0L
KgeDND2DPsDPoBOj3qqT0PtqhTi59h7YD+cvT05OAsfY7pvMLDVw2jRo9O+/
SehZUA5VXasG1xjrjomlSWDpvv7Xd6waBukP5Y9vTkJOmK+qdFU1pE+HWY2w
TUHk22NNCnbVIFd2p6tfcQrMh9otZ5qqQF9DrrA5eAoclMLDy8MrIfJ2lUOm
2DRUSodpPT/zFuZOF4ftPTYNP03Zgt7KvYXzh3LfeByfhvzDsX2/+d8CQ/vz
JT21aSDRC0Xd3CgHbzE3D5LBNLTJUbKOFZWDw++TTy75TkPpQ7MBL75yOHO5
LJepbxpWIxJf0jOUwcbpwslbD2dAjbSYemGjED6+mn/pGTwDiVLXfPJ+FsJj
FhnjJ+EzMK5Nvs5bVwjsPUVNOfEzUFaVJ6gZXAgS1iXpY/kz0GC6i7FoXyGY
+pdfNemZAdarh3/XKr+Bqvc1nSA8C9VLNrWBUa/B7WRLJc+nWYhLuxbI7psL
DopCmc8+z0KnR+nc6PVcuKrs95Tt2yx4KvH/btHOBXU1RVuGn7PwvQ6O/eTJ
BYazrziWlmaBHBOfx1v5CmKMgu+08v2D/Zt6EourOfDmvqaQm+s/oPvWr+nx
KBtSXTP3Lnv+g/hoyUN8d7Mhyo2ycdv/H4i2k1P6TbLhvldll3XYPyh0jHYL
lcyGU4Fivrrp/6DmttzYSk8WtMQwDYp8/Qd3b3t21olnwe+Slqe9wnPAo3so
t6ouA3oWmRZOHp0Dj6qw9tnEDGiUOaf3XGYO+nwuoLP3MyDzTSvblVNzwNl9
vu6maAbY5rVFjejNwYzqHW6fp+kwnfY5ZsZzDr49zv/wyjYNFiM746ldc8Cd
8rv4qsxLGOtgW7fqn4O2d0E/RVhfwjdWfZPGoTmIMzjBxjmbAiVhXfuD/s6B
7MpBQeNXKXA/+FsCC2kODPesHfU+kgLrvj1J+8TmgXvgq7Yc7wsg3/n+Uspn
Htjqf+dFHE0CE2XLZ3IP52HpXczsk71JUEQ//UQheB66kNBU+nIiWCUTXbDo
+R29bOqF3yVCUyuftlH2PBQ+smi4fyERQoWur3t9nQdfi5DHIm4JsG9wUe8z
3wIM1Gd9ujAcD45ZHme7BBdAR5thLqk5Hloct0/1iS2AYw7JhFYQDx6MXKIj
cgsgO9dfyOMdDz/lFUnLZxfgB8+q5oND8ZDx1Cf34N0F8Jds9+0wjwPpM7tp
Dh8WQCD/lo7beiyUvSk8OtS4AHQvwzZXR2JBcb+hkU7bAsx8tkiObI0F3Ezy
K+neBbDJOq7PmRQLF6OO6a5M7/QL1mO8oh4Lrj/1k725F0FUo4jlJVcMvHd5
fjLy9iKwb1T7B96LBDSsYkF1WgQ8buHVH81IaNYcDXFyW4SZGyf2PBCIhK8H
JX4aPlyEwBcmv8Q7n8JIXc3DAwmLoHp/brRN9inQsQ53pjcuAj85sbiHFA7n
s4Vvlh9cAvqyJv1fFaGgmMwu0SawBFQXv16IDwWhaPLkL+ElmE8s/PLVNRS2
vAdsmWSWQORWS5zhyVAoNgq3unJ6CeokzOYPVjyBffT4y9RbS+DXPMDm/SEE
fls3aurULkE2p4ZXznQQdF4uZrRqWALbfo8Mr69B8E43pdm1ZQmm3K+pOJcE
Qdwpt9Op35ag6kGkRqNHEJzjkMQtTywBX7aW7RJLEBTWxygk7F2G6VdWXDYK
j8HzsLXIH4tlWLCzcW7PCARbQ3nTkevL8N6jpHJPWCBcDKKP+OGwDA/a5sJv
3Q8EiX85+K77y4DrP+XleyYQvlfONtYGL8MBKYHZ6S8PQV7P1fp50TLUmN/G
pGwDYNYnJPU8ZRmIBpSKL7W+MGcqfSuLbgXu4P8cYovzBZuVfQyCjCsgwv32
8KPbvqArOqXEx7IC59magIHXF0TCQ9M4uVdA4PJLb3MfH+gx6XSkiq8AJcq4
B2l5g8zC5b0/9FfAJzlezIveE96Z6DVEGK4AdQS/UT/sARp1Zx8g4xUQD7p4
Ua3aA8yijw/nXl0B+SsB2V13PSBcfk+hm90K0LOOh9r8dIdpt48XuL1XYPCf
OjdzvRtkUkUi9F+tQK2g0YvGQleQceBF9PkrcFqf4dSxSFeo+caxWlmwAjHL
nLZNjq7wLYNyTaB0BeqEuiI95VyBemZQav79znx10+7UChcwexL+Jax7BcoS
zsqebb8P+zhWWFq2dvj6P7/ygs8J+uoiQnWoK3Dru8JQ+L97EOcovqt7ewVa
DcIb69/dA+6vZoy/mPCQVcQYv35lJw5ppS6z44FTqOpH6AtH4CSnrPKL4sH5
xEsXVqm7wDZzbuSBLh7+kzWX9/a8BZ0J42YkfTyoaefcu3HxFkRq+v4MMMTD
9RrXsUjxW7A3u2ww/DIe6ojCmpHfbwKrJX9vhjUerq6rxpxTugks/SutHQ/w
MKQwbOdA7wBMDS9LRVPxUDD3SDCm2Q5+4TS1f6fjwcFFiiM4zQ5KaxfGU7Lw
cJaD/1ullx2YVWPc3Pl4mCUX+30+bgflxb/d6N7iwevEbfqyTFuwShVVG23H
wyWzuW/qUdfhnXdhS+IaHiJDbrQ5HbGGaKKx5aUNPPyhc0oSm7ACO3cK4T8S
HooPvb8KeVbA7qJ/NIS2o4d9tH/WcSu4cWs5/MGeVbD6a39sz3lL4L6iYGAo
uAqCXBF1S6HmcFfxw889uqvAP/vc3f3iVWjsGSh6p78KkolPJV8fuQoH7q08
vGm4Ch7+/WYyy1egIVdcovXyKuw54uR89NkV2Hcw1jXQZhWKzIb7hodM4QPJ
fi/RfRXSecbmfnlchr0N7Nhk5k4eDGqU5y6BjbkUZ3zOKizRqZQ1f7oEVUSN
v2fyViH+kld2XNolsJb3Ds8oXIWhgut/KEaXoCLr74BZ9U7etnh6uc4IzIPf
OfV2rEJ5SceDrSxDKNSxzazfWIVw1wn7g/L6oCgjjIC0M88VzdLBDT2oZx8f
biCvQsKg6TSxTg96+i0PNtGtgf3eyRlLfT1Yt7wW/Yl1DWR9Xm2+vq8LyNXQ
7/ORNbj736bxp8860JOCrvZprcFaiuLrWx+04Jo/lXBJZw2iFpc9baK0YML6
Y3y/7hoYhvO1FlhrwbqYWvd3wzVY4lhekWPWAt5SJa0fZmuw59Rtqw3jc2D7
SUZxxGkNbmcVTHDRaQJhno9zOnENXJiMW81izsDztJn21BdrMP1hDz785hlQ
MKh8aJy6Bm41wRjL6TPg8lZ/uTFrDQjnR0RX8Kdh0Svw28uiNVhXH6i1unYa
ppinI42a1yBzTGrrqSOC4Jq3miyta8Biqm9rIoFA9PZDSn37GnCMfmAqHMfg
euchR5muNZC6sEti2xSD0Thd3d1Da/DvPcVW8gIOBgTL99QtrkFp07JRqY4a
uPX6Nz1YWQNViLs9v1cN9gVd8D62tgZVLI4s+Tv/2kbTf2eTNtfgyf4o8xeX
VaGriOezK+M6TNdZ8l+6rQKtqn5PJHnX4fV0mahpvjJUGZ9nfK65DkFiiHvT
UwHCdN+FCJxfh/fq0liJrgJYaEix5Oqsg5In/midoAIwKOz9r/riOvh1Ko9O
fD4JF7m7eYaurkOHmqApJngSZntMjwncWwdP7o2C4mF5+PC5veiV8zoUrkjo
vKmUh+hGleOyruvwp1U1dCNKHhTL+BSR5zoI8GRX+J6Rh0cxY5jNo3XwVVYL
Nr56HPguOhi9SlgHG864d5igLCye+9Evk7wOjxBvcuEvGWjEtE2rUtYhUX43
4+tEGXCQPWbelrEO5hz5j7U5ZaCCbcl+tmAdNkmEEjZWadDrcPeSqV+HAV2L
l195pOChdkhG5fQ6qDX2NxZFi0Of1S0L+X/r8GTXRS0Rc3EQc9flLZpfh2ex
kX1MkuLwNYsrPmdlBy/Uf+q/T2Kwn5z2JG5rp17Q5BEfTRReF1ffu89OgBGl
y5XuoSKw9enFsQVOAmx+xW/bmImA/i+/mZv7CGDu7+FcLCsCq7s0rlsfIsAa
x9NZhwFhwNl0m1wUIYB7TNknbSlh6OGeVZdRJoD12QYt6xZBEJHq2MxXIcC7
By05Ve6C4A4lVaLqBHg0/6b83VFB4HN0O85/mgDd7xaaG6KOgH0rnSjrBQKU
KNlbl1w/DJuevKyzlgQow9MOk47yg/DohaGcEAIkNifd3iVxECKa1UsvhxGg
xrUzOGGKB1bzZZ7sfkqA2SH17U+5PNDsyq54N5YAxoIhH0lHecCepS/m5EsC
aDewh+coHIDXCtfON5URgGGamNTrsA84eS8ceVBBgC9yP4I/HN8H3jQ1glg1
Afhv8EXIk7jhwheBnLAPBLjKpclfE8UN81bjNIM2AtgFmgYeqOMCuYib1WPD
BCjAmb08qMgJic5Xo2LHCHDZsLdSkpkTtk107M/+2al388+/UcwBPYLS3HnT
BPhQqNJhvsEOLlVL9+7hCeBz44CmZvx/UDnuLk7ZtQGbErzGQGQFtVPBz3lP
bkCUkKask9kuGLTlVU5T3AClcWe1AP5d8CC65IfQqZ1YWdpUZpQZiqaG+CRx
G/Cnp9fI0pYZjjyXzVLW2oClHz84Fx8wAQN+sNjYbAN8wgh3st4yQLqAo8EP
iw3QiM29TPBjAHVteryZ9Qak5Xh39J1nALcMaUVb+w0Qp7saIf6bHqb1A2vv
O23AXx9X+T376aHjjVR71OMN4M2tjo6W3ka3ButvcYVsQGWaW5VhDw0xMZiw
JoRuQNysaBC9Bw2hawH6qZEb0OjUFSXRQkVlu/v73yRuAD5DLVPjLgU9t/cb
b3+zAVKe4lt0f0lIPpbrsW7xBtyYYTOqTiChrg95ot2lG0DlTtqrpkNCu/b1
OgxWbkBz5B7R3LebyKtJfHGyfgPWmiJWBqKJyOJIN4m+fwOSFu6VsN8lIHZe
16oPAxtQzTdNNRcjoKZ9B1zchzZg4nqCks/YOpLYYz47O7oBc9Fdc0KX19Hy
2vRg9+wGcP6W1x/VXUOPv9Aq0mgbYCGsO2pgiUeKLVnOV+iJgNtVWVYjgkcz
9ZrSXExE4BRoKO6ZXUF6lRHZwXuIkH/Ar4vdcwUdyOB5dnc/EZrO9htxn1pG
r93knFSPEaEtbDb0N/MCMnPulVqTIQJX+UinTO48+u+O21TRcSJsPXO9lHtu
Hrla11oIKRHBuBju7I2YQ+oXtHR3nybCrlBZNxOhf+iboJXkwGUi8Hx51KEc
OI0C+egno68Swar55NAX+WmkcOBVhrY5EaKHtGOuTkyhZNY5no82RHCrHtpt
pT2FbAnuzDl3iSB9z3WsTnASEb5GTdx/RISCkpKpp6Q/aGTvwC1KEBEeGDA6
TX78g5r1BJZDnxAhVti7fz3wD4r99oac/pQIKHYoQmnvH3Ssr31/VwIRtEjX
1+klx5HVT/rzUm+IUDitxm7FMIo0+XS6KouIcMrqW6hh+giSNo81Pl1KhOCB
3We81UfQ5sgRmyuVRDiidvekjfcwihtX9w6pJ0KQtwqTFOMv1DbjXvinjwiP
WIh/pnV/oCLJuhP3BojQ2iWR3UAaRPG3md5t/iACS0zPf2mvB5HNfFwLxygR
PGX4A832DKKtpdJRbIYIjnRf/J4NfkfHN/5xpJCJUKupJh+f1od4Tp1IFKcR
YfW2mY+TWR+ieHoJlNNtwkkL5h+ih/rQV9Iuqc/Mm3Dt+Gn6fYm9yJ4qenaD
YxOO0/tTGl72oGQmK7dLYptwgF0Nn5bchWh2B5V6JTZhMsroZohsF7L/1EMw
kNqErcClA18/dSL5xxqe+nKbcDAj1MZ8vQN93pb00VbZhKi7fG9O3PiKiFtr
D5HeJmS8KDV0fNyOLMyKT9dd3MFnOytkJ92Omt870OOMNqFU1SrYb6ANRXv9
fKxquglPZonpe2TbkMRGfYiizSbYSVPYT/xrQab48KfH3DZBoHbj03JcM/po
qKFX4LEJLx8UFUfrNSORMgqbpPcm3NOoP3NkdzNacnKOFg/YhPgwIiPTwyYU
smDyTChsE7Ivnul56d2IKmcEk3hSN0FmBdVqHa9DfOd/XklI34Tl22PebPUf
UWBe3KH9WZuwe1f0mtXFj0jvBnMKV94mBLw36U188AFNTsylspXtrC99f/Jb
93u0b6wqm6FlE27db+i276hG0Wz+/jVtm3DxwJ2rJ25XI1Z1zauOXzbhSnnh
OT+WasSQ3Pff4LdNcC32yfPSrUKrRsteBT83YeNDjWHARAVyCqw2thrZhHm+
QcuypxVorsRfbt/vTRDRH2dXVa5Af/ayTfpNbsJj/uIk9Zi3qKdV0sBweRMs
J9XpQwzLkd76shTz6ia4rdcEzTOWo88iNUy165vQymwcE/yuDDU8PFcrurUJ
egxZqph4GSpRtRUnMpHAJHiRseBQCYosfklO4yOBz+uD3zT43yCWEdvBS4dJ
UNSYf+LFqwIUzHqsfLcQCY47r44OHi9AvjffObiIk+BLoYzYsu5rdEd4oFdT
ngQjI6e7vr/IQ9MGqUWkkyRwYafHFZ/IQ7YBdqElSiRI2/h0WaUjF10bxuMO
qZPAWeuwkT5jLtJOYH89f44EOze1ftuTHNTyaeBxpjYJmH5x3gyVzkGnV1Mt
L+uSQDn2QuvX3mx0ykB6X4PhzvpDrLFNItk796N2QJw5CY7WP1L9PpCJmP0f
mai6kEBLObP9NzEVVeIXSA0PSDvfJ4LTD/dUZO9wNUPLgwQW/V1y44SXqMXg
+JyxLwnKYsWpuygpKFhk9KFTCAkuJcRLjQq+QIpJ2uKEUBLEtL5BscXJaHJv
5VffCBK8cRMd4sOSkSYh4kB4DAm+p1MCXl5PQkyfVQpzXpDgnStz6bOGBFSJ
e2V4LJUEFfVPLM6bJyD7co6NsnQS4M05n2ZuPkctKdOn63NI8FnAfENM5TkK
uvd8cKh4R8+8IvnuL3GIYd8KPXszCa5Ivn9ffjIWvQ01z3/estNv5D6xvyMG
2VLa9PjbSfDfXS+Zn4oxqHkqLUmykwRTX8YYfNij0eN3urIagyQ42XBBYPfv
p+ikbE3flyESmO9PWP3v2lM0kSXiZThMAtNTjUGWAxHo7FNSs+U4CbIV21Ur
vocjeqv8q15zJJjwMDfUWgxFZX3cNNoCCcp99fwzvEKRzfmAnJBlEnRESZ+i
MoeiRvnLS3HrJOCdFrTLk3iCAhkZg4tpJPi0xSA2GBCM6AqsSie4t+AolxLj
qeBHqG3hh1PGgS2QjbcLYhV/hCLljeQsDm3BJdi/r7I9EB18p1E8cHinPjBu
9RZ3IJJrlyz8LLkFygPVB8le/midNftOiPQWVBxf3dIe9EO1F/mPnZXbgprW
/ZHtyn7o3OB/BR8UtmA3of7eYXpfZDG1mleCtmDX0VMP8997IREpR4e7Z7Yg
zNw4dF3OC806TolLam5BQEuNPnO+J3qw/uNVls4WdF74kgQZHiiCsS77uckW
tIlntTSWuKH3wqHpPne2gK7UMO4PuKCAG3RWp+5tgWnklPTU8H2kWeB9eN15
C0a/rxpvet9HPfKOqffct0Bs7s97PS9nNAtGKTaBW0D4eGi/QqkjKgn6eu1w
0BYk2GYbCO9yRG7tGry/QrbAaP7aWorNXbR9UTnZ+OlO/JdJe0HwDuKx4k/U
StyCcv/VD6ptN9FI1vPLjC+2IGK3QmPFqZsoe+q/A40vt8BFWXuPSpEDkr1H
91w1awuESA4zouk3kKbf1DOZoi24bOOmtZFjh1gbrYz+lWyBBT0jp5yMHeph
HOLMK9+CyCWvh9vVtsj86dcYwZotGFj7FKD+/TpyTSmN4m7eguE5t8r30jao
hpIS2tyyBUMPd7eZx1kjitWTR67tWyAl7jwd0WuFQkUt3fs6t+BNr7nqLQtL
lFrEahn3Yws2JIZ4fmeZoT/sG6Znf23B3KtrvbWUa0jC5Y/h6sjOfnQGKOHM
r6EypXealyZ28vrGW1MiV1Fr/Q0Z7sUtSGdpiPzz6zJiFTaSaF7eAiudc/rr
hpeRYRBOyHV1xz/d/JtCX03Qr/P79vcRt2BE2XYjtNUYLfU0kp8xkKF/9il+
eMwIKSgUEc4wk0FF67vOXkcj5JWQtIzfTYbcA/teD5MNEaOZ01+j/8jgYjF1
WFLUEB36y9/BdYgMmQHuooTD+sjy3O7WJj4yLHvGfHW31kPZ+av1LofJMHKA
b+Fmri6ScfzytleEDANUPf0z6AI6Q/BIeSZLBiaE0c5lnUdPrtg+PyNPhkD7
kredjOdR53v9aPxJMkReEg7guqOFTAPEHhupkGEDvxgcdOYcurO77zaXBhls
2yi8E7waqPR2nV3TOTIkOYd4HU8+i9Y7Xlu6aJPhbo0+fxbvWfQw9qFRrz4Z
OE79Fi0UP4Oe88qqPrtKhnln5krmJoR++h5SOGNOhqiMgFX5BQwdGWOUxVuS
Id67riFNAEOvs38JGdmRoYDUGdISqY7qpMNYuJzI0HBSgFs0XwUpfz/YFXef
DH50PCL1TCqozC//2f4HZDis8yDlmMMplN3VxnfIiwxHrwryiCsqozBnZlnB
x2Q4Rdt75MGWAqI/lIDPDCZDxXJewG03BeTTKFYtEkoG1y+1nxPwJ9E9Lk2Q
iCSD/7A00iGcQJcqHhvJJpJB6qRbKhKSRx3m3DylyWQIwu/32GN/HGkyZf+S
f0kGpQL+y8RIOXTqcpOdYiYZFLt4ZwKWZJAAcdtd/c1O3st5iH1RCiVmxKjV
Fe3ooZ2i564ihTi0BbdRKRlYcjTOmIVJIoYXKOxsJRkWtZXiVJSOohk1/xSd
ejLUUiSanzWKIZu/bNYdjWS418J/Q0FWDP16miqq/4kM635jFnFpoqhz5EOR
4WcyfM39+Fk+XAS9Ddiqv9JHhgM6q7054UJI+mhE0M/vZBBWoj/4h0sIverm
1Tb/QYbWJ/f/OasJoiQh1V6rETIMBmrN93gfRn7Nnn9vTJPhh2JeeTuODxHu
7H49M0sGnSXVmnUfXuS0L8nx9vwOvl6eyen6Q+i6fTXBcYUMnfFbcdXGB5HW
LsJuty0yVMs+SftVvR81lgR3Eig7fmqWZ6rg249Ur+x/5rlNBs+KFdWmx/uQ
zGsFPl8mCsjPHTTgseZGXBdcZR6zUyBDrNtu6hwnymzi2KvGRYHFtPOtYX4c
SF61+B9+HwUYs2t6LN3Z0UXJ2bzrvBT4mfrgulMAGxrNCAnhFaDAEoPBPBa9
FzkeFLXvPUIBxRt3/fVyWVHELivhM2IUGL8js2Ixy4J4A8jbmxIU2FOfQ0fd
x4JeE5LHyqQo0EZ/++4hrd2ofbL/pdBxChRF3y5mrWNGTJ90eOjUKKDcdnJE
AM+A4tVm1mtwFDg6/f1Wty4DEnkb3O8MFEiD3fpFhfTodFZD7G9NCtxxceUw
9KFD3YcsnZPOU8CxOCA0rXcbs4rd0je4QIEHu2b+fKuhYf4PlfY2GFAAn7+e
05hOwdiIff88LlHghgk7kZZOxlKd7n+Wu0yB3RfGaI75W1itZWFIuhkFOtTP
i093b2Ib6sJ0ATcokCrK6sLsTcBCKurHlG5RwPb+EzenynVsv7RF3eIdChTY
8dle2FjDFPiSfCzvU6DhmFx4UuQq1vxM8dqBBxR4xMig+2Ycj13a03eqy50C
DHNjRFc1PHZ/k42A893Rt/lD2iJlGdt2ftO/7k+BIVXv5NqeJSx65vzbokAK
VPDrv8gsWcSKBh87CzyhgI4yQ6d/6Dz2r3LzHzmWAs2JGlpWuTOYl0zi54p4
CrS0Ff1paZrGWF4p5N9NpMCz9zlo1/QUJhHvZD/8kgIxBzvLjpybxKpY2TTi
0ylwPmloyu/hX0zzcYGwbhYFVPgbmVsaJzBbl8mx2ryd+bRUy2Wv/MHws4/q
XAsoQNmsfDpZOI4F2gimHiuiQPCpq7+Kdo1jGQZm11LKKeBhpyRh+nIUG5Ht
6ff+uIOv4xbkq/ITy5jn8mdsoECyon2Lhc4QZltgLBHVRAHtEf5Ba9sf2D+x
H16ZbRQQWm5N7SgcwIomDokc+0KB15q/ht4Nf8fuZ5p1VHRQAPtZMNrD/R3b
4B873N5DAS8x1onUhD6s9qdgu2E/BbYT9Sonxnsx/6Tr938NUADHpTLucbIX
Y9o31bz4iwJJrw1u+Xd3Y1ysCzf3T1Eg3VnYn0e6A/veLsuVPkMBM1qI+Ar/
Vyw5xLn26BwFXm33GgTyfMGO0K+xqS9T4JDL/VOPj7ZjE/WK1S14CjhcYh67
irVhuX4e1hfXKTBd/e59qXkrJrNJKr9OokC/wZx3Y9knbLlK3XyeTAGbF7xj
K9PN2NsH/kzuNAq45aibRYs1Y6rLdFfCGKnwdWH87b6qRkxrejel5D8qmI+L
FUfqfMT2vNLJVeGkguWeiJgMwQ9Y5/WnF5u5qTDox2FGpKvFjEfZswYOUsEm
/MeB+b81GM9LwwvWfFS4kSBq/WWyGvt1NW5tVoAKN2VeH3BZrsJsvh/QoghT
wbsy7nSTUCUmFndlOUSMCujIsaZmrQpsxuBFMsdRKvBY2WaC+1vMqUNgXkSG
CgYHvuC958ow32bRWB1lKui+IfOqWBRhKPCGar8KFfJu+nKKChViDCh/wkKd
Con1RHL1SgEW9v6Y0v3TVHAJnpFlqs7H9Dwdx0hnqXCc8vfSSEEexqFUEhp0
jgrRTy+tpLzOxRLLTvxKvLDD53DY+ROtOdg1pwdBQvpUOKjlckNzIhsTkKmS
eWNAhRRtidhKlmwsJ1/lYZ0JFZjdFU5r3c/EytJBbNKKCkRf/Hvesy+xNZ+1
3devUyHrmn1NP3MKpnwlf37UjgplDm21DYPJ2AcOjooft6jQ3n39z/H0RIw2
35xocpcKJ/6wrzfEJ2CnP3v49N6jQqnX9fwXz59jbYFjZzpcqfDj/VmiU3Uc
xmIZJ67tToWjokE1iYPPMF1VrT2tnlQYYMwXsaF7hvXgi3vq/ajgsHhZsGws
Gtv37Xql+kMqZPhWyKTfjMJM3xxIfveICrlq6Up4ukhs2Nbf+u0TKuw5w20q
ZxuOHYETGsfDqXA3rNpmWDIMs+Gfkih6SgXtVdN5V+oTbLpfbyk3lgp1rj2/
xb4FY5JldH0i8VQwSfVmkfsShN2NrKzKSKDCXG7cD1r3Y2xFU8D/RQoV2hgE
6li3AzEF4R4bnjQqjM7/N2cmEYh5UIM04zOo0B3SpqpaGoCRq+b3Rr2ign1r
T9LLIl8MxWUs78mnwgW9a+9mzvlggU7G/U8Kdvp5nS5cWfbCdh39kBJYQgUB
DWfzGw88MB1G5wBqGRUir2ine+m6Y5G/RWx9KqiQHpaumXTCDeNKjpBye0eF
cY45nihxV8zEDf2Hr93x57PsIHTSBUs0XF25V0eFEcGg26UX7mMCe8ze3Wym
gtJg6GaQ6j3Meuq/1MkWKgTNK3f0v7mLZTc1PbzevlNvMfip9vgd7KiP1Hnz
Tipc7uXn77t/E7tjOnps6BsV+Id3M5pLO2BFJ5+xX+6lQuZ/3H7SG/bYyfnN
gYuDVNAqXAwue2+LubcXve8Y2vHLb3+l7bLr2LscmzTtYSo8Zfos/qXKBsMs
PtufHd/hc2Vo4tVXSyxQxU+7YYIKDbsvvf582AJr3i8vg5uiwphq3h6ZUDNM
uytpTWlu5zwm020FJV/BIgp0f7xdoIJm8nf9AGSKdYVs1x5fpgL3UNZ084YJ
dgndfCy1ToXHmAX+TcolLIGP3yFvY4fv5+7evGAjbGjjm44oiQpJDj850/wN
MctSZa7DtJ3zmLhSyqugj1WbbbL30NHAbk5SLc9IF2PfVcsWxEgDEbORZwOR
OtjNcl9W5V00+DXca3fo73ms0QJj+cdCA/bVd/vXLmlhh1i2mVP30mDP7cMT
lF+amEtFI6MBOw2Wa3ex/fbWwERYNbcr99Egf469WoJ4GvOpYqbe5KHBaGP3
Nbs8wPpt2rf4eGlg7Ka9+vExhsmwhW928dOgNc1qWueROhZcc2Ej8AgNUj9K
yxzIVMVGbNnWFYRpIB99+aPG6ClMif0bflp0By/Bx2LfKWVs2t5oUU+KBtjh
iS16NQUMce6b35amwaEHo0bs4yewpA/fZ9/K0SB7Y9r4eao8tuKQOH3jBA1O
chll+ozIYdrcVycPKdIAIktUIvJlsMw63okOZRp81hq2XE06hpFuDf8OUN3B
b777xLlQEnvTYDU8iWigqaidqaIgjjHcFfqZdIYGaUoHPibmiGLmPBODFzRp
wPsjAUkfF8Eqm3K+U7VocO6ZCbPGdyGM7d6NvjIdGjjU3FMLFRHE7A8d7bHT
o4Gp1Ti9yRcBrO7TbBePAQ2udX/t4E7hw5z4HL/4mdDAyoz2rqeEB2trlW0/
foUGutGLE9OL+zFBl+WWiWs06JSfZ+HV34d5CZQ3J1js8KmpDNf9yoX1tLs2
alvToMDIcOOxHScm+UCxnnydBhLDJ8pbZNmxR0c2PpTY0+CiiPlh49a92El3
75r9d2igVyMYNu+9G4sQUq9qd6SBR/nXMVIsM/a3g/LWx5kGQg97mIY7GTGc
Z32ZrCsN4j1mSAzSDNhzkcCScTcaPNMQbmIvoMMWu84UxXvSIPP1fsHgcBpO
y5vxjZbPTr3TX3nWTTKO2P0kt+jhjh5rRWasd4k4Q1/tHOvHNOC4qJ107xYB
91qCNYs7hAZFw6VqH6LXcPR9HemtoTvzrnNsEn7hcWb+UaleETRIkmxwML6w
gnsraZAiHUWDOhurJZfKRdze75zJYzE0GMlVFXHlnMd9PPY8XjOBBkvDp09p
3Z3G7R+8/IyYtOMPjqEawvVJ3L1HB2PepNCAp218T1jwBK5N5mekZdqOP7kS
3JO6x3FHhlIiODNp8K0+Uob4cAzXLXfkiUcuDdq3+5o9WX/iAkOyHo28ocFK
2ExwUMB3XMqte9zTpTRYoxTNcq714Cp0VXOWK2nwIfS6sNJ6B65TjlmR9J4G
cjHnql3Jbbhprt4WhgYaeA7/kuIYbMa5Mp6KCm2iQZbmZJIWSxNuez31MlsL
DYIE6uqY2utxh4ZuTR/4QoPDojN+tRzvcblfvpWkdNBAOO6kwa7EatzJD4qe
gt929j8+zeGGaSVON52ORaqfBv2wui7qWoYbinHoKR6gQb2WQVd2eDHO/lFn
8skhGvQKI+mzgW9wAfbJUrhRGswtn54PPZeLKzsmr2swQ4P0ildCZ3le4nhq
rKPdyTRgHEt09xwOxuW8bjXdou7g2zE8OnnnMU4+RVrwId02MNkT2mm4QJyO
P7E0jHkbemejPohLeuP8NGJ6X3Jsg3Ve882/VfdwE931+5tFt0Gg5+uL3IvG
uOLZwy/Z9bYBghYuChN4cGFpITZjF7chN//51JV6bpz9pUXxEqNt2H5J4Hzy
iB0n8PFjmf6VbWBTttKboDHiImLM2yJtt8HgOjxIcV5Rv6X8As/qvQ3B4+UF
DHTN6iLB+7V3522DOJ2N0uAdbXWait9/P15vQ/15v0z6E6fVfy7+7csr3AY6
WWn7i8eV1GOvVFhqlW8DLZLfIfmqsPr2sUsPQj5uA8Nz07Tyn6tqI70x6Yz9
2zByO/XIrKy32rsnRLv+gW3Yk16s3NV1Q+25urVUztA2iIbvN0nqNVLTzZWr
PDu2DaMutgdlLoiq1Xp1fXn0bxuSN7CqlmcFqomySjFGC9sgf0G9+TbHY1WX
iVQT4eVtWJzlmIoKMlaV1HP83bi+DQThA4NVLT9VmOi/v4olbsOfSNImITNI
ZbxK/Y7N1jYYWzQpnf+9R+XjnZzj8tSdeVZjiSFLqqeSBPcStre3YdBkbJ7R
v0/6f8EnnPY=
       "]]}}, InsetBox[
     TemplateBox[{"1","10","25"},
      "LineLegend",
      DisplayFunction->(StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              StyleBox[
               TagBox[
                FormBox[
                "\"\\!\\(\\*SuperscriptBox[\\(Dimension\\), \\(\\\\ \
\\)]\\)(m)\"", TraditionalForm], TraditionalForm, Editable -> True], {
               FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
               False]}, {
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.1421359549995791, 0.6, 0.6]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
        Background -> Automatic, StripOnInput -> False]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                   "]"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"Hue", "[", 
                   RowBox[{"0.1421359549995791`", ",", "0.6`", ",", "0.6`"}], 
                   "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"\\!\\(\\*SuperscriptBox[\\(Dimension\\), \\(\\\\ \
\\)]\\)(m)\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.6}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesLabel->{
     FormBox["\"distance\"", TraditionalForm], None},
   AxesOrigin->{0, 0},
   Method->{},
   PlotLabel->FormBox["\"Fraction overlap\"", TraditionalForm],
   PlotRange->{{0, 2}, {0., 0.9999999789265758}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]},
   Ticks->{{{0, 
       FormBox["0", TraditionalForm]}, {1, 
       FormBox["1", TraditionalForm]}, {2, 
       FormBox["2", TraditionalForm]}}, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Line[CompressedData["
1:eJwVzX0w1AkYB/DFNjk6oaKt5HSKpBJFUX1Rl0KJdOpOkYi2EoV04zacRS+i
CymUvJQydnVeRlH22NHZ2SIvKaffatvWYu2PshZh73d/PPPMZ77Pdx6zoLM+
IZo0Gm0vNf9v9xDZG95AyPZXFdwxtZoEfceSCBFjJ3gTBvy4GRJ293LyKhm+
SO9ZfHNyioTHq+6/8hnB0M5ateGrkoRfsOr5n4wo3NJ2PSMdIvFhfcqONEYS
QkZjPwu7SRQs8kq+wsjEwyZp120uiQTtSovLjGIIQxtr7AJIHDp8nzsyWoWL
g3OUfRUK6KoT/N2WN0C3z+HKUj0FVnorZE1X+ejdJE5MCR/GhddbkDPWAtvm
xROn/5bDuMqA0NBoRVzLNr7IVI4a8Q5h69Z2+M4l5wkjhtDIzF96WN4Jr5LF
Twf4g1Cu2ja//Ew3XGps6jPNB6E5Waa/dGUPGjS6nJ7GDMBeHVhzgNMLW16o
4alOGYRJG183W4nQRpzz3LdJBtOMoclHij4oHHS0ylL7MaQSEV02YujQM/Sz
+qUoHqwT6F3/hHKdwjsTm6XQM3lISiQSxEZap6alfca1k9UnCsylcPQoEXKH
JRh3LpOEXeoHO+BxmoezBFG2/CqjJhmapfklUXc/QcThX31jNoiMUhNHY1KM
b8zO3NW/DSFRsMh2yFWMNS5zZ0/UycEMmI73LPwIt0Kz0CfGCvSuO+tpMdaH
CyYBKz76k9gZ2Rae7t0Ha/lB3e69Iyi18B3wDhZhwfwRbf7UCHo+miou6BCg
N+Ryf8wbxUTCPwW1L3txamPd++88vsDq1mVP+cl/UbYnqODF+BeUnnZqSDTs
gXJoib40+ysWWgpEdu3vUH3ATStz5xhyDkVOdsd049Ju9r0q6Rg0zyp52bZv
YfbB/V0RW4kXPzG9asc64eiQlMmwHce1G6q3wtwO+C9vndToGMfupmPzpg+3
QylIE0ckqGDElDgun2lDDv1olI/5BAqGU9bVhLdiAVFdqMmfQG2KZbSSFGLO
7wm+WyInIdedKl/iJADt0VGu2HAKNH+2a3TVS5y7w00zbJzC5myXlmoVH8/X
pGobhH/DPG/Rhzq3Rhi4n7NO1JtGLPdMnuJqA3rXtnVcrJ+G5Q3WsQ3LnqHi
LswlR2eQqqNFENrVOMK1NzCZnYE+2z3GeH4F4tn3E3ofz4JW2v/ZwacE5TKT
XD1PNQIHXfOsWdlIzWcHEvvUoHl5knbm2Qj2GV7J8VYjvvKgq5MgC8vq6yv2
+lGOC5PtMcrClfRfm68FqcHTu74xlHMTYfa3R3UuUn2798L7RAZWJC3cPfcB
da8iptaykjG7Oe777lLKvNGCrQI23g9/an9QRvUv0908jNjI8Ks8susJ1V9m
dTOM8wfUVj7n2fVqODtHryki4tH7Jv2uVgeVGxrX2rBiUJusOt7RRbl4K32f
UTQynQJWF72jbB+0/xTnPDxK1lW5EtS/X8plJUQEnsW+akkYoPJdKbb2rBPI
Xrsp3VtOmdkuiOAcR6Q4z9eMpJxucryMCISl52kRb4xyRaiFC+tn0DU6izNU
lCdm/GqI/eirdmIGTlGOtzTwY+1CPbNovc0M5R8eSxJZ9rhlqqtUqynTaO28
gYPb/wPALHM2
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Line[CompressedData["
1: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
rGyBzg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Line[CompressedData["
1:eJwVVnc8le8bNkvytSpllC0yUkbGeZ+7IhFCpLJDWiKyVwoZWZGRbCHZWaXM
jApZkTKSrOyD4zjO8PP7530/9+e+n/u67uu5nud9hW2dL91goKOje7/z+P/7
wo3Z3sZ/N1CA/u2+7e1lYNLgu/+bVxN05z4dGCcsg0JGcmoFrwk8r5S91ji/
DLpdP96m8dpDvJH/XOCPZbhiT6yL43WDKHmqDUPpMoweD9WI4g0G76nVhd1W
y5B5wOBJBO9zqC/4tHX04xI8Yqk4Gs77Cpzs/kRyeC/C1WtZpSv4SuAu6f2S
1jwHe7cfWZw/0gDWjvmuu87PgrjR0uynpy2AyzLQifw3BZ7fVCF5/Qsc89pU
P+P6Fw5Wco3R03fDtx6/2a4zf6B6QqOzG9cHry75r0SyjUHznTT+awvfQXnp
1THZrZ9AkMA4iu/9gB4UZ7rkPQgMpEJOfvFfcElOXkmbqR+Ut22qjUtGQOXs
hdjX/D3QGaz4re3Yb1jRaOApFegAwdh5UsHSOHxcEFouV2uDeeLvsQH5CRBz
qeUO0GiGV3MfvrJH/4WVbz7EQrE6cEoyEL0TvxNb1fhys9bBKc2/vq3Jf+GW
SxX90+WP8DWNVdYv5y98HvxDKq/9CHjDazH/3v2F+wbdc4NGHwHVbBi3/P0L
KgeDND2DPsDPoBOj3qqT0PtqhTi59h7YD+cvT05OAsfY7pvMLDVw2jRo9O+/
SehZUA5VXasG1xjrjomlSWDpvv7Xd6waBukP5Y9vTkJOmK+qdFU1pE+HWY2w
TUHk22NNCnbVIFd2p6tfcQrMh9otZ5qqQF9DrrA5eAoclMLDy8MrIfJ2lUOm
2DRUSodpPT/zFuZOF4ftPTYNP03Zgt7KvYXzh3LfeByfhvzDsX2/+d8CQ/vz
JT21aSDRC0Xd3CgHbzE3D5LBNLTJUbKOFZWDw++TTy75TkPpQ7MBL75yOHO5
LJepbxpWIxJf0jOUwcbpwslbD2dAjbSYemGjED6+mn/pGTwDiVLXfPJ+FsJj
FhnjJ+EzMK5Nvs5bVwjsPUVNOfEzUFaVJ6gZXAgS1iXpY/kz0GC6i7FoXyGY
+pdfNemZAdarh3/XKr+Bqvc1nSA8C9VLNrWBUa/B7WRLJc+nWYhLuxbI7psL
DopCmc8+z0KnR+nc6PVcuKrs95Tt2yx4KvH/btHOBXU1RVuGn7PwvQ6O/eTJ
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
v0/6f8EnnPY=
         "]]}}}, {
     AspectRatio -> GoldenRatio^(-1), Axes -> True, 
      AxesLabel -> {"distance", None}, AxesOrigin -> {0, 0}, Method -> {}, 
      PlotLabel -> "Fraction overlap", 
      PlotRange -> {{0, 2}, {0., 0.9999999789265758}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {
        Scaled[0.02], 
        Scaled[0.02]}, Ticks -> {{0, 1, 2}, Automatic}}], {
     Placed[
      Unevaluated[
       LineLegend[{
         Directive[
          Hue[0.67, 0.6, 0.6]], 
         Directive[
          Hue[0.9060679774997897, 0.6, 0.6]], 
         Directive[
          Hue[0.1421359549995791, 0.6, 0.6]]}, {1, 10, 25}, LegendLabel -> 
        "\!\(\*SuperscriptBox[\(Dimension\), \(\\ \)]\)(m)", LegendLayout -> 
        "Column", LegendLabel -> 
        "\!\(\*SuperscriptBox[\(Dimension\), \(\\ \)]\)(m)"]], 
      Scaled[{0.85, 0.6}], Identity]}]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.732990891271201*^9, 3.7329909097738647`*^9}, 
   3.733511133603135*^9}]
}, Open  ]],

Cell[TextData[{
 "As explained in the appendix, we can interpret the fraction of overlap as \
the fraction of beneficial mutations that are mutually beneficial for both \
parental populations throughout the adaptive walk towards the respective \
optima when we envision adaptation not as the movement of the mean parental \
phenotypes but as the movement of the optima. Assuming both populations adapt \
at the same rate, we can use the calculations above to say what the fraction \
of overlap is when populations have adapted a fraction ",
 StyleBox["f",
  FontSlant->"Italic"],
 " of the way to their optima. To do this we just set d = d (1-f). And \
because the fraction of overlap does not depend on d, it therefore remains \
the same over the entire adaptive walk (assuming both populations move \
directly towards their optima at the same rate; variation in the walks will \
cause this result to be an approximation). One way to understand this is to \
realize that as populations approach their optima the radii of the \
hyperspheres declines, and this decline equally reduces the space of \
beneficial mutations (the volume of a hypersphere) and the space of mutually \
beneficial mutations (the volume of the two hyperspherical caps).   "
}], "Text",
 CellChangeTimes->{{3.7397953797176943`*^9, 3.7397957832181587`*^9}, {
  3.739795935304291*^9, 3.739796016080913*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Segregation load vs. hybrid fitness\
\>", "Section",
 CellChangeTimes->{{3.7397960502369757`*^9, 3.739796058818424*^9}}],

Cell["\<\
Assume the distribution of hybrid phenotypes is mutlivariate normal, centered \
between the two parental optima, with variance \[Lambda] in each dimension, \
and no covariance\
\>", "Text",
 CellChangeTimes->{{3.737646127527523*^9, 3.737646187088438*^9}, {
  3.739796098612602*^9, 3.739796137268653*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", "2"}], ";", 
  RowBox[{"(*", "dimensions", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"mean", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"\[Theta]1", "[", "i", "]"}], "+", 
       RowBox[{"\[Theta]2", "[", "i", "]"}]}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"mean", " ", "phenotype"}], ",", " ", 
    RowBox[{"where", " ", 
     RowBox[{"\[Theta]j", "[", "i", "]"}], " ", "is", " ", "the", " ", 
     "optimum", " ", "value", " ", "for", " ", "trait", " ", "i", " ", "in", 
     " ", "parent", " ", 
     RowBox[{"j", "'"}], "s", " ", "environment"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"covarmat", "=", 
   RowBox[{"\[Lambda]", " ", 
    RowBox[{"IdentityMatrix", "[", "m", "]"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"variance", "-", 
    RowBox[{"covariance", " ", "matrix"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"vars", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"m", " ", "phenotypes"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"p", "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{"mean", ",", "covarmat"}], "]"}], ",", "vars"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "probabily", " ", "density", " ", "function", " ", "of", " ", "hybrid", 
    " ", "phenotypes"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.739715238083712*^9, 3.739715279359968*^9}, {
   3.7397153114161243`*^9, 3.739715414839617*^9}, {3.739715483735111*^9, 
   3.739715571503117*^9}, {3.739716515554377*^9, 3.739716515840509*^9}, {
   3.739716551200849*^9, 3.739716552255546*^9}, {3.7397166912466784`*^9, 
   3.7397167036861277`*^9}, 3.739725149768515*^9, {3.739730480469968*^9, 
   3.739730480596044*^9}, {3.739730819592416*^9, 3.739730824574522*^9}, {
   3.739796142338546*^9, 3.739796297373191*^9}, 3.739796392699875*^9, {
   3.739796710140696*^9, 3.739796710476248*^9}}],

Cell["\<\
The fitness functions in each parental environment are\
\>", "Text",
 CellChangeTimes->{{3.737646190344483*^9, 3.737646202152814*^9}, {
  3.7397963180824614`*^9, 3.739796326234495*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"opt1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Theta]1", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"optimum", " ", "for", " ", "parent", " ", "1"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"opt2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Theta]2", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"optimum", " ", "for", " ", "parent", " ", "2"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w1", "=", 
    RowBox[{"2", " ", "\[Pi]", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"MultinormalDistribution", "[", 
        RowBox[{"opt1", ",", 
         RowBox[{"IdentityMatrix", "[", "m", "]"}]}], "]"}], ",", "vars"}], 
      "]"}]}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "fitness", " ", "of", " ", "trait", " ", "z", " ", "in", " ", "parent", 
    " ", "1", " ", "environment"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w2", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"MultinormalDistribution", "[", 
       RowBox[{"opt2", ",", 
        RowBox[{"IdentityMatrix", "[", "m", "]"}]}], "]"}], ",", "vars"}], 
     "]"}]}]}], " ", ";", 
  RowBox[{"(*", 
   RowBox[{
   "fitness", " ", "of", " ", "trait", " ", "z", " ", "in", " ", "parent", 
    " ", "2", " ", "environment"}], "*)"}], "\[IndentingNewLine]"}]}], "Input",\

 CellChangeTimes->{{3.736876161368559*^9, 3.736876169056485*^9}, {
   3.736876225876849*^9, 3.736876254060066*^9}, 3.7368765891997538`*^9, {
   3.736876711665216*^9, 3.736876724532123*^9}, {3.739715600718886*^9, 
   3.739715667994142*^9}, {3.739796327911977*^9, 3.7397964003370647`*^9}, {
   3.7397967887194967`*^9, 3.739796789974629*^9}}],

Cell["\<\
Generate a vector to use in the plot function below (can\[CloseCurlyQuote]t \
figure out how to remove outside curly brackets, so just copy and paste \
without them into NIntegrate below :()\
\>", "Text",
 CellChangeTimes->{{3.739796520137641*^9, 3.739796588002211*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"z", "[", "i", "]"}], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.739796569420693*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"z", "[", "1", "]"}], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"z", "[", "2", "]"}], ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.739796570323554*^9, 3.739796713385088*^9}]
}, Open  ]],

Cell["\<\
Let the fitness of a hybrid be the maximum of fitness in the two parental \
environments. We then plot the mean fitness of hybrids with phenotypic \
variance \[Lambda] in each dimension divided by the mean fitness of hybrids \
with no variance (\[Lambda]->0) as a function of \[Lambda] for three \
different angles of divergence\
\>", "Text",
 CellChangeTimes->{{3.7397964194709883`*^9, 3.739796504239773*^9}, {
  3.739796622902466*^9, 3.739796704868607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Blue"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Red"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Black"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\[Theta]=180\>\"", ",", "\"\<\[Theta]=60\>\"", ",", 
     "\"\<\[Theta]=0\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]1", "[", "1", "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]1", "[", "i", "]"}], "=", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2", ",", "m"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]2", "[", "1", "]"}], "=", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "*", 
     RowBox[{"\[Pi]", "/", "180"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]2", "[", "2", "]"}], "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "*", 
     RowBox[{"\[Pi]", "/", "180"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]2", "[", "i", "]"}], "=", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3", ",", "m"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "=", 
    RowBox[{"{", 
     RowBox[{"180", ",", "60", ",", "0"}], "}"}]}], ";", 
   RowBox[{"n\[Theta]", "=", 
    RowBox[{"Length", "[", "\[Theta]s", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"novar", "=", 
    RowBox[{"(", 
     RowBox[{"w1", "/.", 
      RowBox[{
       RowBox[{"z", "[", "i_", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Theta]1", "[", "i", "]"}], "+", 
         RowBox[{"\[Theta]2", "[", "i", "]"}]}], "2"]}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"w1", ",", "w2"}], "]"}], "p"}], "/.", 
           RowBox[{"\[Theta]", "\[Rule]", 
            RowBox[{"\[Theta]s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "[", "1", "]"}], ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "[", "2", "]"}], ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"MinRecursion", "\[Rule]", "50"}], ",", 
          RowBox[{"MaxRecursion", "\[Rule]", "100"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"GlobalAdaptive", ",", 
             RowBox[{"MaxErrorIncreases", "\[Rule]", "10000"}]}], "}"}]}]}], 
         "]"}], "/", "novar"}], "/.", 
       RowBox[{"\[Theta]", "\[Rule]", 
        RowBox[{"\[Theta]s", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "\[Theta]s", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]], ",", "0.11", ",", "0.025"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Segregation variance\>\"", ",", "16"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Relative mean hybrid fitness\>\"", ",", "16"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "colors"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"colors", ",", "legend", ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<Angle of divergence\>\""}]}], 
       "]"}], ",", "Right"}], "]"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"m\",
FontSlant->\"Italic\"]\) = ``\>\"", ",", "m"}], "]"}], ",", "16"}], "]"}]}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<loadfit_m2.pdf\>\""}], ",", "%"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]s", ",", "\[Theta]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7397967183211117`*^9, 3.73979678641967*^9}, {
  3.739796828204976*^9, 3.73979683633395*^9}, {3.739796880384791*^9, 
  3.739796918361169*^9}, {3.739797006781509*^9, 3.739797059382243*^9}, {
  3.739797196246461*^9, 3.7397971964365683`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.739796737706327*^9, 3.7397967693166656`*^9}, 
   3.7397967997827663`*^9, 3.739796839522949*^9, {3.7397970132946253`*^9, 
   3.73979706314326*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.739796737706327*^9, 3.7397967693166656`*^9}, 
   3.7397967997827663`*^9, 3.739796839522949*^9, {3.7397970132946253`*^9, 
   3.7397970642266283`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.739796737706327*^9, 3.7397967693166656`*^9}, 
   3.7397967997827663`*^9, 3.739796839522949*^9, {3.7397970132946253`*^9, 
   3.73979703444706*^9}, 3.7397970652843933`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.739796737706327*^9, 3.7397967693166656`*^9}, 
   3.7397967997827663`*^9, 3.739796839522949*^9, {3.7397970132946253`*^9, 
   3.73979703444706*^9}, 3.7397970653201*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{
       RGBColor[0, 0, 1], 
       Thickness[Large], 
       LineBox[{{0.001, 1.024702031972376}, {0.026000000000000002`, 
        1.1119336827481041`}, {0.051000000000000004`, 1.1448064644479194`}, {
        0.07600000000000001, 1.164555733968841}, {0.101, 
        1.1772241725744548`}}]}, {
       RGBColor[1, 0, 0], 
       Thickness[Large], 
       LineBox[{{0.001, 1.0117235468422419`}, {0.026000000000000002`, 
        1.0397800451894765`}, {0.051000000000000004`, 1.041218928471721}, {
        0.07600000000000001, 1.0367269420475798`}, {0.101, 
        1.029305627662163}}]}, {
       GrayLevel[0], 
       Thickness[Large], 
       LineBox[{{0.001, 0.9990009897514861}, {0.026000000000000002`, 
        0.9746588691236998}, {0.051000000000000004`, 0.9514721044372393}, {
        0.07600000000000001, 0.9292899208787712}, {0.101, 
        0.9078287335099725}}]}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesOrigin -> {0.001, 0.9078287335099725}, 
    Frame -> {True, True, False, False}, FrameLabel -> {{
       FormBox[
        StyleBox[
        "\"Relative mean hybrid fitness\"", 16, StripOnInput -> False], 
        TraditionalForm], None}, {
       FormBox[
        StyleBox["\"Segregation variance\"", 16, StripOnInput -> False], 
        TraditionalForm], None}}, FrameStyle -> Directive[FontSize -> 16], 
    Method -> {}, PlotLabel -> FormBox[
      StyleBox[
       InterpretationBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"m\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
\\!\\(TraditionalForm\\`2\\)\"", 
        StringForm[
        "\!\(\*\nStyleBox[\"m\",\nFontSlant->\"Italic\"]\) = ``", 2], 
        Editable -> False], 16, StripOnInput -> False], TraditionalForm], 
    PlotRangeClipping -> True],
   TemplateBox[{"\"\[Theta]=180\"", "\"\[Theta]=60\"", "\"\[Theta]=0\""}, 
    "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              FormBox["\"Angle of divergence\"", TraditionalForm], 
              TraditionalForm, Editable -> True], {FontFamily -> "Times"}, 
             Background -> Automatic, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 RowBox[{"GrayLevel", "[", "0", "]"}]}], "]"}]}], "}"}], ",", 
         
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", "\"Angle of divergence\""}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Right"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.73979674046524*^9, 3.739796804263792*^9}, 
   3.7397968440521507`*^9, {3.7397970179776917`*^9, 3.7397970676793633`*^9}}]
}, Open  ]],

Cell["For higher dimension", "Text",
 CellChangeTimes->{{3.739797076769452*^9, 3.739797079739381*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"m", "=", "3"}], ";", 
   RowBox[{"(*", "dimensions", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"mean", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"\[Theta]1", "[", "i", "]"}], "+", 
        RowBox[{"\[Theta]2", "[", "i", "]"}]}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"mean", " ", "phenotype"}], ",", " ", 
     RowBox[{"where", " ", 
      RowBox[{"\[Theta]j", "[", "i", "]"}], " ", "is", " ", "the", " ", 
      "optimum", " ", "value", " ", "for", " ", "trait", " ", "i", " ", "in", 
      " ", "parent", " ", 
      RowBox[{"j", "'"}], "s", " ", "environment"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"covarmat", "=", 
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"IdentityMatrix", "[", "m", "]"}]}]}], ";", 
   RowBox[{"(*", 
    RowBox[{"variance", "-", 
     RowBox[{"covariance", " ", "matrix"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"vars", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"z", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{"m", " ", "phenotypes"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"p", "=", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"MultinormalDistribution", "[", 
       RowBox[{"mean", ",", "covarmat"}], "]"}], ",", "vars"}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "probabily", " ", "density", " ", "function", " ", "of", " ", "hybrid", 
    " ", "phenotypes"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opt1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Theta]1", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"optimum", " ", "for", " ", "parent", " ", "1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"opt2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Theta]2", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"optimum", " ", "for", " ", "parent", " ", "2"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"w1", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"MultinormalDistribution", "[", 
       RowBox[{"opt1", ",", 
        RowBox[{"IdentityMatrix", "[", "m", "]"}]}], "]"}], ",", "vars"}], 
     "]"}]}]}], " ", ";", 
  RowBox[{"(*", 
   RowBox[{
   "fitness", " ", "of", " ", "trait", " ", "z", " ", "in", " ", "parent", 
    " ", "1", " ", "environment"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"w2", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"MultinormalDistribution", "[", 
       RowBox[{"opt2", ",", 
        RowBox[{"IdentityMatrix", "[", "m", "]"}]}], "]"}], ",", "vars"}], 
     "]"}]}]}], " ", ";", 
  RowBox[{"(*", 
   RowBox[{
   "fitness", " ", "of", " ", "trait", " ", "z", " ", "in", " ", "parent", 
    " ", "2", " ", "environment"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"colors", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Blue"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Red"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Black"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\[Theta]=180\>\"", ",", "\"\<\[Theta]=60\>\"", ",", 
     "\"\<\[Theta]=0\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]1", "[", "1", "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]1", "[", "i", "]"}], "=", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2", ",", "m"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]2", "[", "1", "]"}], "=", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "*", 
     RowBox[{"\[Pi]", "/", "180"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]2", "[", "2", "]"}], "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "*", 
     RowBox[{"\[Pi]", "/", "180"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]2", "[", "i", "]"}], "=", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3", ",", "m"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "=", 
    RowBox[{"{", 
     RowBox[{"180", ",", "60", ",", "0"}], "}"}]}], ";", 
   RowBox[{"n\[Theta]", "=", 
    RowBox[{"Length", "[", "\[Theta]s", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"novar", "=", 
    RowBox[{"(", 
     RowBox[{"w1", "/.", 
      RowBox[{
       RowBox[{"z", "[", "i_", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Theta]1", "[", "i", "]"}], "+", 
         RowBox[{"\[Theta]2", "[", "i", "]"}]}], "2"]}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"w1", ",", "w2"}], "]"}], "p"}], "/.", 
           RowBox[{"\[Theta]", "\[Rule]", 
            RowBox[{"\[Theta]s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "[", "1", "]"}], ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "[", "2", "]"}], ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "[", "3", "]"}], ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"MinRecursion", "\[Rule]", "50"}], ",", 
          RowBox[{"MaxRecursion", "\[Rule]", "100"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"GlobalAdaptive", ",", 
             RowBox[{"MaxErrorIncreases", "\[Rule]", "10000"}]}], "}"}]}]}], 
         "]"}], "/", "novar"}], "/.", 
       RowBox[{"\[Theta]", "\[Rule]", 
        RowBox[{"\[Theta]s", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "\[Theta]s", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]], ",", "0.11", ",", "0.025"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Segregation variance\>\"", ",", "16"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Relative mean hybrid fitness\>\"", ",", "16"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "colors"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"colors", ",", "legend", ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<Angle of divergence\>\""}]}], 
       "]"}], ",", "Right"}], "]"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"m\",
FontSlant->\"Italic\"]\) = ``\>\"", ",", "m"}], "]"}], ",", "16"}], "]"}]}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<loadfit_m3.pdf\>\""}], ",", "%"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]s", ",", "\[Theta]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.739715238083712*^9, 3.739715279359968*^9}, {
   3.7397153114161243`*^9, 3.739715414839617*^9}, {3.739715483735111*^9, 
   3.739715571503117*^9}, {3.739716515554377*^9, 3.739716515840509*^9}, {
   3.739716551200849*^9, 3.739716552255546*^9}, {3.7397166912466784`*^9, 
   3.7397167036861277`*^9}, 3.739725149768515*^9, {3.739730480469968*^9, 
   3.739730480596044*^9}, {3.739730819592416*^9, 3.739730824574522*^9}, {
   3.739796142338546*^9, 3.739796297373191*^9}, 3.739796392699875*^9, {
   3.739796710140696*^9, 3.739796710476248*^9}, {3.739797109613378*^9, 
   3.739797157051653*^9}, {3.739797191945418*^9, 3.739797192106798*^9}, 
   3.739797271083499*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7397971430505857`*^9, 3.739797162807171*^9}, 
   3.73979719924793*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7397971430505857`*^9, 3.739797162807171*^9}, 
   3.739797202761397*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7397971430505857`*^9, 3.739797162807171*^9}, 
   3.739797206508808*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.7397971430505857`*^9, 3.739797162807171*^9}, 
   3.739797206568077*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{
       RGBColor[0, 0, 1], 
       Thickness[Large], 
       LineBox[{{0.001, 1.024190064727225}, {0.026000000000000002`, 
        1.0977543855939693`}, {0.051000000000000004`, 1.1166850594077389`}, {
        0.07600000000000001, 1.1226752394892272`}, {0.101, 
        1.121929355375576}}]}, {
       RGBColor[1, 0, 0], 
       Thickness[Large], 
       LineBox[{{0.001, 1.0112181048177142`}, {0.026000000000000002`, 
        1.0265208371823022`}, {0.051000000000000004`, 1.015642096843323}, {
        0.07600000000000001, 0.9994435115610846}, {0.101, 
        0.9809585895393292}}]}, {
       GrayLevel[0], 
       Thickness[Large], 
       LineBox[{{0.001, 0.9985018634763563}, {0.026000000000000002`, 
        0.9622301197895536}, {0.051000000000000004`, 0.9280998398731889}, {
        0.07600000000000001, 0.8958702047726018}, {0.101, 
        0.8651875515493701}}]}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesOrigin -> {0.001, 0.8651875515493701}, 
    Frame -> {True, True, False, False}, FrameLabel -> {{
       FormBox[
        StyleBox[
        "\"Relative mean hybrid fitness\"", 16, StripOnInput -> False], 
        TraditionalForm], None}, {
       FormBox[
        StyleBox["\"Segregation variance\"", 16, StripOnInput -> False], 
        TraditionalForm], None}}, FrameStyle -> Directive[FontSize -> 16], 
    Method -> {}, PlotLabel -> FormBox[
      StyleBox[
       InterpretationBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"m\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
\\!\\(TraditionalForm\\`3\\)\"", 
        StringForm[
        "\!\(\*\nStyleBox[\"m\",\nFontSlant->\"Italic\"]\) = ``", 3], 
        Editable -> False], 16, StripOnInput -> False], TraditionalForm], 
    PlotRangeClipping -> True],
   TemplateBox[{"\"\[Theta]=180\"", "\"\[Theta]=60\"", "\"\[Theta]=0\""}, 
    "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              FormBox["\"Angle of divergence\"", TraditionalForm], 
              TraditionalForm, Editable -> True], {FontFamily -> "Times"}, 
             Background -> Automatic, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 RowBox[{"GrayLevel", "[", "0", "]"}]}], "]"}]}], "}"}], ",", 
         
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", "\"Angle of divergence\""}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Right"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.739797148242144*^9, 3.7397971832310658`*^9, 
  3.739797219776082*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7397967183211117`*^9, 3.73979678641967*^9}, {
   3.739796828204976*^9, 3.73979683633395*^9}, {3.739796880384791*^9, 
   3.739796918361169*^9}, {3.739797006781509*^9, 3.739797059382243*^9}, 
   3.739797120264165*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "4"}], ";", 
  RowBox[{"(*", "dimensions", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"mean", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"\[Theta]1", "[", "i", "]"}], "+", 
       RowBox[{"\[Theta]2", "[", "i", "]"}]}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"mean", " ", "phenotype"}], ",", " ", 
    RowBox[{"where", " ", 
     RowBox[{"\[Theta]j", "[", "i", "]"}], " ", "is", " ", "the", " ", 
     "optimum", " ", "value", " ", "for", " ", "trait", " ", "i", " ", "in", 
     " ", "parent", " ", 
     RowBox[{"j", "'"}], "s", " ", "environment"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"covarmat", "=", 
   RowBox[{"\[Lambda]", " ", 
    RowBox[{"IdentityMatrix", "[", "m", "]"}]}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"variance", "-", 
    RowBox[{"covariance", " ", "matrix"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"vars", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"z", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"m", " ", "phenotypes"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"p", "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"MultinormalDistribution", "[", 
      RowBox[{"mean", ",", "covarmat"}], "]"}], ",", "vars"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "probabily", " ", "density", " ", "function", " ", "of", " ", "hybrid", 
    " ", "phenotypes"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"opt1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Theta]1", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"optimum", " ", "for", " ", "parent", " ", "1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"opt2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Theta]2", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"optimum", " ", "for", " ", "parent", " ", "2"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"w1", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"MultinormalDistribution", "[", 
       RowBox[{"opt1", ",", 
        RowBox[{"IdentityMatrix", "[", "m", "]"}]}], "]"}], ",", "vars"}], 
     "]"}]}]}], " ", ";", 
  RowBox[{"(*", 
   RowBox[{
   "fitness", " ", "of", " ", "trait", " ", "z", " ", "in", " ", "parent", 
    " ", "1", " ", "environment"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"w2", "=", 
   RowBox[{"2", " ", "\[Pi]", " ", 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"MultinormalDistribution", "[", 
       RowBox[{"opt2", ",", 
        RowBox[{"IdentityMatrix", "[", "m", "]"}]}], "]"}], ",", "vars"}], 
     "]"}]}]}], " ", ";", 
  RowBox[{"(*", 
   RowBox[{
   "fitness", " ", "of", " ", "trait", " ", "z", " ", "in", " ", "parent", 
    " ", "2", " ", "environment"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"colors", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Blue"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Red"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Black"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"legend", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<\[Theta]=180\>\"", ",", "\"\<\[Theta]=60\>\"", ",", 
     "\"\<\[Theta]=0\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]1", "[", "1", "]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]1", "[", "i", "]"}], "=", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2", ",", "m"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]2", "[", "1", "]"}], "=", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]", "*", 
     RowBox[{"\[Pi]", "/", "180"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]2", "[", "2", "]"}], "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "*", 
     RowBox[{"\[Pi]", "/", "180"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]2", "[", "i", "]"}], "=", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3", ",", "m"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]s", "=", 
    RowBox[{"{", 
     RowBox[{"180", ",", "60", ",", "0"}], "}"}]}], ";", 
   RowBox[{"n\[Theta]", "=", 
    RowBox[{"Length", "[", "\[Theta]s", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"novar", "=", 
    RowBox[{"(", 
     RowBox[{"w1", "/.", 
      RowBox[{
       RowBox[{"z", "[", "i_", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Theta]1", "[", "i", "]"}], "+", 
         RowBox[{"\[Theta]2", "[", "i", "]"}]}], "2"]}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"w1", ",", "w2"}], "]"}], "p"}], "/.", 
           RowBox[{"\[Theta]", "\[Rule]", 
            RowBox[{"\[Theta]s", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "[", "1", "]"}], ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "[", "2", "]"}], ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "[", "3", "]"}], ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"z", "[", "4", "]"}], ",", 
            RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
          RowBox[{"MinRecursion", "\[Rule]", "50"}], ",", 
          RowBox[{"MaxRecursion", "\[Rule]", "100"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"GlobalAdaptive", ",", 
             RowBox[{"MaxErrorIncreases", "\[Rule]", "10000"}]}], "}"}]}]}], 
         "]"}], "/", "novar"}], "/.", 
       RowBox[{"\[Theta]", "\[Rule]", 
        RowBox[{"\[Theta]s", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "\[Theta]s", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", 
      SuperscriptBox["10", 
       RowBox[{"-", "3"}]], ",", "0.11", ",", "0.025"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Segregation variance\>\"", ",", "16"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Relative mean hybrid fitness\>\"", ",", "16"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "colors"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"colors", ",", "legend", ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<Angle of divergence\>\""}]}], 
       "]"}], ",", "Right"}], "]"}]}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"FontSize", "\[Rule]", "16"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"m\",
FontSlant->\"Italic\"]\) = ``\>\"", ",", "m"}], "]"}], ",", "16"}], "]"}]}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<loadfit_m4.pdf\>\""}], ",", "%"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]1", ",", "\[Theta]2", ",", "\[Theta]s", ",", "\[Theta]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.739715238083712*^9, 3.739715279359968*^9}, {
   3.7397153114161243`*^9, 3.739715414839617*^9}, {3.739715483735111*^9, 
   3.739715571503117*^9}, {3.739716515554377*^9, 3.739716515840509*^9}, {
   3.739716551200849*^9, 3.739716552255546*^9}, {3.7397166912466784`*^9, 
   3.7397167036861277`*^9}, 3.739725149768515*^9, {3.739730480469968*^9, 
   3.739730480596044*^9}, {3.739730819592416*^9, 3.739730824574522*^9}, {
   3.739796142338546*^9, 3.739796297373191*^9}, 3.739796392699875*^9, {
   3.739796710140696*^9, 3.739796710476248*^9}, {3.739797109613378*^9, 
   3.739797157051653*^9}, {3.739797191945418*^9, 3.739797192106798*^9}, {
   3.739797231558137*^9, 3.739797267149823*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.739797266794538*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(10000\\)\[NoBreak] times. The global \
error is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(0.09881807788213103`\\)\[NoBreak] and \
\[NoBreak]\\!\\(1.5897086012188706`*^-7\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.739797318356339*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.739797330134655*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.739797350783188*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: slwcon\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.739797350808756*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(10000\\)\[NoBreak] times. The global \
error is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(0.14195841208650412`\\)\[NoBreak] and \
\[NoBreak]\\!\\(5.376788262987589`*^-7\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.739797378901825*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(10000\\)\[NoBreak] times. The global \
error is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(0.1423401261741309`\\)\[NoBreak] and \
\[NoBreak]\\!\\(4.6520292793888455`*^-7\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.739797398681326*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NIntegrate :: eincr\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.739797398720416*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{
       RGBColor[0, 0, 1], 
       Thickness[Large], 
       LineBox[{{0.001, 1.0236783336342876`}, {0.026000000000000002`, 
        1.0837560170865799`}, {0.051000000000000004`, 1.0892544727968387`}, {
        0.07600000000000001, 1.0823008647580807`}, {0.101, 
        1.069231739280302}}]}, {
       RGBColor[1, 0, 0], 
       Thickness[Large], 
       LineBox[{{0.001, 1.0107129061191984`}, {0.026000000000000002`, 
        1.0134306270991769`}, {0.051000000000000004`, 0.9906933773608104}, {
        0.07600000000000001, 0.9635007536311803}, {0.101, 
        0.934882339642203}}]}, {
       GrayLevel[0], 
       Thickness[Large], 
       LineBox[{{0.001, 0.9980029162242444}, {0.026000000000000002`, 
        0.9499598969118177}, {0.051000000000000004`, 0.9053016985621146}, {
        0.07600000000000001, 0.8636523516753746}, {0.101, 
        0.8245492481199348}}]}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesOrigin -> {0.001, 0.8245492481199348}, 
    Frame -> {True, True, False, False}, FrameLabel -> {{
       FormBox[
        StyleBox[
        "\"Relative mean hybrid fitness\"", 16, StripOnInput -> False], 
        TraditionalForm], None}, {
       FormBox[
        StyleBox["\"Segregation variance\"", 16, StripOnInput -> False], 
        TraditionalForm], None}}, FrameStyle -> Directive[FontSize -> 16], 
    Method -> {}, PlotLabel -> FormBox[
      StyleBox[
       InterpretationBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"m\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
\\!\\(TraditionalForm\\`4\\)\"", 
        StringForm[
        "\!\(\*\nStyleBox[\"m\",\nFontSlant->\"Italic\"]\) = ``", 4], 
        Editable -> False], 16, StripOnInput -> False], TraditionalForm], 
    PlotRangeClipping -> True],
   TemplateBox[{"\"\[Theta]=180\"", "\"\[Theta]=60\"", "\"\[Theta]=0\""}, 
    "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            StyleBox[
             TagBox[
              FormBox["\"Angle of divergence\"", TraditionalForm], 
              TraditionalForm, Editable -> True], {FontFamily -> "Times"}, 
             Background -> Automatic, StripOnInput -> False]}, {
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> 1, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 RowBox[{"GrayLevel", "[", "0", "]"}]}], "]"}]}], "}"}], ",", 
         
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", "\"Angle of divergence\""}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "False"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Right"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7397972341162453`*^9, 3.739797262706119*^9}, 
   3.739797539887096*^9}]
}, Open  ]],

Cell["\<\
Note that under parallel selection (\[Theta]=0), segregation variance is \
always bad as then the mean hybrid phenotype is on the two optima, and any \
variance is a load. Under less parallel selection (\[Theta]=60,180), some \
segregation variance can increase mean fitness, as then some individuals are \
closer to the parental optima. But as the dimension increases this benefit of \
variation wanes because there are more ways to go wrong (away from the \
parental optima) then to go right (towards the parental optima).\
\>", "Text",
 CellChangeTimes->{{3.739797552735529*^9, 3.7397977265686703`*^9}}]
}, Closed]]
}, Open  ]]
},
WindowSize->{1280, 979},
WindowMargins->{{1280, Automatic}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 325, 8, 148, "Title"],
Cell[907, 32, 138, 3, 51, "Subtitle"],
Cell[1048, 37, 185, 4, 29, "Subsubtitle"],
Cell[CellGroupData[{
Cell[1258, 45, 160, 2, 80, "Section"],
Cell[1421, 49, 985, 25, 49, "Text"],
Cell[2409, 76, 238, 5, 30, "Text"],
Cell[2650, 83, 115, 1, 30, "Text"],
Cell[2768, 86, 645, 20, 91, "Input"],
Cell[3416, 108, 702, 12, 49, "Text"],
Cell[4121, 122, 1877, 56, 59, "Input"],
Cell[6001, 180, 425, 14, 30, "Text"],
Cell[6429, 196, 281, 5, 30, "Text"],
Cell[6713, 203, 565, 15, 28, "Input"],
Cell[7281, 220, 641, 14, 49, "Text"],
Cell[CellGroupData[{
Cell[7947, 238, 972, 26, 40, "Input"],
Cell[8922, 266, 705, 20, 66, "Output"]
}, Open  ]],
Cell[9642, 289, 163, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[9830, 296, 505, 11, 28, "Input"],
Cell[10338, 309, 592, 13, 50, "Output"]
}, Open  ]],
Cell[10945, 325, 246, 7, 30, "Text"],
Cell[11194, 334, 269, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[11488, 344, 499, 12, 28, "Input"],
Cell[11990, 358, 410, 6, 28, "Output"]
}, Open  ]],
Cell[12415, 367, 160, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[12600, 373, 370, 9, 49, "Input"],
Cell[12973, 384, 491, 12, 48, "Output"]
}, Open  ]],
Cell[13479, 399, 212, 6, 30, "Text"],
Cell[13694, 407, 232, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[13951, 416, 1850, 49, 131, "Input"],
Cell[15804, 467, 76856, 1334, 203, "Output"]
}, Open  ]],
Cell[92675, 1804, 185, 4, 30, "Text"],
Cell[92863, 1810, 127, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[93015, 1817, 1715, 49, 114, "Input"],
Cell[94733, 1868, 75528, 1296, 203, "Output"]
}, Open  ]],
Cell[170276, 3167, 219, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[170520, 3175, 432, 13, 40, "Input"],
Cell[170955, 3190, 657, 13, 24, "Message"],
Cell[171615, 3205, 864, 26, 51, "Output"]
}, Open  ]],
Cell[172494, 3234, 213, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[172732, 3242, 2003, 51, 131, "Input"],
Cell[174738, 3295, 42671, 776, 231, "Output"]
}, Open  ]],
Cell[217424, 4074, 190, 4, 30, "Text"],
Cell[217617, 4080, 137, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[217779, 4087, 1911, 55, 149, "Input"],
Cell[219693, 4144, 56838, 991, 231, "Output"]
}, Open  ]],
Cell[276546, 5138, 1378, 21, 144, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[277961, 5164, 130, 3, 50, "Section"],
Cell[278094, 5169, 314, 6, 30, "Text"],
Cell[278411, 5177, 2182, 52, 135, "Input"],
Cell[280596, 5231, 195, 4, 30, "Text"],
Cell[280794, 5237, 1978, 53, 97, "Input"],
Cell[282775, 5292, 280, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[283080, 5301, 293, 9, 28, "Input"],
Cell[283376, 5312, 359, 11, 28, "Output"]
}, Open  ]],
Cell[283750, 5326, 469, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[284244, 5338, 5621, 161, 417, "Input"],
Cell[289868, 5501, 705, 13, 24, "Message"],
Cell[290576, 5516, 708, 13, 24, "Message"],
Cell[291287, 5531, 729, 13, 24, "Message"],
Cell[292019, 5546, 682, 13, 24, "Message"],
Cell[292704, 5561, 7844, 171, 285, "Output"]
}, Open  ]],
Cell[300563, 5735, 102, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[300690, 5740, 9448, 261, 625, "Input"],
Cell[310141, 6003, 629, 12, 24, "Message"],
Cell[310773, 6017, 630, 12, 24, "Message"],
Cell[311406, 6031, 630, 12, 24, "Message"],
Cell[312039, 6045, 587, 12, 24, "Message"],
Cell[312629, 6059, 7792, 171, 285, "Output"]
}, Open  ]],
Cell[320436, 6233, 264, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[320725, 6241, 9550, 261, 625, "Input"],
Cell[330278, 6504, 578, 11, 24, "Message"],
Cell[330859, 6517, 1126, 19, 96, "Message"],
Cell[331988, 6538, 578, 11, 24, "Message"],
Cell[332569, 6551, 578, 11, 24, "Message"],
Cell[333150, 6564, 535, 11, 24, "Message"],
Cell[333688, 6577, 1125, 19, 78, "Message"],
Cell[334816, 6598, 1125, 19, 78, "Message"],
Cell[335944, 6619, 534, 11, 24, "Message"],
Cell[336481, 6632, 7797, 171, 285, "Output"]
}, Open  ]],
Cell[344293, 6806, 616, 9, 68, "Text"]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
