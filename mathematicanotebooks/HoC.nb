(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    134410,       2887]
NotebookOptionsPosition[    130891,       2774]
NotebookOutlinePosition[    131274,       2791]
CellTagsIndexPosition[    131231,       2788]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
House-of-cards approximation for ancestral equilibrium\
\>", "Title",
 CellChangeTimes->{{3.747261809346381*^9, 3.747261837658312*^9}}],

Cell[CellGroupData[{

Cell["attempt #1", "Section",
 CellChangeTimes->{{3.747306856491411*^9, 3.747306859108618*^9}}],

Cell["\<\
First define the mutational kernel g and fitness function w (here in \
2-dimensions):\
\>", "Text",
 CellChangeTimes->{{3.7472618462280693`*^9, 3.747261892895281*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["x1", "2"], "\[Lambda]"]}], "-", 
       FractionBox[
        SuperscriptBox["x2", "2"], "\[Lambda]"]}], ")"}]}]], 
   RowBox[{"2", " ", "\[Pi]", " ", "\[Lambda]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], ":=", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x1", "2"]}], "-", 
      SuperscriptBox["x2", "2"]}], ")"}]}]]}]}], "Input",
 CellChangeTimes->{{3.747163751106914*^9, 3.7471637868429193`*^9}, {
  3.74726187979557*^9, 3.7472618803557777`*^9}, {3.747401161199502*^9, 
  3.747401163000019*^9}}],

Cell["\<\
where \[Lambda] is the variance in mutational effect in each dimension and x1 \
and x2 are the trait values in each dimension.\
\>", "Text",
 CellChangeTimes->{{3.747261896368601*^9, 3.7472619440893307`*^9}}],

Cell["\<\
Then at equilibrium, under the house-of-cards (HoC) approximation, the \
distribution of trait values is (Turelli 1984 eqn 3.2a)\
\>", "Text",
 CellChangeTimes->{{3.74726195045994*^9, 3.7472619984613447`*^9}, {
  3.7472621551556664`*^9, 3.747262156152791*^9}, {3.747262222524086*^9, 
  3.747262223756425*^9}, {3.74726240140142*^9, 3.747262403761567*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"x1", ",", "x2"}], "]"}], "==", 
    FractionBox[
     RowBox[{"\[Mu]", " ", 
      RowBox[{"g", "[", 
       RowBox[{"x1", ",", "x2"}], "]"}]}], 
     RowBox[{"1", "-", 
      RowBox[{"k", " ", 
       RowBox[{"w", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}]}]}]]}], "/.", 
   RowBox[{"k", "\[Rule]", 
    FractionBox[
     RowBox[{"1", "-", "\[Mu]"}], 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"x1", ",", "x2"}], "]"}], 
        RowBox[{"w", "[", 
         RowBox[{"x1", ",", "x2"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x1", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x2", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
      "]"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", "%", "}"}], ",", 
      RowBox[{"p", "[", 
       RowBox[{"x1", ",", "x2"}], "]"}]}], "]"}], ",", 
    RowBox[{"\[Lambda]", ">", "0"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"%%", "/.", 
    RowBox[{"%", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", ">", "0"}], ",", 
     RowBox[{"1", "\[GreaterEqual]", "\[Mu]", ">", "0"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"%", "/.", 
     RowBox[{"\[Mu]", "\[Rule]", "0.001"}]}], "/.", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}], "/.", 
   RowBox[{"x1", "\[Rule]", "1"}]}], "/.", 
  RowBox[{"x2", "\[Rule]", "2"}]}]}], "Input",
 CellChangeTimes->{{3.747162391488793*^9, 3.747162583121251*^9}, {
  3.747162659116434*^9, 3.7471626598989267`*^9}, {3.747164013401216*^9, 
  3.747164022369711*^9}, {3.7472622457843246`*^9, 3.7472622488605957`*^9}, {
  3.747401159757903*^9, 3.7474013488649273`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["x1", "2"], "+", 
             SuperscriptBox["x2", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Lambda]"}], ")"}]}], 
          RowBox[{"2", " ", "\[Lambda]"}]]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              SuperscriptBox["x1", "2"], "+", 
              SuperscriptBox["x2", "2"]}], 
             RowBox[{"2", " ", "\[Lambda]"}]]]}], " ", "\[Lambda]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["x1", "2"], "+", 
              SuperscriptBox["x2", "2"]}], ")"}]}]], " ", "\[Mu]"}]}], 
        ")"}]}], 
      RowBox[{"2", " ", "\[Pi]", " ", "\[Lambda]"}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7471625509623747`*^9, 3.7471625850148993`*^9}, 
   3.747162662026328*^9, 3.747163300420292*^9, 3.7471633558701963`*^9, 
   3.747163480532323*^9, 3.747163798047254*^9, 3.747163841447513*^9, 
   3.747164024681075*^9, {3.7472622712156773`*^9, 3.747262278906168*^9}, 
   3.747401170008566*^9, {3.747401205380259*^9, 3.7474012500361137`*^9}, {
   3.747401286587998*^9, 3.7474013510409937`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["x1", "2"], "+", 
            SuperscriptBox["x2", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Lambda]"}], ")"}]}], 
         RowBox[{"2", " ", "\[Lambda]"}]]], " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[Lambda]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", "\[Mu]"}], 
        ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Lambda]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{
              SuperscriptBox["x1", "2"], "+", 
              SuperscriptBox["x2", "2"]}], 
             RowBox[{"2", " ", "\[Lambda]"}]]]}], " ", "\[Lambda]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["x1", "2"], "+", 
              SuperscriptBox["x2", "2"]}], ")"}]}]], " ", "\[Mu]"}]}], 
        ")"}]}]}], ")"}]}], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x1", "2"], "+", 
         SuperscriptBox["x2", "2"]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", "\[Mu]"}], 
      ")"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Lambda]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]}]], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{{3.7471625509623747`*^9, 3.7471625850148993`*^9}, 
   3.747162662026328*^9, 3.747163300420292*^9, 3.7471633558701963`*^9, 
   3.747163480532323*^9, 3.747163798047254*^9, 3.747163841447513*^9, 
   3.747164024681075*^9, {3.7472622712156773`*^9, 3.747262278906168*^9}, 
   3.747401170008566*^9, {3.747401205380259*^9, 3.7474012500361137`*^9}, {
   3.747401286587998*^9, 3.747401357557246*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.7471625509623747`*^9, 3.7471625850148993`*^9}, 
   3.747162662026328*^9, 3.747163300420292*^9, 3.7471633558701963`*^9, 
   3.747163480532323*^9, 3.747163798047254*^9, 3.747163841447513*^9, 
   3.747164024681075*^9, {3.7472622712156773`*^9, 3.747262278906168*^9}, 
   3.747401170008566*^9, {3.747401205380259*^9, 3.7474012500361137`*^9}, {
   3.747401286587998*^9, 3.7474013575583982`*^9}}]
}, Open  ]],

Cell["\<\
[mathematica is not finding the right solution]\
\>", "Text",
 CellChangeTimes->{{3.747401106314093*^9, 3.7474011261545973`*^9}, {
  3.747401310309496*^9, 3.74740131574942*^9}, {3.747401370557333*^9, 
  3.7474013780127707`*^9}}],

Cell[TextData[{
 "Note that HoC requires the variance of new mutations to be much greater \
than that which exists (in our case in each dimension): ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", ">>", 
    SubscriptBox["V", "g"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (Turelli 1984 eqn 2.29)."
}], "Text",
 CellChangeTimes->{{3.7472624096769323`*^9, 3.747262492388649*^9}}],

Cell["\<\
Plot this equilibrium HoC distribution\
\>", "Text",
 CellChangeTimes->{{3.7472622531298313`*^9, 3.747262266268001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], "/.", 
     RowBox[{"sol", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}], "/.", 
   RowBox[{"\[Mu]", "\[Rule]", "0.0001"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.2"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7471626625479*^9, 3.747162722211795*^9}, {
   3.747163644884103*^9, 3.747163672038416*^9}, {3.747163708223564*^9, 
   3.7471637205038*^9}, {3.7471638507010393`*^9, 3.747163903869771*^9}, {
   3.747166269701172*^9, 3.747166285690795*^9}, 3.7472622433801727`*^9, {
   3.747262518238596*^9, 3.747262527497579*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHm4jVX7x82nNJ6SeSw/ohSvqcTZj3koXmSIVBxDZMp0zBXJrDjmKRxj
Zhna2OyNE3oJvZkPGSNFmaeUX9dZ9+fe13O/Tv/s63xann0/372e9dzrXt+1
CsV3bdg2Q7p06YpkTpcu4z+fR9r2237/fkyEz+OHCqQ/P/l63BtNq12rlZhJ
+dx2lVsX+OvJQLjW4wUTC6dXfnLzjH2r3iwaaNNz5dR1nf8Mw9MfaFd/58IK
gTqp17mufEfvcS1zNasdaJXa/jflV1v9t0+HJxoFWqTyFOU7T58b17JT80C6
1P+SK8I7NDy1OOOtFoEPXfuAbd/RXT9gr/9vF0/AxtPexa+86R4X/xZ3vx58
bbK733pOH8/qI397Vk/+Rlfa8zef12bODGyIeVF1hud9uuYPneKqqs7wQs8N
THrnr8aqM7zf/Ltrq15oozrDu5WdfOmz0R+qzvBHkmvve3t3L9VZ23/csUje
n3urzvAGW1x7dLbXR2cbDzrb+NHZ3i86w2/Mc/qgs9UTndGP/kk7ONfnbz7p
P+gMb3WgQKXEUl1UZ23fJlOthHUDVGf45conC2dfP1R1hvcYPf+Hmr+PUZ2V
//5zYN77Y1VneHdpj87wHdXc9dEZ/l57Fw86w6f94OJHZ3u/6Gz1QWerJzqj
E887OsP5ffn3cPTkbz7zb7pdJ84bpDrDu4s+6AyfP2dEnny3pqrO8Kr9qj2z
O9cc1Rn+1J28sac2J6nO8NJ9XXt0ttdHZ3hPiQedbfzoDEd/dLb6oLPVE53R
g/EKneE8X+gMp39yXTh68jefT05vt+LN0rNUZ/j675p3yLlqkeoMb1H09eRs
VVeqzvARGzYsHfzjKtUZfkLaozM8KNdHZxsPOsPRH53h9H90tvqgs9UTnblv
3hfoDGd803FBOM+79m/h9B++D46e/M1nlZd2TOg5crXqDO/buFDOwKb1qjN8
7uvpjzxcPqQ6w/tIe3S210dn+AaJB53h8yR+dIbvlPEHna0+6Gz1RGfuj/EH
neG8j9AZzviJznCed+2XwumfxAFHT20nn4071Pl8xbWI6gw/mH1NrtwTt6rO
8CbSHp3h/eT66Ayn/6MzvJSMP+hs7xedrT7obPVEZ+6DfAmd4bzf0RnO+wid
4Yyf6AzneUdnOP2T+ODoyd981txYc+Xt7cmqM/yCtEdneJJcH53huTa6eNAZ
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
fHt1f74Bz2jyDXiD2f58A27zDepAJUz+DJ8wyJ8/w5ee8efP8Hsmf4bPMfkz
fG8vf/4MbzjCnz/D4+7682d4tZH+/Ble3OTP8FiTP2s9vJ4/f9Z1uXP+/Fnr
/yZ/hlcw+TN1teNmPgi380H4JyX880H42Of980H1y/TzzwfhKyb554PwODMf
hHe65J8Pwiub+SD8GzMf1HWevv75IHx/Ef98EH7tRf98EP5IVv98EH7ezAep
U27O4q8XwZNMXQhu6z9wW+eB23oO3NZt4LYOo+u3pg4Dz2HqLXBbV4Hb+gnc
1kngth4Cr2jqHvCl6fz1Dep18265eoipy3nU5Uz9zaP+ZupsHnU2U0/zqKeZ
uplH3czUx7w06mMe9TFT7/Kod5m6lkddy9SvPOpXpk7lUacy9SiPepSpO3nU
ndCTz53xhYr8GVdU9bx8NHbRus6ZI4+vzl+y16VKqufWGX0Gd07JHNmSb8m6
MUvrqp5SZ4488klMpGLcW6pnu4I1yqesyxLZ/GytDvXfa6l6viJ12mXbe/S6
0TFe9Xx43tMXayXGRNKd6Vp71fBWtt9G3jf9tqDE//X4yT2G3+2hel6R+BOW
zrrZqGAn1XObxL81V5ucy/e3VD0nSvwD/ogvdqNRA9WT+Kt+UXbv8hwB1ZP4
t95rcXH1J8+rnuOy9rpbKzF9pEG5JWvG546Otzr/yPFBYOiqRqpn2c+rrFjX
OUMk/xf/nXpgaRvVM6b+VyM6p2SIbD7Y4PC53N2i/TP2yTaFa2eM5PxsaPLa
8b1VzyU/JsSlrMsYKfdSpreHt+yveg6YeDxnYuFMkcWDSyck1ehvx9tIJ1N/
Gy/x70s8NHXf8lHRupDEH+y46pkWyZ+qnuUk/rheeYqE/nnvo+dDEv+Q18bc
+WBMB9XzqMT/13+qhf5e0FT1JH7W1xgHBkr85YZvKvVqtxdU54duD6xXuPa9
8LorXdemm/6m6ry0/+sZEwv/o2uDi/2yHXlfdeZz1rg2vyVk7aM6Xx98rlPn
lL/DT18YMexgiSGq85QsawqlrLsfXjjl+V3Nu49WnfN/63UsXDtdZG/jhLfq
PTVOdf5j6MLqKevSRRYvub/i1o5xNn8IP2rqb49I/MfHlVmW6+4s1Xm5xJ/8
a8qe/OUnq84NJf4Dn66eeSPLGNX5psRf58rdLn2nf6w6T5X4WS9GZ+I/1f3R
g7PqN1OdL0v8j31ZOJRnUBXV+ffU5+hGON/FAS03rItXnd26083wtnwvjF3+
S4Lq7NZV/um/7aZlLt1kmOrM5/YB3T5Yf2G86vzRhZr9O6fcDlfefe3mlG9n
qM6FOj9TMmXdnXDlkn3fKPvTHNX528unz9ZKvBtOnPqfSj06zjXjw/XwEFN/
uyLxnyy8sK/3/XLVeYLEn1i2caPquxaozq9I/EM2XSsfrjhTdT4m8eN/QOeP
Jf4dtVvkfaf4J6rzsxL/lKFNpn90oqPqvF3i9yaVG1L1x2ie9lXq734pXLnY
98VXRzpHx+HU3/f38M6UmENtmg1WnfOm/o6Xwz273Kw55rdE1TmS+lxfCXc/
uaBar+6zo/Vk+czdo+2kU+8vUp3dc3o1fHtLtpRurVeozu55vBb+6bdT7cZv
WaU6d5C61gwzv1sp8WcfvGZkTCSoOt+U+Be+uGj2jODXqnN+iR8/Dzpvlfjf
yd+n7SsTZ6jObSX+M9L/0Zn4l+bpUOrukr6q81KJ/0rCzoOxY6Lzjoup8fwU
npQ/Jun11dF6xebU7z0VTvfkH9NqDBmuOmdJvf7pcLH5H1e+ljTV5Glnw5u+
KPHIscgC1dm9R86Fnzxxu/a/312lOvPZaPKGcisKfaM6u35yIdy35MiNx4tv
VJ07SV3rR1OvuCPxny0ZW2HxlIjqvE3ix5+Gzlkl/hqL+359eOAq1bm+xN9v
zr8D3X+epzpPlvjbPPHZogKHJqrOxyX+Ap3c+I/OhSX+yCPn26+cEZ1Hl0yN
f0l4co0SC1I2RutvjVL5xvDz+U8fSd94lFkPTQ7Pq7x6d41HovW3D1Lb7won
3WrxTfuWi1Xn5NT7/SF8uecTS8duXqM6N0y9zv7wx49ce3fAlJDqzOe4p0d+
nbPLFlN/C4aqm/rbFIn/vOiPzp9I/O1LnCtWYO6maJ1T4s9QNn3jYrvWqM4J
Ev9D84+88VnSV6rzTok/cd+or/MOm646N5L46099OL5Z12hd6LTEX3SSy3PQ
+aTEu17yH3Ru4K4T8OQ66OzGhx8CP8v3onO8izMQP8/Fic7V3H0Fvizj7gud
6zsdAvGiA/q+4nQLHPb5hIOhllLXumD6M59r5HdB5xoS/yT5HdE5KPHX7+V+
d3RuIvHXuO36CTq/JvGXqer6FTrXkPhb5HX9EJ3zS/zzpd+i83OunwdWSj9H
Z9EjsEnyInQe756jQDN5jvzr+GcD3eW5Q+dM7jkNVJHnFJ03uedafcLofMmN
A4HzMg6gc2upa80343NeiX+UjDPozGeCjEvo/IXEX1DGMXSuJfFfknEPnTNI
/N/JOInOIYn/KRlX0flXib9qXjcOo7O8dwK/yLiNzi4fvhqYI+M8OreWeA/L
e8G/fn0l8Ja8R9BZ3pvqI0Vnec8Glsh7Cp0Xu/da4F/yXkPn16Wuld/U3xZJ
/O9edO9N9M0k8efY6t6zug4ln/+V9zI6b5b4h8h7HJ1zS/yfdnbvfXT+Q+K/
c9zlCei8SOJvInkFOie7PCTwiuQh6FzQ5S2BsZK3oPMAl+cEkiXPQefDEi95
ETqXdXlUYKTkUeg8zuVdgRmSd6Gz5JmB7P/n8jR0lnXhQE1Tf9si8e+WPBCd
80v89152eSP69pP4O0ieic58xn/k8lJ0LiPx72zr8lh0Jv5Dkvei8yWJ/0nJ
k9FZ5gXezJkur0bnfC4P945LHo7Ok1zerr5ZdL7q8vxAfcnztS4k8Z6S/q/z
QTePCOyTeQQ6x7h5R2CPzDvQWXwOXm9Tf7sk8T+x1M1r0DmvxH+3iZsHofME
iX/6ZDdvQt/LEn/wFzfPQmc+801w8zJ0XizxJ9Rz8zh0ziLxH5d5HzrLPNe7
KPNEdF7s5pXq20Tnw24e6qXf5eah6OzyvQze5zJvRecybp7rvSHzXHTWeZXk
RZpnuHm0d07m0ej8BnU/U8foJ/Hf/tjN09H5K4m/nczr0fmQxB8/zNUB0Dmz
xH9I6gbanyX+Y6NdnYG4+ZyezdUl0HmsxP+e1DHQOcbVZ7xFbWv2LlcyVnXG
T9futquHqO/F1U+8fuNd/QSdxbfoDZV6CzpHXH3G2yv1GXT+w9VzvM+lnoPO
xPt/kheh8yGpd4009bcsEv/zUl9C5zISf+9vXT0KnVtL/D9J/Qqdx0n8LT52
9S50Jv6e+V19DH1/l/iLSz3N6BlBT+4nq/CFhueRf1e8vavXcR2pg3kPC6c9
n2/H+7lc3xvZxn996oT4zUzdNULdFf8Z/x+fpPoXhdMeHxUcf5ruvxWOnwqf
Cpz1OHwVcNZD8QHA8Vewbg3HD8A6K5z1a9YF7fVZx7Lx6P4N4axnsU4AZ/2F
ujac9QL05HnCR4qecOrb6AlnHUd9aayniQ8NPeH4ptATjs8HPeH4UtATjo8C
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
I32eQw==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
614QrRP13aXc27rE/UNp+28T9wyl+T9P3E9QPfhF4j6DasBvEvcqVeN8ncZ2
5ak1cM2Ma8YiwT2Nt5X3EvcWpA8LBfdAVuCLBfc6VuJLBPdD3tE8Je4zSIuu
TtyvkL79IHEfQ9r11zQ+K6f8lrj3uIjxHxP3S1WP/5C4F6p6fEPinqp0ab7g
Xs1b+F2J+7SvwTsS92MXw+8n7g9IY++G28JLtNcS91Wkw3cm7sG+qjVJ3DOR
Tj45uP/zJj4vdh28HF8quAf1brA2X6C5Yt5ej+5xSKv3Du6z1YP7BPcc6sNX
BfdG1CN5J7HOkfbuFfzO1pW2D65fGui9i+4ZqRboz/iLjJ8HDwiug86HBwff
Q2N4SHBPowk8KLj2aQi/l+oQ6asjcA/4Df5eLbiH9iG+SnCPazW+bHDfbxW+
TBrnlZvOgEfBH+OzwbWecmil4B7dB/jywX3C9/D/Ju6TL4NPC+77vY8/nLiX
/jq8P3EuVo4+kLinvZTxcjnrS71TZwX39z7Fn5qz5laseDO6H/Q74yuie4g7
9T5F9x936V2P7vHt1n6IrtmknVZF137SeM9E9w2/VayK1pTSjXdGnwForp6O
7gN+rfcouiaR/rk+uL+3Q3s7ul6VXv0suoaRjro6jfla977BfdHtmr/gnuc2
xYzonpfGl0f31HTNftjSjJ/xo+haSxpmdXS9Kr16V/T5hPbqp9G1mbTcx9G1
lvL+J9H1m7Rcz+A+5Fb83dHnGdrb90X3IvS+Pxnd8/0SnhXdC14Dz4jue34B
Px7d91RN90R03/Nz7eXovu1a+LHonqnW7oHo/pj2xnvRGle699Ho3qvqvtnR
PeKv4EnRPTHFkznRPd9vtBeiz1T0vt8efa6gPTM++jxG++re6J6JYtTn0XpU
mnBU9JmK4syt0Wc20gwjo/uw0hLjos9pFCsmRJ/TaA+PiT6bUWy5P7rno7g3
Nvq8RzFkeHA/Wfvw2eje9Dr4lVS7/Ag3D+6ff49vEdwz34C/PI0PytF1g3Oc
5qFjcF90E75esP7R3NYJzpVao3OC61yty4XBuV7589zgHCqdVjs4P2odOwX3
VzfjOwf3VH/Fd8FegLcE15iqw07PWTeqXpyfuL5QjaK6SXXdloxrUvVwNK6/
tw3u/W7EXxbc+/0Ff7H2BPwTvn5wjtY71TK4H675aRPcH/4Zf1Hw+cIP+PO0
rhnvgZrBekD7rUlwj3e9nilaE3ynZ4rWDRqfF9331zWXRfea9d69GK0btBYv
R2sLrcVLqRbR744PrqekW+ZHnyvoueZG6ww9i86wNDdlmKsJwb0sxZyp0f1h
xdIF0ecQmoebFC8yjlGLos9UtL6Ngs8stGcaB59Z6FkaBp9ZKEYtjj530dq9
Gn3uorV7LfpcQWs3LFhrSWcuje7F630fHazTpFuWRPfif2OsR3APX/xhdL9A
dcQ90X1I5dkqOdf50tL5cj6TU64pn3MNLD0zLbrvrTxSKue+ibRfhZxrYGmn
U3I+t1POmhzdD1c+/TK6v6M68avo/pHq1oei++3KL/lzPtuTZi6Q81md9PCD
0f155ZfCOZ8dSoMVyvlMUZoqT85nbNJOJ+V8bqccWjznHo00WMGczwWl2Y5H
9xalyU9E9xOlIUvm3N+RhiyRc09Huu7knM/nlHNjzueUytdJzj1Z6YFczmeH
yu9Vc+6VqI44Ft3flN4unXMfSto45HwGKf1QMed+hGqWajn3oVTLrInuhanu
Lpqz/pZ2LZLzWaM07cPRZw3K9ZVy7l+o3snmfBYi7VE55/6Fap//AesZ3io=

         "]], Polygon3DBox[CompressedData["
1:eJwtmnfgT1Ufx++55xgJRUSokOyM9i6UCBkNDQ3ak/IUZW8NLaOMyiykQRSp
JKs0nmiiUqmM1tOQpzzxvF+97x/HOe9z7vf7u997P+f9eX/eR60ePbvckmdZ
do3+Sern6Z+xIcsma3x2zLLZwvcJjxVuKXyE8IMa36253Rq3U1sl/KpwtRJZ
dlr0+oX6vp1ae0ZtnNamaK6d1garvaHxJK2/prWn1O7V+sOaa6G149Tu1riT
1n/VWn210cKDdc0fGv9X822Fa6kfIlxPbbDwncF/r2k0bqP1X4TvFF4q/LDw
q8KnCj8g3FX4d+EThO8R7iz8m3Bf4beEHxSuqN8zQvgT4ceFawjvUH+S8AHq
B+j6jeobCUf1twsP0vXvCz8qXFXXb1LfWDipv0PrF+V+djwjntVAtX9r/Ijm
q+j6T9TXF87U36bre2r9dcHRwuW0/qn6BsJBfW+tf6X+SOF91PcRvlzXPy/c
Vzjq+pmaG6G/N0ZzJ2vtes1PFJ4q3FF4jvDXGu9Qe17jDWoN+fPq/6XPPqt+
m/B2tec0nqG54fr8fcIn6fN/au5sjWurH6q1AZp7T3iC8IH6+9M1N0zX36u5
E7V2h9oaje/X+v5a7yW8QPge4aW6to/wm8IPCFfQ+q3CLwjfK/yK1p9Uu0ff
95DmTtfaXWpvazxW6wfo+gv5TcK9hPfo2t7R8XmfcHmtr9dn16lNE56uNlzr
H2v9MY2ra32Y8EfCU3LH8zR9x9DgGCFW+qu9q/F4rVfW+mLem/CXumaZrr1d
66uFx2h+P633E35HeJxwJeGLhOcK3yq8V9dPVrtLnx2iuWZaa5Ac/0M0t0vj
49gjwk8Il9Dnj+UZEI/CSfh44dnCU4VLCh8sfKVwN+HvNa6h1kP4EuEdGvdT
a6FxG81t0z3MFb5feLzwGdEx10z4uMyxeGLy/U7XXGl9/zHJsUMMEV9HCT9O
/AoH4ebCk9hvwb/vhOT3MU24lNabCD/C+xX+H39LbaLwQ8Hv62i1J9g/wrmu
byr8KPtR+O/kmDxS4xMyx+ofuudDNa6iuRVa2yVcU7iq8ErhndHvp4zwG8J/
CzcTri+8Vvgv4XrCNYXXCB+kvzlP3/ud5n7WWlWN22itk/B/NB6oa9oKdxb+
peCAVsF7AG6or3ah8BXs4WiO6ix8YWbu+lNzdTU+VHOrk/dwc42Pz7y34Yij
gzlmU8EpRwmfmJlregk3Ej5K+APh/sItgzlxu/BdwqcLnyW8VXi3/l4Tjetq
7s3kPdpF44sy793SascLn04Ma3wKe17jpzS3r55Fa+FXhBcFx+/50fFI0uD9
nRP9vq4V/ku4a3Q89sz9vjpExwf55c/kZ9ZS+KDiWc5RG6PvHqe5Vrq2dfT7
vjw339dUuwasa37S+FC1q4UvE/5R40PUrhK+VPgHjRsm71X27H81vkzf95xw
n9zxdDj7Tfi2YL6HA4nn63Lns9pqNwj30Pp/NH46OZaJ6ba6tg45hf0bnJ9q
qV0rfIXwzxo3Ts4vo4OfR5vo+L4i937elXvv1VQ/OJmzT9C1LTJzeV/hE4Of
0dfCZwgv0Xh+cD46OzkfLAnOL22EXxN+KZhvzxJ+VfjFYH5qK7xMeHFwfmkl
vBiuD+bX0bq/jZm58FDyd3L+mBOcb1oIvyj8bDCftRR+iVwQzN8j9flP4Sd9
/mDh07W+SPiZYL4dpfUN8JPWDynhZ8iz7J77/Zya/H5m6/qyWj8ZzSD8pHAZ
4U7R2uAGXf9c8jMh9ssUz6pLdOzcJDyfZ6n+en32OnKUcB2tX0eu0PxYnqX6
fXi2Wr8M7cH707in5iqjBYg34VuEDxB+WdeX0XiL5i5P5vvSvCvhS4VLR++l
5pofIfyOWhOtHau5bzX3olpJjb/Q3CVwO/Gr8c2aq6DPLtK6fmb2ueYu1tpS
4X2Fv4FD4Ga1GzW+TXPVozlppcavBHPV8OTYIwZLaW0M8St8K3tM+BV9X1nu
RXPdtTaa/aLxTZrbT+sLC933GZyQ/B1wVbPc311f+EbhlsLjkzkELmnKPRf8
0SBYgxC/cCrc2rzgEzgILtpP/Xta+4aYFi6r/m3ht9TqBXPyZnhXrbXG5dW/
m/wMzxQul/vZPq42QNcP19xR0ZqUcbfcWpV7OlW4RO57nao2SNeP1NwxaC3h
Y4Kv+SG3hhiq8cW5tQUadBj5Mrc25Z5OEy6Z+17JEeSK+kV+bBj9LFtpPCH5
N8OlpYpnwTXk0r1Ffnkh/yctZJvICcnPpFnB/zyrccK9hPsIHx6d08ht5LT3
cuc0clst4ffZQ8SBWm3hdcJr1KqSq9gDyd/BHiD2+e6V6BZ+u9avEd5GHhau
qLYcbai5OzQ3UPgI9p5wT+E7hA9D2wvfLPwvcpjwI+Rk4f7CjYQfE+4f/AyP
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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwt13XYFWUaB+DvO+cYKJ1rgCC1pEoqKVJKKulSrqRBiOQqodIIGJQJuIDg
qugupaRKiALiSoiIsEuJAay5IuX9XMMfv+t9n3ueOef75sy8M1Oi+4A2/VNZ
WVnb5BK5NJOVdQ1onp2V1UxGq69KZ2X9Sa41r2XbVGMhdUG5xrwme9KYT51X
rjKvziYZ80hZ844+6x6ff8G8gJ78crVtNdSTjRkpbN5EXyt9J8336elqHMXG
s0bqL6QLG8nGsYbqdPw9rDFryb43P8gfiL+LTWd3qS/RV4Q1Za3ZKfMqbLBx
JpuVnRyEHKwYa6Vuj34xz2P/3HEcbKumnmh8Qr3L9hfVb0gHdplca97Cvm1t
+8n8z+we41NsNmtqv9/lgvoGqcH22F40jrEU018n+uO3iOMkRc1rs2nGknK7
+XD7DpMX1Mv1FGcN1Hf4vN/MV7ASxtvit2Snzd9lNxnbsE4sh3qD1GUnfE7x
2EcuNy/KWuprp+9n83Lsr8an2XOsib4r5QopYltV2yYYC0pl8276esUhtb0Q
u4Hdw3rHeRb7setYa9aB/Wpent1rfIY9z27X95ucU1eSijJQz2l23ryyVNe3
2z4r2fXGhqw5+918WZyPxlqsIfvRPBfLKYV9ThX1+DiHZZT5En0r9PW0vTKL
i2MOe5V1iGPHBrJX2GvsbpaLlWbtWVd2zrwsuzvOE/YUq6dvi9zGerC+rHyc
U/rKxLnDurHz5lXZUOOr7E3WRV8NNpK9yZazXmyHtGD92BBWVf2RNGQ9WT9W
Qf2xNGK9WH9WUb1R6rGTPvd685JS3Xw4W6zvLX3dWDU2jC1iS1hXtk2asD7s
IVZZ/W9pxQbEOcmqqz+T1uwhNpzVUJfyeXeyx9hEdjPbKo1ZbzaAVVJvkvrs
lP5S5qVls9zK7tV3v74y6k+lJevPhrJq6or26cNmszmsJbuRPcTmscWsI9sp
bdggNoLVSifrwRC2kC2IY63ew9uzobEe6qur/lK6sdFsAmusrqT3PvYcm8ta
sVRcD6wRa8FOmO/ibY2D2UhWW/25dGKPsjGsgXqvdGYj2Fh2m/pHOai+RC6V
9XFdyQB9c9WL9LXXs1vasSFsFKsTx1jfs2wpWyYFrHU54/iyduou+s6Yf6K3
ubEvG8yqqL+SHmwsm8qaq/dLdzaGTWHNYj2I9Ym1ZZ3ZWfMDvKdxHJvGWqi3
SzP2IBvEblKXsW/HWENivZeFcV3JXexx9SR9NfVVYL1TyXod6/YS9ZlY31l1
dV19B8ynx9+tzo5jxVaw99LJPezbTLKuxvo6Sw7puVKu0LfK9vPxv6SS9SbW
na3680q5VHJfjPvjV+rj+p5g89Vv2PcBdT5egXVm3VmKzZbD6lzxPWy17UfY
IOMM9jLrrP5ZTqgvk8vlfZ91mD0c/4/6JX2d1C/IsfgNJTdbl0rWybPqolJM
Ntm3gFSyrau6p77Mxe84ebEnevvoOcoe0feier6+e9Vfywj2cvwWrEd8pzzK
Xorrg3WPc9n+r7I9cUzYk3G9sMVsLzvIprJf5JT6OinDNtv+VtwHjBVYNXY4
1mCWI+4FrCo7FOseyxhLx+/B9ps/z46q88VxZWvZP1i28XpWnn0R92aWNpaK
+wf70vz1uDaNJVkFti+uC1bAWI3VYd+lknOtVyo5H+O8PK1uKE+x9eoP9Q21
37fyZHxXXFvs4bin6hsf92G2lvVld7DZ7EP2CRsZ6xybyN6J65n1Z/+PqMvG
MwL7xPZ6+ibEfY6tY/30fCOT4/9hS9lA9TOxPqnPxe8ty+KezfaxM2rTrKVx
Htv4nHEL38FG2fBdnFtsNdvAHlfX1jc2lawZsXasiucTGceWq9foe1Dfr5H4
beO+zHbY3kTfDOPGuIbYIxfXoelsA/sgjo26kTwd16d6i75hca9k09g6tpkN
YbezWWwz285GsKZsJtuUnTzHPsoasKlsbVwHbFA6eba9mtWO31d2xv/Pj5jn
kZz61sT1yA6o03EdspXsVr1TjGvYRjZYz0z5rzpHhL0b1w8rZl6Yva4+Efcn
+86JdZXtsW1s3LfZy2w7283GsEXyu/oaKcV2xr2YnVFfK6XZLrYgrmF1wbh+
49k91h/2kzp/9LKt8fzATquvlpLsM/b3uIeo88b3sI/j+o7zV50Vn2nYwM7G
8TLWYPXYV3HNx/mmPq8uIB+wVenkGepwJnkOjOfBV+SHWJfiu/V9lErW9g6p
5Hk1nlt/Vq9LJ8//X2eSd4l4p1gY60R2cvziOG63/f108uz7XSZ5Po7n5Ovi
OMeYSZ5dn84k5+mYVHLfjvt3Dve39enk/eR4vF+YF0knz7fxnFs8kzwDPZNJ
nn/iOahEJnnueNb4QTp5Dv8+c/G74t5h/jj7p89/1993H3tHbmR3sb+wy9W3
6HuMvc3eYX3i94k1VV0k1kD2nu036xsd6yBbyXrrWZ1OnqWPZJJ3jnj3WJNO
3juOZpJ3rHjXWptO3rOOZZL3qXivuiC5WF2f18jnHUkl7wtNjfex++UHdWuZ
xz5V79U33n5vS152E7uFHY//M77LWIXVYt+Y/4vlN1Zltdm3F++XOVPJdRXX
1998fnN5iW3LTt6T4n3ptVh8WAlWznRvPHvoW2T8nB1gU/TcyeaznWwfm8ha
sblsB/ucjYvfjDVgA+M7Wbl08oz0n4v3z7iPdolnCFmgb5f6S32T4tqVvmwq
m8naxn7yIJvCZrA26nNyGavJ6rOD5odYP+M0Nou1i/uO78jD6rMm7FgqeWYo
b+wU54aMibUg1lnzlBTSt9H2eex/sQbJVWwLa6N3oXE3288mp5MFPXfcC1hj
5VHz/KyisQvrEeu7vrnyvToT1xLbFOc026++kJW86y9nfwDuY9p2
         
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
       "]]}, {
      Line3DBox[{690, 1004, 473, 689, 1111, 912, 691, 1112, 913, 692, 1113, 
       914, 693, 1114, 915, 694, 1115, 916, 695, 1116, 1010, 1215, 696, 1117, 
       917, 697, 1118, 918, 698, 1119, 919, 699, 1120, 920, 700, 1121, 921, 
       701, 1122, 922, 702, 1318, 1005, 923, 1006}], 
      Line3DBox[{704, 1011, 1216, 703, 488, 705, 1123, 924, 706, 1124, 925, 
       707, 1125, 926, 708, 1126, 927, 709, 1127, 1012, 1217, 710, 1013, 1218,
        711, 1128, 928, 712, 1129, 929, 713, 1130, 930, 714, 1131, 931, 715, 
       1132, 932, 716, 1133, 933, 717}], 
      Line3DBox[{719, 1014, 1219, 718, 1015, 1220, 720, 504, 721, 1134, 934, 
       722, 1135, 935, 723, 1136, 936, 724, 1137, 1016, 1221, 725, 1017, 1222,
        726, 1018, 1223, 727, 1138, 937, 728, 1139, 938, 729, 1140, 939, 730, 
       1141, 940, 731, 1142, 941, 732}], 
      Line3DBox[{734, 1019, 1224, 733, 1020, 1225, 735, 1021, 1226, 736, 520, 
       737, 1143, 942, 738, 1144, 943, 739, 1145, 1022, 1227, 740, 1023, 1228,
        741, 1024, 1229, 742, 1025, 1230, 743, 1146, 944, 744, 1147, 945, 745,
        1148, 946, 746, 1149, 947, 747}], 
      Line3DBox[{749, 1026, 1231, 748, 1027, 1232, 750, 1028, 1233, 751, 1029,
        1234, 752, 536, 753, 1150, 948, 754, 1151, 1030, 1235, 755, 1031, 
       1236, 756, 1032, 1237, 757, 1033, 1238, 758, 1034, 1239, 759, 1152, 
       949, 760, 1153, 950, 761, 1154, 951, 762}], 
      Line3DBox[{764, 1035, 1240, 763, 1036, 1241, 765, 1037, 1242, 766, 1038,
        1243, 767, 1039, 1244, 768, 552, 769, 1155, 1040, 1245, 770, 1041, 
       1246, 771, 1042, 1247, 772, 1043, 1248, 773, 1044, 1249, 774, 1045, 
       1250, 775, 1156, 952, 776, 1157, 953, 777}], 
      Line3DBox[{781, 1158, 954, 779, 1159, 955, 783, 1160, 956, 785, 1161, 
       957, 787, 1162, 958, 789, 1163, 959, 791, 1164, 569, 793, 1165, 960, 
       795, 1166, 961, 797, 1167, 962, 799, 1168, 963, 801, 1169, 964, 803, 
       1170, 965, 805, 1172, 967, 807}], 
      Line3DBox[{806, 966, 1171, 804, 1263, 1057, 802, 1262, 1056, 800, 1261, 
       1055, 798, 1260, 1054, 796, 1259, 1053, 794, 1258, 1052, 792, 1257, 
       568, 790, 1256, 1051, 788, 1255, 1050, 786, 1254, 1049, 784, 1253, 
       1048, 782, 1252, 1047, 778, 1251, 1046, 780}], 
      Line3DBox[{809, 1058, 1264, 808, 1173, 968, 810, 1174, 969, 811, 1175, 
       970, 812, 1176, 971, 813, 1177, 972, 814, 1178, 1059, 1265, 815, 585, 
       816, 1179, 973, 817, 1180, 974, 818, 1181, 975, 819, 1182, 976, 820, 
       1183, 977, 821, 1184, 978, 822}], 
      Line3DBox[{824, 1060, 1266, 823, 1061, 1267, 825, 1185, 979, 826, 1186, 
       980, 827, 1187, 981, 828, 1188, 982, 829, 1189, 1062, 1268, 830, 1063, 
       1269, 831, 601, 832, 1190, 983, 833, 1191, 984, 834, 1192, 985, 835, 
       1193, 986, 836, 1194, 987, 837}], 
      Line3DBox[{839, 1064, 1270, 838, 1065, 1271, 840, 1066, 1272, 841, 1195,
        988, 842, 1196, 989, 843, 1197, 990, 844, 1198, 1067, 1273, 845, 1068,
        1274, 846, 1069, 1275, 847, 617, 848, 1199, 991, 849, 1200, 992, 850, 
       1201, 993, 851, 1202, 994, 852}], 
      Line3DBox[{854, 1070, 1276, 853, 1071, 1277, 855, 1072, 1278, 856, 1073,
        1279, 857, 1203, 995, 858, 1204, 996, 859, 1205, 1074, 1280, 860, 
       1075, 1281, 861, 1076, 1282, 862, 1077, 1283, 863, 633, 864, 1206, 997,
        865, 1207, 998, 866, 1208, 999, 867}], 
      Line3DBox[{869, 1078, 1284, 868, 1079, 1285, 870, 1080, 1286, 871, 1081,
        1287, 872, 1082, 1288, 873, 1209, 1000, 874, 1210, 1083, 1289, 875, 
       1084, 1290, 876, 1085, 1291, 877, 1086, 1292, 878, 1087, 1293, 879, 
       649, 880, 1211, 1001, 881, 1212, 1002, 882}], 
      Line3DBox[{884, 1088, 1294, 883, 1089, 1295, 885, 1090, 1296, 886, 1091,
        1297, 887, 1092, 1298, 888, 657, 889, 1213, 1093, 1299, 890, 1094, 
       1300, 891, 1095, 1301, 892, 1096, 1302, 893, 1097, 1303, 894, 1098, 
       1304, 895, 665, 896, 1214, 1003, 897}], 
      Line3DBox[{911, 1009, 685, 910, 1317, 1109, 909, 1316, 1108, 908, 1315, 
       1107, 907, 1314, 1106, 906, 1313, 1105, 905, 1312, 1104, 904, 1311, 
       673, 903, 1310, 1103, 902, 1309, 1102, 901, 1308, 1101, 900, 1307, 
       1100, 899, 1306, 1099, 898, 1110, 1305, 1007, 1008}]}, {
      Line3DBox[{251, 474, 1111, 252, 488, 280, 1220, 503, 295, 1225, 518, 
       310, 1232, 533, 325, 1241, 548, 340, 1252, 563, 1159, 355, 578, 1173, 
       370, 1267, 593, 385, 1271, 608, 400, 1277, 623, 415, 1285, 638, 430, 
       1295, 653, 445, 1306, 668, 460}], 
      Line3DBox[{253, 475, 1112, 254, 489, 1123, 281, 504, 296, 1226, 519, 
       311, 1233, 534, 326, 1242, 549, 341, 1253, 564, 1160, 356, 579, 1174, 
       371, 594, 1185, 386, 1272, 609, 401, 1278, 624, 416, 1286, 639, 431, 
       1296, 654, 446, 1307, 669, 461}], 
      Line3DBox[{255, 476, 1113, 256, 490, 1124, 282, 505, 1134, 297, 520, 
       312, 1234, 535, 327, 1243, 550, 342, 1254, 565, 1161, 357, 580, 1175, 
       372, 595, 1186, 387, 610, 1195, 402, 1279, 625, 417, 1287, 640, 432, 
       1297, 655, 447, 1308, 670, 462}], 
      Line3DBox[{257, 477, 1114, 258, 491, 1125, 283, 506, 1135, 298, 521, 
       1143, 313, 536, 328, 1244, 551, 343, 1255, 566, 1162, 358, 581, 1176, 
       373, 596, 1187, 388, 611, 1196, 403, 626, 1203, 418, 1288, 641, 433, 
       1298, 656, 448, 1309, 671, 463}], 
      Line3DBox[{259, 478, 1115, 260, 492, 1126, 284, 507, 1136, 299, 522, 
       1144, 314, 537, 1150, 329, 552, 344, 1256, 567, 1163, 359, 582, 1177, 
       374, 597, 1188, 389, 612, 1197, 404, 627, 1204, 419, 642, 1209, 434, 
       657, 449, 1310, 672, 464}], 
      Line3DBox[{261, 479, 1116, 263, 493, 1127, 285, 508, 1137, 300, 523, 
       1145, 315, 538, 1151, 330, 553, 1155, 345, 568, 1164, 360, 583, 1178, 
       375, 598, 1189, 390, 613, 1198, 405, 628, 1205, 420, 643, 1210, 435, 
       658, 1213, 450, 673, 465}], 
      Line3DBox[{265, 481, 1117, 266, 1218, 495, 287, 1222, 510, 302, 1228, 
       525, 317, 1236, 540, 332, 1246, 555, 347, 1258, 570, 1165, 362, 585, 
       377, 1269, 600, 392, 1274, 615, 407, 1281, 630, 422, 1290, 645, 437, 
       1300, 660, 452, 1312, 675, 467}], 
      Line3DBox[{267, 482, 1118, 268, 496, 1128, 288, 1223, 511, 303, 1229, 
       526, 318, 1237, 541, 333, 1247, 556, 348, 1259, 571, 1166, 363, 586, 
       1179, 378, 601, 393, 1275, 616, 408, 1282, 631, 423, 1291, 646, 438, 
       1301, 661, 453, 1313, 676, 468}], 
      Line3DBox[{269, 483, 1119, 270, 497, 1129, 289, 512, 1138, 304, 1230, 
       527, 319, 1238, 542, 334, 1248, 557, 349, 1260, 572, 1167, 364, 587, 
       1180, 379, 602, 1190, 394, 617, 409, 1283, 632, 424, 1292, 647, 439, 
       1302, 662, 454, 1314, 677, 469}], 
      Line3DBox[{271, 484, 1120, 272, 498, 1130, 290, 513, 1139, 305, 528, 
       1146, 320, 1239, 543, 335, 1249, 558, 350, 1261, 573, 1168, 365, 588, 
       1181, 380, 603, 1191, 395, 618, 1199, 410, 633, 425, 1293, 648, 440, 
       1303, 663, 455, 1315, 678, 470}], 
      Line3DBox[{273, 485, 1121, 274, 499, 1131, 291, 514, 1140, 306, 529, 
       1147, 321, 544, 1152, 336, 1250, 559, 351, 1262, 574, 1169, 366, 589, 
       1182, 381, 604, 1192, 396, 619, 1200, 411, 634, 1206, 426, 649, 441, 
       1304, 664, 456, 1316, 679, 471}], 
      Line3DBox[{275, 486, 1122, 276, 500, 1132, 292, 515, 1141, 307, 530, 
       1148, 322, 545, 1153, 337, 560, 1156, 352, 1263, 575, 1170, 367, 590, 
       1183, 382, 605, 1193, 397, 620, 1201, 412, 635, 1207, 427, 650, 1211, 
       442, 665, 457, 1317, 680, 472}], 
      Line3DBox[{277, 682, 1318, 683, 278, 501, 1133, 293, 516, 1142, 308, 
       531, 1149, 323, 546, 1154, 338, 561, 1157, 353, 576, 1171, 1172, 368, 
       591, 1184, 383, 606, 1194, 398, 621, 1202, 413, 636, 1208, 428, 651, 
       1212, 443, 666, 1214, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1305, 444, 652, 1294, 429, 637, 1284, 414, 
       622, 1276, 399, 607, 1270, 384, 592, 1266, 369, 577, 1264, 354, 1158, 
       562, 1251, 339, 547, 1240, 324, 532, 1231, 309, 517, 1224, 294, 502, 
       1219, 279, 487, 1216, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1311, 451, 659, 1299, 436, 644, 1289, 421, 629, 
       1280, 406, 614, 1273, 391, 599, 1268, 376, 584, 1265, 361, 569, 1257, 
       346, 554, 1245, 331, 539, 1235, 316, 524, 1227, 301, 509, 1221, 286, 
       494, 1217, 264, 480, 1215, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
WOxMMAirWbtBpgVGarUuF/2588Z3xQO+j4Hrv2f01Tcbg2VDLBaJdn5leHLF
10nLcOmBc+t+vrbGsb12BZWJcXjno71Pb7th5/U3wpJSHdHQ2HzfGTGvvYRf
Jp19kZ7tfo092lGMb1mpFztuC8Q5j9SeN9Xcicc8ax/+I+xrWcPJIVeHbMXz
89amhxiGokHFxAe+gh1uD0xc+OKTL6pEGdk8dojEF6s73TYR7JZZ+G+0lr0z
Rqrvfr1K/TA+H3LZ6sYfsrO1/lEZ/1ZY+cR1q4AfJq7a0T7lVgIm31m4eLxQ
39XwbHAqcMJOKEjd36k8MRrLst/Z1fxdAsW57UZZ5waD9zr1Jv4poVjWW7t9
W2E9zSPO572o6Q89DH5fOtMzCDuoLl+wVfi+Gg7T67aZsh4mbswa0rt4A5Ze
P/VTxLfd1jtfrm1iB62ih8a8KluG+TqJvz6IPPDfHK2v3WbBp/ax15q5zsAG
R+6NFP22SZc5XXS6u6JRnI1mw5FLcc2lt/PuC++/BzUY0zfPH618+uzqWM8D
9UzmW4t+eOL8J+PU/bsxvfmgvP4623HrgxaaiwR77vFfUTjILgzp+WjCe8cO
gn3We3r8XFszHK+17f7hVFw0Dg4/kVZXqI+K25mHBkbsRd1vU3u4tk7AmGkb
rS2+Cvn6y9zy0wJO227c8XPutOPYK6zCqk6pAqfpO8n4N8fnLjP+CHj49q0t
jgl66diri1H9xu9KILvgp8WruEMQCH8fVTQ+jgv6e9xRLS4Bi43GB12OR8JS
bfUz/vnRmNi2pOyxUBcfvfUxOXfvPhh8mz2xX1avWhOE7/7+iVHrPbWCwL9h
gZO9bQBqx8103iDYX3tJpfr+Cg8ouvjau+UlZ7y6u+n+KME+Tm9OT53ZbgV8
GaxzIcN7Aa78lHqyRPT/Br3TPwzZhA2007y6P1qGZ8JdTfaLOG1J4W29kl3Y
ZUPg4IOTPHHymikTBgjz74nt0sLpSiRW5g8oazdnB77pq9LJTrCnUdwP98nP
YnFV56dJRbEH8dLHQ45Fgl89Wtey2Qa1eKTnw2/tJtsK+139Ze+T1qYxWGhz
5+93qxScHzDCt1ZhCax7OimoSKg7Pp/fP7ZUPwPntx36yOE11XfWCv0q8W+v
36rtjRXqO93kEwuGN8vESQPGV6YJ7/3KLcdZeByD8n+3e7Y7mYJPwo+FRArf
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
8MwBA8bbgN1lxtsA8TajOc8DsZznAeJ5cjgvBB+tGS8ExAtt4DwSvOM8EhCP
1JDzTvCR805AvFOxhOeKZXq/YLXjG5d+mYYHM9Z1PdHCDFO8Wk0Rz8WQh0kV
JR5z0WZx/Z8GUxfjAr8Qrx/C+8jm5xd6DV+MuldudTeZtxbhxfNNr4X3F86P
Wj9bcxkmXhy/3GWPB9Yz0UgS7T82a96to25L8HK4to/tKF88GHV2+2YxXvU4
N8jZfi7i+vKf0Rpb8LSRj6Xpv//cz62U8VevUg3XHpu+FI7+TJ57P9UH/5U1
iQ0U3mvc3G096fdSGJG7It7GdAM2qOfse054P7hhP8dxmxfB1rBcvV3ma/Dl
lmm278T11922rFFNK3hvGNJuplDvh8eEJIh9E6O6FXtqPpoKNVsMnDP+jin+
CDgXKdohe7aFtq/gzyoxaQ/i/V0wLUXL4LLwfs2n0UZNJ7mjp+akkqwBvqix
qmDYAvH3bh1VOu72RvTVOLqq265g7PNPSzVJ8NvkvXp1PFZuwO2rqoZEPNqD
QyvbqZ0T/Pxt6I9fSVZr8Fhlw9f7P4fhFs/BN14I56KJlD8Gyfgrw352gUnu
G2Fm8cSk25FBOK3ReO9HYp+orLdbLz83qJw/8i502YQmzf+luQvr6TCv0fbV
8xzgZEibTK1yR2zwXuvIPeH93Rj7Wwa5NpAzOP+q8ES/DvEnvgnvm24uFPcP
t4bmi/bAZ5IdwtamZWgf2oYrrw6cNq1kJ27Z6v7xrPj/RzNlX6f5TXdgH89R
NytdwtFCe8tPFyGe93Gb4/Bl8nY8t2Lq74xhAh48/sf8iIBDFsdcb9zdYRPa
uD7JMzkSh7rH1G90/Cn2lXje8pfxWoFf703YUL4FJts6be97LBjHZDo01RH2
22DpD5NxU73BY16tT2OneuPydKP5s8T6Yvm9V8I+QW/ZLl9h3xgfyPe7evjn
LsL3BrQOXC58f1x5iH/3VNVS5z0LDuLegSodHi+JwfvOeT6VAm7MKQy9djD8
ALbSO/OkzdpEnNiq30G9khLYdS5M7cOZHfjsSBef+xUp6IbHUv0E/Jki5bNh
Mr6rk52HW79jwWA+7szW9eVbsFJ1Llu/zde8+aO7bIJ/xi1she+Gjb+Ws+/l
6r7ITPBXmFNZ4iL4L3abxv32jarBCOP8WHQcurzJKNcUrFiWan7ynahDG1V1
wOIAFhkka63wzcDbth/+PRHye0A19x9fHQ/qcDcyCJYN0pgn+BHeiOvP/Ofa
py+1FplugIeP7RYL5wm9Tzuyc4T9r+0314hGtwGz224fn45PW9aPKBPmr5Ld
7yP/1DjoFCecTzi4PNxOOK+oX9aQndN5ko6WyyL0/+vva3Fey1Dx96PsJP0i
54WMFX9fy0/S26lI/5Hurq6kDyMejHRiDpKeSUXSk5CuyVvStRCfRrqFYEnH
wN9Pytorvd8i9d2JH6P++wepT8zf+2dRv3iL1Nfk7z2yqL9pK/Xh+Hv7LOrH
JUt9I/5+VhbZYUI1vNlWqS9COhOyZ/v+k2Z2yQxDFZ9XMdNsHWFp304fC4R5
dEe8+3LcIw7t78d6zt3oC3h76Y9ewrl713LMuEsfBH860vazvfUu2Ow7YqWT
4M8Wlq13HfbKwPN972oPs4qAK8ZnJ618KeqO4rpPsUpHmwulCw78jobdOwu7
agvvtUZd8/LLiMehB/pfnJYRD5OOXcyd/kmIM9cuDd85Ph2SzQ36j9eIhu4m
modE/wm9cXa44K+QNG/Da0+LA3Ci7YM6+cL7Puo9zR9WpMD2dSt035zZAQP+
dkgUz9eIJVHrzY/EQekWM/+eDpsgdoJejhg3Ek/EeEZ8DoPFyx6PSrFaA9mf
e18X42e4jX18jMYW2JozKE/IMzC1oTvLL4a+7f5p2EXhhDbLfl3ODIar0c8q
apYLuPpg5+zU9GM4OLO8Vv0ZEXAo+18LH+G816i1am6obQrm9r9sU6fwCEy9
dTpJSzh3RaUGUeq7k7FU82Jo0a5kCNn2rGCnUK/t6dM+NP93NLbxejRX3yod
YiOW9BTts+PAoacjXVNg1c+Vew3zY6F5WN3Z4vk1mLlXt8/aRFAfsf1HbPgB
WFJ7XZAYZ/J3hMClYdGwRMPgSNXk7eCkZWMsxs9rd2aYxTzaA59mhLn5rNwA
8aXn6oh5xMiy1HfJKF/wqrk7IsFtCTywSGV5tsbDpm9WtYnGwEk9Pj35FwFq
336NKRZw5jynI/Vzb8RhSHa9JnduxMEViyZ2F4X6cUi/13HtC49gsxsfKnfb
psBmPb8j4n4H5Rz4t9gqAjtv6tHwkFcGPFBNHcP8of2p0e+XxMC/jEyIW3AQ
/qmbO4vxM6mjRaMWruFwQPX++WVNd8Dc4xdLxLwwP85hYa9dwbD8ze+1Rrc3
gmfxrDpifrSDdui6xwPCkh0tLTWXgadfM4YflmtMrvH0XwSeHR/Q175NNCwr
fztaXL959xP+LWdE4KD+Z+xOpB8D565GjcTvFWU623SD9S5sNmBU+dUPKbBt
V20b0Z9V5qzqZlGyE764dek18NA2+BVa/EHMX9mf7QedG+ALZjW0v7aY5A7T
l2ayPK4xcN4+Ad+A5qK/twS8A718njGcM2zfh4HXMoNxl8PT5W3somBquOYf
0X/mNO6xb9FGX3z4/m9Khkcc1K1KKRXPV/GnwWlH/V2gVK3VHQFHwPPtrRh+
uGj4VWv81MUw/rRBr1KPudBsEcdXs483sze1dcQ6HfOWdssMg9Yb4ovE8/tk
++qeAj6D4Y0ObxLwGizy5Djt+eV6yXXP6evPk91TuMLHYwQfjzQ+4Tie0lGZ
qP/vrrIOf3QS+71Q2J79XqTfu4WvE7vwdSKtc0gJ2xcOqsf2hbSv8sGPPUOF
OC7Xn29oxOwDj7l9kOyTwe0JDdYweyLZsze3P+pw+yPZf/wX9r0wgH8vpO+V
asm+L9Z3Z98X6fsGHL48NFBl0ik/mU7bdAbzE5jC/QTJT8y1mV+BQz/mV0h+
pdGa+SG8nMD8EMkPjbnfYgD3WyS/7XOE+TmmvmR+juTn9Tuxc4GP1Ni5QCvp
XDzn5wgvZ7JzhH+lc+RZO9mzlopNlrpM/4yX2HmEhfw8Yq50HrP5+YWf19n5
RTq/TZzZeYc3Z9l5Rzrvr3JZfIBXhiw+oLoUH3TnsHiCVTyeIMUTx9ss/uC7
aSz+IMWfPB6vcKMmi1dI8SqRxzf01GPxDW2l+NYjnMVDNPrF4iE2leLhtPqX
OkSrrMuS65Bb9mVxFcbzuIoxUlyt5HEYnvM4jBSH2/G4DUY8biPF7fORLM7D
oAwW55Hi/B0flhfgihbLC3hNygvxtiyPYOQVlkeQ8ojmKZZ3MJXnHaS8M5vn
KazkeQopT+WosbyGL91YXsOBUl7T4HkQG/A8iCelPKh2neVNvGzB8iZ2k/Jm
K9XodsY1lup7yXS5j0ey/AuuPP8i5d91PF/Du/MsX2OIlK9b8/wOQ/uw/I5X
pfwez/EAGHI8gIQHdDh+gGm5DD8g4Qe9AQxvgKYvwxtIeKO8Gj4tpo7Gsucq
0/SDZXrR6REMN2I9jhuBcKOOVP80kfFpt0ZmNz6hsi1Lroc82o/hVRjH8So8
k/BqDse3eJnjWyB8+4zjYcwYyPAwEB72r+ae+PH9jWfW9vTL+iDTB67NYTgc
lo9nOBxuSji8Nsft8GwIw+1QJeF2F47z0YzjfCCcf5DXBZjJ6wKguuD1ClZH
oCWvI4DqiCFSvXFcxqd1M3KtnSTgzi0yfd2486x+AYM4Vr+Aq1S/GBWwegeS
RrB6ByZJ9U5RHVYfgRWvjyBXqo868noKu/F6Cqie2sXrL2zK6y+g+qtyCavX
MIjXa0D1mg+v79CP13dA9R3VLQEyPs1kqatHlueqrCUyPZsFrythHK8rgerK
Vq6sDoUcXocC1aFfjVndCrc3sroVqG71XMPqXMjidS5QnTuL18VozetioLp4
aiyro3ECr6OB6uhJvO7GQbzuBqq7b/I6HbN5nQ5Up1fxuh5n8boeqK736zAj
VE/FMitZpivbw3kDGF3BeAMg3iAzlPEMULCa8QxAPENREOMl4IQm4yWAeImR
nMeAcg3GYwDxGBssGO8BJw4x3gOI93gk8UgPZTxSBudP8HRzxp8A8SfD6zG+
BYdMZnwLEN+iy/kZDOT8DBA/o835HBzF+RwgPscljfE/6PCL8T9A/E/4snw9
Vc+xWVtlOjH7boxfghQ3xi8B8UuXzzA+Cp4cYHwUEB+Vy/kruM35KyD+yp/z
XdCd811AfNcszo9BBOfHgPixXpxPgzTOpwHxaXmSvR7L+qr/B+H4spU=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {-3, 3}, {0, 0.2}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.7471626674473143`*^9, 3.747162722545157*^9}, 
   3.7471633176630774`*^9, 3.747163360019484*^9, 3.747163486246975*^9, {
   3.747163645509574*^9, 3.7471636726402187`*^9}, {3.7471637092928953`*^9, 
   3.747163720864361*^9}, 3.7471637993377113`*^9, {3.747163842609548*^9, 
   3.747163904338805*^9}, 3.747164034846381*^9, {3.7471662735339813`*^9, 
   3.747166286206534*^9}, 3.747262286518654*^9, {3.747262518889927*^9, 
   3.747262528136688*^9}}]
}, Open  ]],

Cell["\<\
Check that the solution is good (trait distribution integrates to 1)\
\>", "Text",
 CellChangeTimes->{{3.747262289672744*^9, 3.747262308927741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"x1", ",", "x2"}], "]"}], "/.", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"\[Lambda]", ">", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.747162604058045*^9, 3.747162641531431*^9}, {
  3.747162765387556*^9, 3.7471627747731743`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.74716263380072*^9, 3.747162642511804*^9}, {
   3.747162770216155*^9, 3.747162775382749*^9}, 3.747163314816375*^9, 
   3.747163358461049*^9, 3.747163485575189*^9, 3.747163680170319*^9, 
   3.747163801415901*^9, 3.7471638443876877`*^9, 3.747262311249845*^9}]
}, Open  ]],

Cell["\<\
What is mean fitness at equilibrium?\
\>", "Text",
 CellChangeTimes->{{3.747262319386615*^9, 3.747262327027464*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}], 
       RowBox[{"w", "[", 
        RowBox[{"x1", ",", "x2"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], "/.", 
    RowBox[{"sol", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ",", 
   RowBox[{"\[Lambda]", ">", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", "/.", 
   RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}], "/.", 
  RowBox[{"\[Mu]", "\[Rule]", "0.0001"}]}]}], "Input",
 CellChangeTimes->{{3.747162872902953*^9, 3.747162941221737*^9}, {
  3.747163515963903*^9, 3.7471635265649223`*^9}, {3.747262355968768*^9, 
  3.747262359660664*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", "\[Lambda]", "+", "\[Mu]", "-", 
   RowBox[{"\[Lambda]", " ", "\[Mu]"}]}], 
  RowBox[{"2", "+", 
   RowBox[{"2", " ", "\[Lambda]"}]}]]], "Output",
 CellChangeTimes->{{3.747162855116931*^9, 3.7471629475580263`*^9}, 
   3.747163328033659*^9, 3.747163367848119*^9, {3.747163493823185*^9, 
   3.7471635322167053`*^9}, 3.7471636903049097`*^9, 3.747163807612795*^9, 
   3.747163850360324*^9, {3.747262340420813*^9, 3.7472623638715887`*^9}}],

Cell[BoxData["0.5000495024875622`"], "Output",
 CellChangeTimes->{{3.747162855116931*^9, 3.7471629475580263`*^9}, 
   3.747163328033659*^9, 3.747163367848119*^9, {3.747163493823185*^9, 
   3.7471635322167053`*^9}, 3.7471636903049097`*^9, 3.747163807612795*^9, 
   3.747163850360324*^9, {3.747262340420813*^9, 3.747262363872727*^9}}]
}, Open  ]],

Cell["weird??! way too low", "Text",
 CellChangeTimes->{{3.747306828646285*^9, 3.747306837797615*^9}}],

Cell["\<\
Convert from trait to fitness, to plot equilibrium fitness distribution\
\>", "Text",
 CellChangeTimes->{{3.747306804088263*^9, 3.7473068172151403`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"w", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], "\[Equal]", "W"}], ",", "x1"}], "]"}],
   "/.", 
  RowBox[{
   RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], "/.", 
     RowBox[{"sol", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", "%"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"W", ">", "0"}], ",", 
     RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"%", "/.", 
     RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}], "/.", 
    RowBox[{"\[Mu]", "\[Rule]", "0.0001"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"W", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747263000226138*^9, 3.74726309678992*^9}, {
  3.74730678319734*^9, 3.7473067916377*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x2", "2"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          FractionBox["1", "W"], "]"}]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", "\[Rule]", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x2", "2"]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", 
         FractionBox["1", "W"], "]"}]}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.747263000742096*^9, 3.747263097208107*^9}, 
   3.747306792305003*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"W", " ", "\[Lambda]"}], "+", 
     RowBox[{
      SuperscriptBox["W", 
       FractionBox["1", "\[Lambda]"]], " ", "\[Mu]"}], "-", 
     RowBox[{"W", " ", "\[Lambda]", " ", "\[Mu]"}]}], 
    RowBox[{"2", " ", "\[Pi]", " ", "\[Lambda]"}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"W", " ", "\[Lambda]"}], "+", 
     RowBox[{
      SuperscriptBox["W", 
       FractionBox["1", "\[Lambda]"]], " ", "\[Mu]"}], "-", 
     RowBox[{"W", " ", "\[Lambda]", " ", "\[Mu]"}]}], 
    RowBox[{"2", " ", "\[Pi]", " ", "\[Lambda]"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.747263000742096*^9, 3.747263097208107*^9}, 
   3.7473067923404427`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747263000742096*^9, 3.747263097208107*^9}, 
   3.747306792415511*^9}]
}, Open  ]],

Cell["this gotta be wrong! ", "Text",
 CellChangeTimes->{{3.7473068204059143`*^9, 3.7473068240717163`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["attempt #2", "Section",
 CellChangeTimes->{{3.747306945676662*^9, 3.747306947721799*^9}}],

Cell["Lets go straight to fitness.", "Text",
 CellChangeTimes->{{3.747306988521708*^9, 3.747307004066641*^9}}],

Cell["\<\
We start with Martin & Lenormand\[CloseCurlyQuote]s (2016) PDF of selective \
effects\
\>", "Text",
 CellChangeTimes->{{3.7472618462280693`*^9, 3.747261892895281*^9}, {
  3.7473070102688713`*^9, 3.747307022366156*^9}, {3.747307126306278*^9, 
  3.747307147935652*^9}, {3.7473073290370083`*^9, 3.747307337533946*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fs", "[", 
    RowBox[{"s_", ",", "so_", ",", "\[Lambda]_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["2", "\[Lambda]"], 
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"NoncentralChiSquareDistribution", "[", 
       RowBox[{"n", ",", 
        FractionBox[
         RowBox[{"2", "so", " "}], "\[Lambda]"]}], "]"}], ",", 
      RowBox[{
       FractionBox["2", "\[Lambda]"], 
       RowBox[{"(", 
        RowBox[{"so", "-", "s"}], ")"}]}]}], "]"}], 
    RowBox[{"HeavisideTheta", "[", 
     RowBox[{"so", "-", "s"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.730742643008808*^9, 3.7307426435174417`*^9}, {
  3.730742676273735*^9, 3.730742676472419*^9}, {3.747307684501861*^9, 
  3.7473076850629*^9}}],

Cell[TextData[{
 "where so = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "max"], "-", 
    SubscriptBox["m", "wt"]}], TraditionalForm]]],
 " is the selection coefficient of the optimum phenotype, \[Lambda] is the \
mutational variance per trait, and n is the number of traits under selection.\
\n\nIn our case we will have so=0, giving us a gamma distribution (see Martin \
& Lenormand 2006)"
}], "Text",
 CellChangeTimes->{{3.7307394739003077`*^9, 3.7307394840669413`*^9}, {
  3.7307395177563477`*^9, 3.730739638511516*^9}, {3.7307399351486263`*^9, 
  3.730739995318924*^9}, {3.730740048276404*^9, 3.730740104553334*^9}, {
  3.747307169403172*^9, 3.7473071936293783`*^9}, {3.747307286768446*^9, 
  3.747307346071968*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"fs", "[", 
    RowBox[{"s", ",", "0", ",", "\[Lambda]", ",", "n"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "<", "0"}], ",", 
     RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "==", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"GammaDistribution", "[", 
       RowBox[{
        RowBox[{"n", "/", "2"}], ",", "\[Lambda]"}], "]"}], ",", 
      RowBox[{"-", "s"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "<", "0"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"%%", "/.", 
     RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}], "/.", 
    RowBox[{"n", "\[Rule]", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", 
     RowBox[{"-", "0.05"}], ",", "0"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747307194353703*^9, 3.7473072175632544`*^9}, {
  3.7473072989646683`*^9, 3.747307302305241*^9}, {3.747307376742607*^9, 
  3.7473073773292637`*^9}, {3.74730765092563*^9, 3.747307695260683*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"s", "/", "\[Lambda]"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox["s", "\[Lambda]"]}], ")"}], 
     RowBox[{"n", "/", "2"}]]}], 
   RowBox[{"s", " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["n", "2"], "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.747307202109209*^9, 3.747307217990591*^9}, 
   3.7473073026854*^9, 3.747307378239629*^9, {3.747307653946207*^9, 
   3.747307695662374*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.747307202109209*^9, 3.747307217990591*^9}, 
   3.7473073026854*^9, 3.747307378239629*^9, {3.747307653946207*^9, 
   3.747307695697494*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   "], {{{}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1GV4l1UAxuH/BoMNRgxGjB5do+ZGjG7GRoyGEZvEJiUhAhKCSdotHSah
YJIGqCjdDdKoqJSCgtyTD/d1fu9zruv9eKLTR6aMCA4EAkFkBt0/M4Ludx09
xFmbwfzru5ZzEN/rf6ipB/KK/o7b1PD9YBb9Mlu5RYwtPet/Op2X2MLfVLen
UUun8SLf8hfV7AOoqQfwAt9wk6r2/tTQ/Xmer7lBFXs/YnQ/nuMrrlPZ3pfq
ui9z2cw1KtlTqaZTmcMmrlLR3oequg+z2cifVLD3poruzSw28Afl7b2orHsx
k/X8Tjl7TyrpnsxgHVcoa+9BRd2DZ/mS34i2d6eC7s4zfMGvlLF3o7zuxtN8
zi+UtnelnO7KU3zGZUrZu1BWd+FJPuUSJe0pROsUnuATLlLC3pkyujPTWcsF
its7UVp3YhprOE8xe0dK6Y48zsecI8regZK6A1P5iLMUtSdTQiczhdWcoYg9
ieI6icms4mcK29tTTLdnEis5TSF7IlE6kcdYwSki7e0oqtsxkQ85SUF7W4ro
tkzgA05QwN6GwroN43mf40TYW1NIt+ZR3uMY+e2tiNStGMe7HCWfvSUFdUse
4R2OkNfeggK6BWNZzmHy2JsToZszhmUcItzejPy6GaNZykFy25uSTzdlFEs4
QC57E/LqJjzMYvYTZm9MHt2YkSxiH6H2RoTrRoxgIXvJaW9Ibt2Q4SxgDzns
CeTSCQxjPrsJsTcgTDdgKPPYRXZ7fUJ1fR7ibXaSzV6PnLoembzFDoLtdcmh
65LBm2wnyB5PiI5nCG/wUyDw/0MaR3YZx2Be50f+4wF32bJOBvEa27hLrLus
NzmWgbzKD9yhjrt74BOXxw==
        "]]]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1HeciHUcB/DjDne2G/Y647iFo6RBGlJURlQqKo5IUQkpK+0QIiXKKFRG
kQYZLQpFS2lZDVsKLaH39+WP9/P5/D6/1+t5/nsyew7sPKBIQkLCLR6RTT1O
yPVMpZBmFI10d1Ju4Gl6cwaJke5OyY08Qx/OJCkyXswnYlp8i+YUi4zv8qn+
LH05i+KR9qJs0qfTjxaUiLQnslmfwa2cTXKkPYnP9OfozzmkRNqL8bn+PLdx
LiUj7cX5Qp/J7ZxHqUh7Cb7UZzGAlpSOtCfzlT6bgbSiTKQ9hS36HO7gfMpG
2kvytf4Cd9KacpH2Unyjv8hdXED5SHtptupzGcSFVIi0l+FbfR53cxGpkfay
fKfPZzAXkxZpL8f3+ksMoQ3pkfby/KC/zFAuISPSXoEf9Ve4h7ZUjLSnsk1f
wDAupVKkPY3t+kLu5TIqR9rT2aEv4j7aUSXSnsFOfTHDaU/VSHtFdumvMoLL
qRZpr8RP+muM5AqqR9or87O+hFFcSY1IexV+0Zcymg7UjLRX5Vf9de6nI7Ui
7dXYrS9jDJ2oHWmvzh79DR6gM5mR9hrs1d/kQa6iTqS9Jvv0t3iILtSNtNdi
v/42D9OVepH22hzQl/MIV1M/0p7JQX0Fj3INWZH2OhzS3+ExrqVBpL0uv+kr
eZxuNIy01+OwvoqxXEd2pL0+v+urGcf15ETas/hDX8N4biA30t6AI/q7PEF3
8iLtDTmqv8cEepAfac/mmP4+E7mRRpH2HP7UP2ASN9E40p7LX/qHPMnNNIm0
5/G3vpbJ9KQg0p7PP/o6ptAr2Brxr/4RT1Ho3Jjj+sf01pvwn95HFhQ5/V9u
6vw/zcWW8A==
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{"AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747307202109209*^9, 3.747307217990591*^9}, 
   3.7473073026854*^9, 3.747307378239629*^9, {3.747307653946207*^9, 
   3.747307695737965*^9}}]
}, Open  ]],

Cell["\<\
Shift this to be the distribution of fitness\
\>", "Text",
 CellChangeTimes->{{3.747307904004405*^9, 3.747307910275847*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", "W_", "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"PDF", "[", 
     RowBox[{
      RowBox[{"TransformedDistribution", "[", 
       RowBox[{
        RowBox[{"1", "-", "s"}], ",", 
        RowBox[{"s", "\[Distributed]", 
         RowBox[{"GammaDistribution", "[", 
          RowBox[{
           RowBox[{"n", "/", "2"}], ",", "\[Lambda]"}], "]"}]}]}], "]"}], ",",
       "W"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"W", "<", "1"}], ",", 
      RowBox[{"\[Lambda]", ">", "0"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", "W", "]"}], "/.", 
     RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}], "/.", 
    RowBox[{"n", "\[Rule]", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"W", ",", "0.95", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.747307394637127*^9, 3.7473074674553537`*^9}, {
  3.7473075062789507`*^9, 3.7473076192842903`*^9}, {3.74730771899446*^9, 
  3.747307758021837*^9}, {3.747307801020254*^9, 3.7473078943945208`*^9}, {
  3.7473079530344963`*^9, 3.747307965131071*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJw12Hk0Vd//+HFzhoibWRlLRObMem1JhpBoQGQoQ1REUpSQqAxRxlIImYWQ
OWQoJLxLEgrJEOeYpwzf/Vvr97n/3HX+uHvte9Z+7H2eR8TB3cyRhoqK6iI1
FdX/++5On3NyciJARcbhVGhCELhy6jz3uEKAW5ahxUpKCOiXvJvf50NARLiK
af5mGCRSG146doeAqDo/yU1KNBy/rc1wNJSAl1qZnszvYuCYpGPd9CMCEt71
shWlJEJVUFwSdQIB+zXMX/1WTgaP7QsJDSkEnHPmsPYyT4OHjbVlVtkEfPPM
SfTuyQTe/fFL54oIuNfhR1O2kQd/3z07zV5JwHhiaK7yVBEo0Bb0HmgggIs/
8EL091IYvHbglmgrAf59Qt6v71dCJ/d3aOwmQKPCZ4THvg4OOj3e291HwL6h
zXWdmffwa9RHKmKEgDQe89hfeR9g5kmrmdAUAYNuRRQJtw7wIvcn7V4g4A9/
k9zzW92g6feW/uM6AQEdtSdVe3vgZsmJ6F90JDzyi+JP+voD1nfzamWwknCu
04PU1RqCkdJjzNrcJAx9XBe7rTsKh/6Fr+oLklCTeeMD89AE/PRYY9wUJ8Fb
PHJNjHoG5p94qwvJkuD2jPZfRvA8XBq1ieBRIeHTAx5VsnQZpJw9qWqABPuz
uePB+htwLi4mtkOPhJXfgqq2X6hRz+KwYYQpCWpfDcVLKQzozd0XImKWJKzL
ZJbbq7IgunfO/HvtSRjlF/zmH86Onu63UfxykQSuPfkqm9c4UbqO3RXyKgkT
77tDBUletDOss3XoJgn/ViLYO3UF0Qeay3qBQSS0yjv5DBeIopl9PH/CH5Iw
GWNStlAtjs7dnk7XfULC+JV1riOi0ggFdN1zfUZCWxn0GEjKo5Ai0ftOaSTU
18/zf+9TQpSdKTk78ki4Vr7bYvq9GqKISpF7SkjIp4q+NOIAyMJ+2HysmoSi
H7L3zrrrIJrPDH0BTSTc9KQOLlnVQ8KTqkEhn0iYCpqmxEgao+CD8YZqPSRw
0/gPz28zQ9YytActBkl4089DvWf9FEo41Y9M/pBwvfelSdwbK8SfP3RpliBB
juNd9J5bdoi9eKGSapmEK2Gxa0McF1BMvdfW1hYJCmNOOVtbLuhFP3+QmysB
zJal/B53g8HyQqB+uycBdxoYHU5IPYCZPrpCNT8CYobP9mr+jYRr73Qr9O8S
8COlR3Bv92MwNjcfSQwjoMhVJW2ELR5oe24XLD8hYOd4+dso/SSI02vid0gi
oPt9mDnzuVS47fI9ky0DjyfglFh4PQNOLOf0WOcT8LhZeumrQQ7QeCe+eltK
wN/b07T6goUQOZTOI1RLwEN2fy3a1jfAWH15v0QzAVer3M8xcZbDN13ac14d
BLwXuBB0x68GgmpLFdp6CIhPmuM0pjQAs/i9LNmf2F/VVdljMs0wrikCPWME
lHM/0U1wbIPiel8fwRkCih0lZDIaO8Hi4Kyp1wr+f4tSr6fDv0BffHDbFyoS
1G25TBxVvoP6hNLYYSYSmCZYzz5bG4SZiSKxeQ4S4razfzQQH4EoiylqXX4S
elsWdtlfHwO2Mp3ANFHsiV47hurDFFykKU9lkyJB+4FIckLeLBRWT5wXUCQh
tsZvRenuIhiJjx911SCh0T0/7IXlGjT607Y16ZAQfKfojqYEFeJv1pg5YETC
goCVw5MeWtRYjZR7T5IgPOYTzHqXEVmL0ArusSGhoabFfI6WDX2+NvzqliMJ
/v35e7WdKEjo7WDn0GUSyjS4GypiuZG1c0LSuDf2K0m3ZXFTABHNgg/k/Ulg
ScvgY+gSRtZcDdyhISRIBIVSriXtQZlmQboTkSQM1qQcHzKURJ/9bbks4vH6
7tma2rlTFo3wroW4JJPw1DJijOWvAjJysOeryiThg3rPQ3kZFfT46agRfyGe
f9FQ74y7JiqtDxEJKSfh7BuT5K7r2uhAwgK3Uj0JjC9ip1njdFF0v1DB3Y8k
nFK62yFx1RB173D587OLhBt5tstzyqZoRv7TO/0+EnL9X4f8GzdHa/Wkuvkw
CSXXUhUi1C2QJfXPnuRJEuapio3yc21QrOzfnatzJHRq8cl7yzmgbjUlm4B/
JPh94TQyc3JC5XUhCy4uBOziuGewFHoXHDSHPV94ELCuwbz7zkAoJOkNd8nd
JMDuBuenbLcICPnVQjEMJOC1908Qno4GE5fWBfcHBJgqWQWJ/4yFzDtX385F
E+AtJL8bTT0FidH8H/JPCVjx3vWn4noKXK90Shl/SUBB2JL2qE06EAMlzWdz
8XiRZRE3GbMh4niCSdgbvL93jDkKPi6AalPhtzzVBDhvcaUqfC2G5z8jqKUa
CdAZ9Rz7RZaBlQ3vtGE7AYtW2iviK1WQ7apX0fKFgHoL/3ZbpXoQbmYZoxog
oM9fwunltia4EG1UWjSKz0N5njPCVK3QlSM6Kkjg+chtT7098xmcKJHX9ZcI
OEp3pfDD7f8gjOnFeMcmnt+qwcpxql7oM9Gp5thGwkDbmvwZmwFYonWUa9+B
97PtCZ/PSg2D+rZdDDq8JFTFNY/tOPMHXlm4aF0XJoGW3k4n0/AvpKtZnmKQ
xOuVIi0S3TUDZlmyx3fL4/2qlPFo+e0F6KcXm0RqeP8fHTYd2FyBlblKx3pt
EvQGbZpnGzZBU2b88KYBCYXUIorPO2iQ8ffoumIzEr63ua+/ObwN3e/uTBY7
S0JeveKBS7Hb0SRfxi/T8yRE+UUd4/PiQP0zu2l+uJGQWJfomuzPhQJO3aKf
8sLzvahcaSnNj6iyl7OZbpGw/G1R9fm4EKKE88gGB+P9lu3S5aRkMWRU085V
FU5COYXutcq/fYjbX3zAJJaEY3peiSeiD6DH7Y4hF5+ToKv46kIhnQKaYGro
jMogwfa2UFHm+kHU3dPwj7OABI8dnG13ODTQ71mL+6fKSPi6lNNAiUSo4ZZb
Kes7vH7deFX8/I6g1lM7jwS1kCAqmnW85IABWr1lqvTmM17/Wu306XUmqFJR
gV67l4SDRaECQXNmSOrG6ttTv0jwCfVPP8d5Bt3IHWDxGSfhZdmlwed7rZHF
FSe0OEPCCZ8BP9LUHs16c4ajVXw/Gv7enFR0RG82zGXqNkg4/S+LmSHHGTUV
V+c7OxPQ8tDyezPbXXDKotwPdSeg9tzGhLBWKMxtdDpI3yCA21fGbaw4HNhn
778zDCBg4/lbgyr/aOiYu7dhdZ+Ar3I5PvLGsXDz5F+NmSgCzpvLhF4+8hTm
FEWr+RIJsNc0UUvelgJe5/OTvqYSQPDd5JnuSQPNropDZ3MI6NF45Z1wOQu6
q+NFvYsJOOhzJFWjKR9OMg4ycFZhD6zFDjq2xeAyu/uy9HsCJH3qyhnPl8Gu
iZclym3Y49d9VVtaVVCNotab/iPARcHN3/1jHeznPh4y8QM/34kH9XL7NsJL
DQeP5N/4vIhqj9M/+RHskpcEhKYJ6DKUZ/OS+gxTAdZMiosE5FtYBd751w0X
GvYvt20QMPdlm7KH6zfICWwVX6XH+9/zsS99cf2wGlVbVs5Gwq90w7i64iGI
HFRkPMxDglcr75XE9lGYy/Z9ZitEgpP0OLfnk0k4/FVSlkYCnw/Obik7XGZA
9EX3EUE5Euom0ZXcrXlI967TkFYlgUYh/D91ixWg5HMrvkMk7GqIoXam3QRj
h0OX/uiTEJh9srv7OA167FxJn3KChPBRvr6yLAYkmPvWTsyKhAAXoZ1Nv1mQ
z6WQDXUHEt7zhCwf2WRHVRE1T7+5knC8nfbo/hVO9NiIqJj2xOOV1Ld8DuND
zPwXKhd9SZCVYbP05hRCl/UOVwXdJQEiHRSa9oqhF3OzG2lhJPS1WnCvWO5D
lRtM2oYx+LwK8GW4+00aXXwlwOCaRAJdWuT6q1h5VG7jmeeXjn8/vO1gz8WD
aO6avDklHz8/Dm+uZrqoo39MDRpapST47hj4pC+IECv5KnithoQDEgEs2fM6
yInC+iiwmYQLR+n6u6L1UfibIz+SOkg4OvM11GXOGCWX/N6n9Y2EHYT1RrOf
GTpi7r90+icJLX6ezyNCTqP7VDavHMbw+L7GI5KuZ1EFa/rpeZIEzi//ODRG
7RBVTHCa8AoJns+oEsdTLqAGgUbdlHV8nhkM2s3TO6P0nyPcvzbx+fXXbCHb
zAW1555hHsP9sfptNzL8LwhcBnMo67g/iGxKWSgRArst9aVycH+oXvUV1rAI
h5M3J7jacH9Enppovq8fDWzlI4GduD+4R8s7MuhjYfiQxOYV7MVEJFWUbS4R
Tp+1zovA/eHcnJRo8TIZ5t528hthL3rUG0P1MWkwYli91of7w1mDqyxKJAu8
veK3T+L+CDvB4vnZLh+Ef1fLPMb9kZM/+91+bzEYr42K5uP+IEa0Dw/vLoMN
GZeEPNwfzYqV9bXDldCcqySoi73s2imRPBtTB3K1M19tsJf4ae2Jt0qNUM8+
bcyNvcR/WvRhpPoIWYl2Ksm4Pw49unv9bWsHyJW/N8vC/eFjVDD1sqobOgWv
+htiL1ef/an4JfwNKAJs/Zewl/jJga3Yg/3ge+bvqgz2srd06U6KzxCotsKD
etwf7alxZqn3RyGh+67hF9wfXU84a16pTQK7GGVXwD4S+ISZePWVZoCZL/3d
C9wfxa2jCx/q5+H+gUe/U3F/3PFl2AhjWAHBh418h7CXd847SxwyNuD0rYkA
K+wlaodUwmsOGlRSYJLFjb2csjLXVLVhQC48UtppuD8cHwfEb49kQbVcyyyF
uD92Mbu7UTexo/3WrGOnsBfpmTln6TJOJKC/L+YK9nKgyTFyQ5MPRZo9bXDD
XgoGeoqu5Qki/owz1DTYy38h+y4vTYgivQg6T17sJUnOPXeGeR8Kr/k314L7
I9O6zcX8ljQ6+WRJdxL3R/NTkb9itvIoOdSQfxb3hx3tQvmgyEFE0zi+GYX7
Q9j3YeoHLnXEEHedqwj3B5vzeVOqz4AUso5MeWAvi1wp0juLdFDJzAMlauyF
r+4KvZGuPurpqC3gwF66qt+UmkcYI8qilloV7o/dt57HBmqboc66uthvuD9O
V6YrTqPTiD03yasX90cGM8F7lO0sch1osPfEXqTP3xKwKbRDjGmar6Nwf+wR
Kkses7iAWvffOsGOvdQ/G4qNK3VCecQzUVPsRZCV+8v7DWeU1CnF4oH75Eok
c3B1lgs6LpFR/gr7mWI5WdFVGgQXV5fOlGE/NuMjdMktIVDMELzjIvaTIvsr
1VQqHK7X8GmHYT+fzsokFRyIhoKnlCNh2A9vSpOB+nAMcJcctZXBfjjUAwPh
YyIwut9M18N+IrcdKPa4lAzyDsOW27Af3wfHVba80qAstKb3Kfbz6nhF/ei/
TGg2iQ9Mx3609nDm8MrmA4NZ3uET2I/NveBnpYzFULf58fZl7Ge7cplB8r9S
ILoMHzpjP7m2ouLRpZVwbIjhNR32M3SDx2bGtw4UHtdv8GA/w1sNjXaURjD1
K67uwv3uxJxdcaLnA7THcenaYj9mb57faH3aAd3mPssO2E+L/zZ7+qRuYDDm
bGDCfqJaGLvd13ugeex1mTj2U8G7uuhO3w9VlYECk7jfHdfcCq2shoCtrskg
EPtBuZJjC06j8NeJ8WUk9rOP8y63IuskrBiEUAD7uSJ6ojqVfwb8e7ZvnMN+
XHao5wulzeP7slRujf0USgo+FhhchvQbAhEbuN+Z9jKpfr6+AVZMEMaJ/Zy2
6labnqNGut0Jq12438V7V699U2FAkZ8uyJ/Hfo7t3ZXNdZ4F2bvKPnHFfnrL
90plZbEjB52DrFzYj7+N8F2/WE70q0mHWhb7Wa/9+R/JxYc6r5Q2i2M/N5cS
JZdvCKJZc4f0etzvW+VrmqfaRVFSH2teN+53xc9Ufl0j4sj7+UJbCPYjoapD
7jsujVqZfjvmYD87DtMOixyRR4+TlLtysR/2QRjS2lRCD90aT5piP2Of5Qoq
p9TQ9n5TGjfsx1mcJfV9AqCm4J3C0thPP1dknUCUDvphq7+tHvf7JaOCLAch
feTX78fbjvs9prYyxOCsMToWO6nti/1UKH+bSNtjhuKW7UfjsZ9Re/WBy4Kn
0ckATasn2I/DtecLLb+s0GFdszF57Gcu/56BdJwdCs/hLdXHftiYahJ1D15A
JgoWZz7gXim5ceZFV4QTklvykWDEftSzAvbW/eeMhHu3cUhgP71n9lyKuO2C
eD8epy/H18mStvUqX1xQ1J+2RyHYU4VDSIt4ZhBMMjz3fYI9lRxj8tYpCYHb
A6mB+tiTq48//xJnONz/WXTaDXvq9hiRPSEcDZss+zNcsCf9zA/E084YKCS+
7mDDnnaNF+rPlCTC8Epoyh7sSUgkST35RDKYqrit/k4hYN4u0Lv4fBoIi9e2
+GJPSkLjluITmeCuyVMdiD0ZPtj3w5o7H1YY09vlsKciQSV/j7UiWKXSzDXG
ng5bf6uIniwFJzFNWl3syTHGqJc7uRLY1t19fnfj81FBg2Xrch0orWdzLPZh
348CBI5RN0KCHNe119hT6Z97flH1H+Ac18wxwJ6o1YhVMqgDXop0GSDsSU1I
MM0wvBtEfo+en1gnIJmv+q/RZA8Id1Cl02JPf1SgzW/6B1hPGeW1YE953DqK
rceGYKWScb899nSg+o23wulR4Cxq/eSGPb33uhzOtTwBl2zqIgSxp4k3Ku0D
rDOgerBeALCnWy7sf/qfzIOXyn4xdexpr5b05PrHZRgnm48OYE/iZ1ZmU2w3
oP/zxahZPdwXb1eLk0eoEdtvrZevsSeGEp57h/YyoJSsQEkd7GntR8GZN8Ys
qDimrUcPe+IQzr8f8ZQdbSobpCxcxPv5/El35XucqIGuW2UH9pReNppxh4YP
za036NNhT+4U3V4LW0FknTvmnYo9qd5z44irEUVHAykfX2NPhv9Qt1WnOHJl
varqhD3Fi5Zy5atKI/qmPu+H2JM/Y0RKobI82p6ZJ/0Ae4qV0aUJnlJCJlC8
JYs9FZwYWDzWq4Z2bNWs6GFPTzLMqT/cBsQ2v1bBhD198XncUHJHB12Jz5xJ
wZ6KvwsfDN6uj0zOWxlnY0+Ws26HLhw2Ri6jqNkSexqyFlU+ym2GVh8rsN7A
np4+4dA9zHoaLbmGf/LAnlKcfifubbVCMqt8ORzYk9AnJxOxB3bIpIChfA/2
ZEiRoAsXu4DYlY9apWNPCkXy+ky+Tmhu1VHqN+6dEYbC6e+1zmj4x+JOOuyn
+/a9IxQXF9TXrsUYg6/hWFasR60LOt1kT9OPr6N3b/FQJl3Q/943U/3/z//e
t/3v+v8Ansg0tQ==
   "], {{{}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1GV4l1UAxuH/BoMNRgxGjB5do+ZGjG7GRoyGEZvEJiUhAhKCSdotHSah
YJIGqCjdDdKoqJSCgtyTD/d1fu9zruv9eKLTR6aMCA4EAkFkBt0/M4Ludx09
xFmbwfzru5ZzEN/rf6ipB/KK/o7b1PD9YBb9Mlu5RYwtPet/Op2X2MLfVLen
UUun8SLf8hfV7AOoqQfwAt9wk6r2/tTQ/Xmer7lBFXs/YnQ/nuMrrlPZ3pfq
ui9z2cw1KtlTqaZTmcMmrlLR3oequg+z2cifVLD3poruzSw28Afl7b2orHsx
k/X8Tjl7TyrpnsxgHVcoa+9BRd2DZ/mS34i2d6eC7s4zfMGvlLF3o7zuxtN8
zi+UtnelnO7KU3zGZUrZu1BWd+FJPuUSJe0pROsUnuATLlLC3pkyujPTWcsF
its7UVp3YhprOE8xe0dK6Y48zsecI8regZK6A1P5iLMUtSdTQiczhdWcoYg9
ieI6icms4mcK29tTTLdnEis5TSF7IlE6kcdYwSki7e0oqtsxkQ85SUF7W4ro
tkzgA05QwN6GwroN43mf40TYW1NIt+ZR3uMY+e2tiNStGMe7HCWfvSUFdUse
4R2OkNfeggK6BWNZzmHy2JsToZszhmUcItzejPy6GaNZykFy25uSTzdlFEs4
QC57E/LqJjzMYvYTZm9MHt2YkSxiH6H2RoTrRoxgIXvJaW9Ibt2Q4SxgDzns
CeTSCQxjPrsJsTcgTDdgKPPYRXZ7fUJ1fR7ibXaSzV6PnLoembzFDoLtdcmh
65LBm2wnyB5PiI5nCG/wUyDw/0MaR3YZx2Be50f+4wF32bJOBvEa27hLrLus
NzmWgbzKD9yhjrt74BOXxw==
        "]]]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl1HeciHUcB/DjDne2G/Y647iFo6RBGlJURlQqKo5IUQkpK+0QIiXKKFRG
kQYZLQpFS2lZDVsKLaH39+WP9/P5/D6/1+t5/nsyew7sPKBIQkLCLR6RTT1O
yPVMpZBmFI10d1Ju4Gl6cwaJke5OyY08Qx/OJCkyXswnYlp8i+YUi4zv8qn+
LH05i+KR9qJs0qfTjxaUiLQnslmfwa2cTXKkPYnP9OfozzmkRNqL8bn+PLdx
LiUj7cX5Qp/J7ZxHqUh7Cb7UZzGAlpSOtCfzlT6bgbSiTKQ9hS36HO7gfMpG
2kvytf4Cd9KacpH2Unyjv8hdXED5SHtptupzGcSFVIi0l+FbfR53cxGpkfay
fKfPZzAXkxZpL8f3+ksMoQ3pkfby/KC/zFAuISPSXoEf9Ve4h7ZUjLSnsk1f
wDAupVKkPY3t+kLu5TIqR9rT2aEv4j7aUSXSnsFOfTHDaU/VSHtFdumvMoLL
qRZpr8RP+muM5AqqR9or87O+hFFcSY1IexV+0Zcymg7UjLRX5Vf9de6nI7Ui
7dXYrS9jDJ2oHWmvzh79DR6gM5mR9hrs1d/kQa6iTqS9Jvv0t3iILtSNtNdi
v/42D9OVepH22hzQl/MIV1M/0p7JQX0Fj3INWZH2OhzS3+ExrqVBpL0uv+kr
eZxuNIy01+OwvoqxXEd2pL0+v+urGcf15ETas/hDX8N4biA30t6AI/q7PEF3
8iLtDTmqv8cEepAfac/mmP4+E7mRRpH2HP7UP2ASN9E40p7LX/qHPMnNNIm0
5/G3vpbJ9KQg0p7PP/o6ptAr2Brxr/4RT1Ho3Jjj+sf01pvwn95HFhQ5/V9u
6vw/zcWW8A==
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0.9500000000000001, 0},
  Method->{"AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.747307426944043*^9, 3.747307467810845*^9}, 
   3.747307507091467*^9, {3.747307551682193*^9, 3.7473076196686277`*^9}, 
   3.7473077222064543`*^9, {3.747307754174925*^9, 3.747307758384612*^9}, {
   3.747307802439497*^9, 3.7473078947367887`*^9}, {3.747307958096696*^9, 
   3.74730796857679*^9}}]
}, Open  ]],

Cell["\<\
Then at equilibrium, under the house-of-cards (HoC) approximation, the \
distribution of fitness is (Turelli 1984 eqn 3.2a)\
\>", "Text",
 CellChangeTimes->{{3.74726195045994*^9, 3.7472619984613447`*^9}, {
  3.7472621551556664`*^9, 3.747262156152791*^9}, {3.747262222524086*^9, 
  3.747262223756425*^9}, {3.74726240140142*^9, 3.747262403761567*^9}, {
  3.7473079365741367`*^9, 3.7473079378729753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "[", "W", "]"}], "==", 
  RowBox[{
   RowBox[{"\[Mu]", " ", 
    RowBox[{"g", "[", "W", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
    FractionBox["W", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "[", "W", "]"}], "W"}], ",", 
       RowBox[{"{", 
        RowBox[{"W", ",", "0", ",", "1"}], "}"}]}], "]"}]], " ", 
    RowBox[{"p", "[", "W", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{"%", ",", 
     RowBox[{"p", "[", "W", "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"%%", "/.", "%"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", ">", "0"}], ",", 
     RowBox[{"n", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"%", "/.", 
      RowBox[{"\[Mu]", "\[Rule]", "0.001"}]}], "/.", 
     RowBox[{"n", "\[Rule]", "2"}]}], "/.", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}], ",", 
   RowBox[{"1", "\[GreaterEqual]", " ", "W", "\[GreaterEqual]", "0"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7473084488771887`*^9, 3.7473086293503532`*^9}, {
  3.747396817741144*^9, 3.747396830236611*^9}, {3.747396866594945*^9, 
  3.747396883601966*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "[", "W", "]"}], "\[Equal]", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "W"}], "\[Lambda]"]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "W"}], ")"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox["n", "2"]}]], " ", 
     SuperscriptBox["\[Lambda]", 
      RowBox[{
       RowBox[{"-", "n"}], "/", "2"}]], " ", "\[Mu]"}], 
    RowBox[{"Gamma", "[", 
     FractionBox["n", "2"], "]"}]], "+", 
   FractionBox[
    RowBox[{"W", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
     RowBox[{"p", "[", "W", "]"}]}], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      RowBox[{"W", " ", 
       RowBox[{"p", "[", "W", "]"}]}], 
      RowBox[{"\[DifferentialD]", "W"}]}]}]]}]}]], "Output",
 CellChangeTimes->{{3.7473084967069798`*^9, 3.747308593016581*^9}, 
   3.747308629976533*^9, 3.74739683108638*^9, 3.747396884050654*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "W", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "\[Lambda]"]}], "+", 
           FractionBox["W", "\[Lambda]"]}]]}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", "W"}], ")"}], 
         RowBox[{"n", "/", "2"}]], " ", 
        SuperscriptBox["\[Lambda]", 
         RowBox[{
          RowBox[{"-", "n"}], "/", "2"}]], " ", "\[Mu]"}], "-", 
       RowBox[{"2", " ", "W", " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["n", "2"], "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["W", "2"], " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["n", "2"], "]"}]}], "+", 
       RowBox[{"2", " ", "W", " ", "\[Mu]", " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["n", "2"], "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["W", "2"], " ", "\[Mu]", " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["n", "2"], "]"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Gamma", "[", 
         FractionBox["n", "2"], "]"}]}], "+", 
       RowBox[{"W", " ", 
        RowBox[{"Gamma", "[", 
         FractionBox["n", "2"], "]"}]}]}], ")"}]}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{{3.7473084967069798`*^9, 3.747308593016581*^9}, 
   3.747308629976533*^9, 3.74739683108638*^9, 3.74739688408189*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"W", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          FractionBox["1", "\[Lambda]"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "W"}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", 
          RowBox[{"n", "/", "2"}]], " ", 
         RowBox[{"(", 
          RowBox[{"4", "+", 
           RowBox[{"6", " ", "W", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "-", 
              RowBox[{"3", " ", "n", " ", "\[Lambda]"}]}], ")"}], " ", 
            "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"Gamma", "[", 
          FractionBox["n", "2"], "]"}]}], "+", 
        RowBox[{"3", " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"W", "/", "\[Lambda]"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", "W"}], ")"}], 
             RowBox[{"n", "/", "2"}]]}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox["1", "\[Lambda]"]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "W"}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", 
             RowBox[{"n", "/", "2"}]], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              FractionBox["n", "2"], ",", 
              FractionBox["1", "\[Lambda]"]}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox["1", "\[Lambda]"]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "W"}], ")"}], " ", 
            SuperscriptBox["\[Lambda]", 
             RowBox[{"1", "+", 
              FractionBox["n", "2"]}]], " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"2", "+", "n"}], "2"], ",", 
              FractionBox["1", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}], ")"}]}], 
     ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "W"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"3", " ", "n", " ", "\[Lambda]"}]}], ")"}], " ", 
            "\[Mu]"}]}], ")"}], " ", 
         RowBox[{"Gamma", "[", 
          FractionBox["n", "2"], "]"}]}], "+", 
        RowBox[{"6", " ", "\[Mu]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gamma", "[", 
            RowBox[{
             FractionBox["n", "2"], ",", 
             FractionBox["1", "\[Lambda]"]}], "]"}], "-", 
           RowBox[{"\[Lambda]", " ", 
            RowBox[{"Gamma", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"2", "+", "n"}], "2"], ",", 
              FractionBox["1", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}], ")"}]}], 
     ")"}]}], "\[Equal]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7473084967069798`*^9, 3.747308593016581*^9}, 
   3.747308629976533*^9, 3.74739683108638*^9, 3.747396904663287*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"-", "1.`"}], "+", "W"}]]}], "5.4059843376361635`*^84", " ", 
    "W", " ", 
    RowBox[{"(", 
     RowBox[{"0.6676626626626627`", "\[VeryThinSpace]", "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"200.`", " ", "W"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.3852818085452829`*^-88"}], "+", 
         RowBox[{"1.3852818085452829`*^-88", " ", "W"}]}], ")"}]}], "-", 
      RowBox[{"1.6676626626626627`", " ", "W"}], "+", 
      RowBox[{"1.`", " ", 
       SuperscriptBox["W", "2"]}]}], ")"}]}], "\[Equal]", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7473084967069798`*^9, 3.747308593016581*^9}, 
   3.747308629976533*^9, 3.74739683108638*^9, 3.747396904764803*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7473087120760317`*^9, 3.747308713242629*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "[", "W", "]"}], "==", 
         FractionBox[
          RowBox[{"\[Mu]", " ", 
           RowBox[{"g", "[", "W", "]"}]}], 
          RowBox[{"1", "-", 
           RowBox[{"k", " ", "W"}]}]]}], "}"}], "/.", 
       RowBox[{"k", "\[Rule]", 
        FractionBox[
         RowBox[{"1", "-", "\[Mu]"}], 
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", "W", "]"}], "W"}], ",", 
           RowBox[{"{", 
            RowBox[{"W", ",", "0", ",", "1"}], "}"}]}], "]"}]]}]}], ",", 
      RowBox[{"p", "[", "W", "]"}]}], "]"}], ",", 
    RowBox[{"\[Lambda]", ">", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.747162391488793*^9, 3.747162583121251*^9}, {
  3.747162659116434*^9, 3.7471626598989267`*^9}, {3.747164013401216*^9, 
  3.747164022369711*^9}, {3.7472622457843246`*^9, 3.7472622488605957`*^9}, {
  3.7473079462104073`*^9, 3.747308003668887*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", "W", "]"}], "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p", "[", "W", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "\[Lambda]"}]], " ", 
       SuperscriptBox["\[Lambda]", 
        RowBox[{
         RowBox[{"-", "n"}], "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"W", "/", "\[Lambda]"}]]}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "W"}], ")"}], 
           RowBox[{"n", "/", "2"}]], " ", "\[Mu]"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox["1", "\[Lambda]"]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "W"}], ")"}], " ", "W", " ", 
          SuperscriptBox["\[Lambda]", 
           RowBox[{"n", "/", "2"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
          RowBox[{"Gamma", "[", 
           FractionBox["n", "2"], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "W"}], ")"}], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox["n", "2"], "]"}]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7471625509623747`*^9, 3.7471625850148993`*^9}, 
   3.747162662026328*^9, 3.747163300420292*^9, 3.7471633558701963`*^9, 
   3.747163480532323*^9, 3.747163798047254*^9, 3.747163841447513*^9, 
   3.747164024681075*^9, {3.7472622712156773`*^9, 3.747262278906168*^9}, 
   3.747308007353846*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  FractionBox[
   RowBox[{"\[Mu]", " ", 
    RowBox[{"g", "[", "W", "]"}]}], 
   RowBox[{"1", "-", 
    RowBox[{"k", " ", "W"}]}]], "/.", 
  RowBox[{"k", "\[Rule]", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[Mu]", "2"]}], "\[Pi]", " ", 
     RowBox[{"Vs", "/", 
      SuperscriptBox["m", "2"]}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "/.", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}], "/.", 
   RowBox[{"n", "\[Rule]", "2"}]}], "/.", 
  RowBox[{"\[Mu]", "\[Rule]", "0.0001"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", "[", 
    RowBox[{",", 
     RowBox[{"{", 
      RowBox[{"W", ",", "0", ",", "1"}], "}"}]}], "]"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7473103778043823`*^9, 3.747310408475281*^9}, {
  3.7473105342075243`*^9, 3.747310609008185*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "W"}], "\[Lambda]"]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "W"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["n", "2"]}]], " ", 
   SuperscriptBox["\[Lambda]", 
    RowBox[{
     RowBox[{"-", "n"}], "/", "2"}]], " ", "\[Mu]"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Pi]", " ", "Vs", " ", 
          SuperscriptBox["\[Mu]", "2"]}], 
         SuperscriptBox["m", "2"]]}]], " ", "W"}]}], ")"}], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["n", "2"], "]"}]}]]], "Output",
 CellChangeTimes->{{3.747310542713695*^9, 3.747310546082902*^9}, 
   3.747310603469709*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"0.02`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"200.`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "W"}], ")"}]}]]}], 
  RowBox[{"1", "-", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3.141592653589793`*^-8", " ", "Vs"}], 
       SuperscriptBox["m", "2"]]}]], " ", "W"}]}]]], "Output",
 CellChangeTimes->{{3.747310542713695*^9, 3.747310546082902*^9}, 
   3.747310603475773*^9}]
}, Open  ]],

Cell["\<\
Note that HoC requires the variance of new mutations to be much greater than \
that which exists (Turelli 1984 eqn 2.29).\
\>", "Text",
 CellChangeTimes->{{3.7472624096769323`*^9, 3.747262492388649*^9}, {
  3.747308038665292*^9, 3.7473080476387863`*^9}}],

Cell["\<\
Plot this equilibrium HoC distribution\
\>", "Text",
 CellChangeTimes->{{3.7472622531298313`*^9, 3.747262266268001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"p", "[", "W", "]"}], "/.", "sol"}], "/.", 
     RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}], "/.", 
    RowBox[{"\[Mu]", "\[Rule]", "0.0001"}]}], "/.", 
   RowBox[{"n", "\[Rule]", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"W", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7471626625479*^9, 3.747162722211795*^9}, {
   3.747163644884103*^9, 3.747163672038416*^9}, {3.747163708223564*^9, 
   3.7471637205038*^9}, {3.7471638507010393`*^9, 3.747163903869771*^9}, {
   3.747166269701172*^9, 3.747166285690795*^9}, 3.7472622433801727`*^9, {
   3.747262518238596*^9, 3.747262527497579*^9}, {3.747308052006175*^9, 
   3.747308079043599*^9}, {3.747308541942645*^9, 3.747308542614859*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 1}, {0., 2.0197998706269766`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.7471626674473143`*^9, 3.747162722545157*^9}, 
   3.7471633176630774`*^9, 3.747163360019484*^9, 3.747163486246975*^9, {
   3.747163645509574*^9, 3.7471636726402187`*^9}, {3.7471637092928953`*^9, 
   3.747163720864361*^9}, 3.7471637993377113`*^9, {3.747163842609548*^9, 
   3.747163904338805*^9}, 3.747164034846381*^9, {3.7471662735339813`*^9, 
   3.747166286206534*^9}, 3.747262286518654*^9, {3.747262518889927*^9, 
   3.747262528136688*^9}, 3.7473080796278954`*^9, {3.747308539246694*^9, 
   3.747308553695909*^9}}]
}, Open  ]],

Cell["again this weird linear thing", "Text",
 CellChangeTimes->{{3.747308403498171*^9, 3.747308407596281*^9}}],

Cell["\<\
Check that the solution is good (trait distribution integrates to 1)\
\>", "Text",
 CellChangeTimes->{{3.747262289672744*^9, 3.747262308927741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "[", "W", "]"}], "/.", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"W", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Lambda]", ">", "0"}], ",", 
      RowBox[{"n", ">", "0"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "/.", 
    RowBox[{"\[Mu]", "\[Rule]", "0.0001"}]}], "/.", 
   RowBox[{"n", "\[Rule]", "2"}]}], "/.", 
  RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}]}], "Input",
 CellChangeTimes->{{3.747162604058045*^9, 3.747162641531431*^9}, {
  3.747162765387556*^9, 3.7471627747731743`*^9}, {3.747308115962229*^9, 
  3.747308189055491*^9}, {3.747308230927396*^9, 3.7473082406497383`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"\[Mu]", " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["n", "2"], ",", 
        FractionBox["1", "\[Lambda]"]}], "]"}]}], 
     RowBox[{"Gamma", "[", 
      FractionBox["n", "2"], "]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.74716263380072*^9, 3.747162642511804*^9}, {
   3.747162770216155*^9, 3.747162775382749*^9}, 3.747163314816375*^9, 
   3.747163358461049*^9, 3.747163485575189*^9, 3.747163680170319*^9, 
   3.747163801415901*^9, 3.7471638443876877`*^9, 3.747262311249845*^9, {
   3.747308142597485*^9, 3.74730818225989*^9}, 3.747308213709394*^9, 
   3.7473082576376343`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.74716263380072*^9, 3.747162642511804*^9}, {
   3.747162770216155*^9, 3.747162775382749*^9}, 3.747163314816375*^9, 
   3.747163358461049*^9, 3.747163485575189*^9, 3.747163680170319*^9, 
   3.747163801415901*^9, 3.7471638443876877`*^9, 3.747262311249845*^9, {
   3.747308142597485*^9, 3.74730818225989*^9}, 3.747308213709394*^9, 
   3.747308257678142*^9}]
}, Open  ]],

Cell["\<\
What is mean fitness at equilibrium?\
\>", "Text",
 CellChangeTimes->{{3.747262319386615*^9, 3.747262327027464*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", "W", "]"}], "W"}], "/.", "sol"}], ",", 
     RowBox[{"{", 
      RowBox[{"W", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", ">", "0"}], ",", 
     RowBox[{"n", ">", "0"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"%", "/.", 
    RowBox[{"\[Lambda]", "\[Rule]", "0.005"}]}], "/.", 
   RowBox[{"\[Mu]", "\[Rule]", "0.0001"}]}], "/.", 
  RowBox[{"n", "\[Rule]", "2"}]}]}], "Input",
 CellChangeTimes->{{3.747162872902953*^9, 3.747162941221737*^9}, {
  3.747163515963903*^9, 3.7471635265649223`*^9}, {3.747262355968768*^9, 
  3.747262359660664*^9}, {3.747308271671194*^9, 3.7473083153475637`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "n", " ", "\[Lambda]"}]}], ")"}], " ", 
         "\[Mu]"}]}], ")"}], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["n", "2"], "]"}]}], "-", 
     RowBox[{"6", " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{
          FractionBox["n", "2"], ",", 
          FractionBox["1", "\[Lambda]"]}], "]"}], "-", 
        RowBox[{"\[Lambda]", " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"2", "+", "n"}], "2"], ",", 
           FractionBox["1", "\[Lambda]"]}], "]"}]}]}], ")"}]}]}], 
    RowBox[{"6", " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["n", "2"], "]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.747162855116931*^9, 3.7471629475580263`*^9}, 
   3.747163328033659*^9, 3.747163367848119*^9, {3.747163493823185*^9, 
   3.7471635322167053`*^9}, 3.7471636903049097`*^9, 3.747163807612795*^9, 
   3.747163850360324*^9, {3.747262340420813*^9, 3.7472623638715887`*^9}, {
   3.747308304650399*^9, 3.74730834023879*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0.6666995`"}], "}"}]], "Output",
 CellChangeTimes->{{3.747162855116931*^9, 3.7471629475580263`*^9}, 
   3.747163328033659*^9, 3.747163367848119*^9, {3.747163493823185*^9, 
   3.7471635322167053`*^9}, 3.7471636903049097`*^9, 3.747163807612795*^9, 
   3.747163850360324*^9, {3.747262340420813*^9, 3.7472623638715887`*^9}, {
   3.747308304650399*^9, 3.747308340240847*^9}}]
}, Open  ]],

Cell["seems way too low", "Text",
 CellChangeTimes->{{3.747306828646285*^9, 3.747306837797615*^9}, {
  3.747308388924622*^9, 3.7473083936682043`*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1177, 1118},
WindowMargins->{{-1768, Automatic}, {Automatic, 803}},
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 145, 3, 92, "Title"],
Cell[CellGroupData[{
Cell[749, 29, 95, 1, 80, "Section"],
Cell[847, 32, 177, 4, 30, "Text"],
Cell[1027, 38, 962, 29, 101, "Input"],
Cell[1992, 69, 218, 4, 30, "Text"],
Cell[2213, 75, 364, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[2602, 85, 2073, 61, 105, "Input"],
Cell[4678, 148, 1940, 53, 78, "Output"],
Cell[6621, 203, 2779, 82, 93, "Output"],
Cell[9403, 287, 444, 6, 28, "Output"]
}, Open  ]],
Cell[9862, 296, 238, 5, 30, "Text"],
Cell[10103, 303, 399, 10, 34, "Text"],
Cell[10505, 315, 130, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[10660, 322, 1013, 26, 46, "Input"],
Cell[11676, 350, 58900, 960, 286, "Output"]
}, Open  ]],
Cell[70591, 1313, 158, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[70774, 1320, 582, 15, 28, "Input"],
Cell[71359, 1337, 352, 6, 28, "Output"]
}, Open  ]],
Cell[71726, 1346, 126, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[71877, 1353, 966, 26, 46, "Input"],
Cell[72846, 1381, 482, 9, 47, "Output"],
Cell[73331, 1392, 332, 4, 28, "Output"]
}, Open  ]],
Cell[73678, 1399, 102, 1, 30, "Text"],
Cell[73783, 1402, 163, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[73971, 1409, 1063, 32, 63, "Input"],
Cell[75037, 1443, 681, 23, 56, "Output"],
Cell[75721, 1468, 723, 20, 58, "Output"],
Cell[76447, 1490, 4713, 84, 234, "Output"]
}, Open  ]],
Cell[81175, 1577, 107, 1, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81319, 1583, 95, 1, 80, "Section"],
Cell[81417, 1586, 110, 1, 30, "Text"],
Cell[81530, 1589, 325, 6, 30, "Text"],
Cell[81858, 1597, 773, 21, 48, "Input"],
Cell[82634, 1620, 741, 16, 70, "Text"],
Cell[CellGroupData[{
Cell[83400, 1640, 1300, 36, 63, "Input"],
Cell[84703, 1678, 542, 16, 64, "Output"],
Cell[85248, 1696, 193, 3, 28, "Output"],
Cell[85444, 1701, 10077, 173, 239, "Output"]
}, Open  ]],
Cell[95536, 1877, 134, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[95695, 1884, 1261, 34, 46, "Input"],
Cell[96959, 1920, 10036, 172, 236, "Output"]
}, Open  ]],
Cell[107010, 2095, 412, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[107447, 2106, 1410, 42, 121, "Input"],
Cell[108860, 2150, 1071, 33, 66, "Output"],
Cell[109934, 2185, 1590, 46, 83, "Output"],
Cell[111527, 2233, 3635, 103, 161, "Output"],
Cell[115165, 2338, 855, 23, 109, "Output"]
}, Open  ]],
Cell[116035, 2364, 94, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[116154, 2369, 1095, 29, 80, "Input"],
Cell[117252, 2400, 1823, 50, 106, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119112, 2455, 892, 27, 83, "Input"],
Cell[120007, 2484, 888, 29, 93, "Output"],
Cell[120898, 2515, 523, 16, 66, "Output"]
}, Open  ]],
Cell[121436, 2534, 264, 5, 49, "Text"],
Cell[121703, 2541, 130, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[121858, 2548, 866, 19, 46, "Input"],
Cell[122727, 2569, 3000, 56, 241, "Output"]
}, Open  ]],
Cell[125742, 2628, 111, 1, 30, "Text"],
Cell[125856, 2631, 158, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[126039, 2638, 791, 20, 46, "Input"],
Cell[126833, 2660, 714, 17, 63, "Output"],
Cell[127550, 2679, 451, 8, 28, "Output"]
}, Open  ]],
Cell[128016, 2690, 126, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[128167, 2697, 829, 22, 46, "Input"],
Cell[128999, 2721, 1276, 35, 63, "Output"],
Cell[130278, 2758, 420, 7, 28, "Output"]
}, Open  ]],
Cell[130713, 2768, 150, 2, 30, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
